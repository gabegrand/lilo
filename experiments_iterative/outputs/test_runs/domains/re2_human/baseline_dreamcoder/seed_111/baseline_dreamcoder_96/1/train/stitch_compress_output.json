{
    "cmd": "python run_iterative_experiment.py --experiment_name test_runs --experiment_type baseline_dreamcoder --domain re2_human --encoder re2 --iterations 16 --global_batch_sizes 96 --enumeration_timeout 10 --stitch_params {\"iterations\": 10, \"max_arity\": 3} --random_seeds 111 --no_s3_sync --recognition_train_steps 100",
    "args": {
        "iterations": 10,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 3,
            "threads": 1,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": true,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": true,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": true,
            "rewrite_check": false,
            "utility_by_rewrite": true,
            "dreamcoder_comparison": false,
            "quiet": true
        }
    },
    "original_cost": 14848,
    "final_cost": 5354,
    "compression_ratio": 2.77325364213672,
    "num_abstractions": 10,
    "original": [
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam _k) (_rrevcdr (_rappend _d (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rrevcdr (_rappend _d (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _r (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _i (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $0)))))))))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _f (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $0)))))))))))))",
        "(lam (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _i $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _h $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rrevcdr (_rappend _d (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rrevcdr (cons _b (cdr (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rrevcdr (cons _b (cdr (_rappend _d (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _i (cdr (_rrevcdr (_rappend _d (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (_rrevcdr (_rappend _d (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _i (cdr (_rrevcdr (_rappend _d (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _q (_rrevcdr (_rappend _d (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _q (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _c $0))))))))))",
        "(lam (_rflatten (_rappend _q (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _o $0))))))))))",
        "(lam (_rflatten (_rappend _q (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _s $0))))))))))",
        "(lam (_rflatten (_rappend _q (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _z $0))))))))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _k (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _c $0))))))))))",
        "(lam (_rflatten (_rappend _k (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _q $0))))))))))",
        "(lam (_rflatten (_rappend _k (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _o $0))))))))))",
        "(lam (_rflatten (_rappend _k (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _s $0))))))))))",
        "(lam (_rflatten (_rappend _k (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _z $0))))))))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rappend _d (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _c $0))))))))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _o $0))))))))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _s $0))))))))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _z $0))))))))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _rempty (cdr (_rsplit _rempty (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (cons _v (_rrevcdr (_rappend _d (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _v (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _v (_rsplit _h $0))))",
        "(lam (_rflatten (cons _v (_rsplit _w $0))))",
        "(lam (_rflatten (_rrevcdr (cons _v (_rappend _d (_rsplit _rempty $0))))))"
    ],
    "rewritten": [
        "(lam (fn_3 $0 _n))",
        "(lam (fn_1 $0 (_rconcat _n _a)))",
        "(lam (_rflatten (map (lam _k) (fn_4 $0))))",
        "(lam (fn_0 $0 _r))",
        "(lam (fn_0 (_rflatten (fn_4 $0)) _r))",
        "(lam (_rflatten (fn_4 (fn_0 $0 _r))))",
        "(lam (fn_0 (fn_8 $0) _r))",
        "(lam (fn_0 (fn_0 $0 _f) _r))",
        "(lam (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _i $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _h $0))))",
        "(lam (fn_2 $0))",
        "(lam (fn_0 $0 _f))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (fn_3 $0 _q))",
        "(lam (fn_9 $0))",
        "(lam (fn_7 (cdr (fn_4 $0)) _b))",
        "(lam (fn_7 (cdr (_rsplit _rdot $0)) _b))",
        "(lam (_rflatten (_rrevcdr (cons _b (cdr (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rrevcdr (cons _b (cdr (_rappend _d (_rsplit _rempty $0)))))))",
        "(lam (fn_5 _b $0))",
        "(lam (fn_0 $0 (_rconcat _o _m)))",
        "(lam (fn_1 $0 _i))",
        "(lam (fn_7 (cdr (fn_4 $0)) _i))",
        "(lam (fn_1 (_rflatten (fn_4 $0)) _i))",
        "(lam (fn_1 (fn_9 $0) _i))",
        "(lam (fn_7 (cdr (fn_4 $0)) _i))",
        "(lam (_rflatten (_rappend _q (fn_4 $0))))",
        "(lam (fn_0 (fn_2 $0) _q))",
        "(lam (fn_6 _q $0))",
        "(lam (fn_0 (_rflatten (_rappend _d (_rsplit _s $0))) _q))",
        "(lam (fn_0 (_rflatten (_rappend _d (_rsplit _z $0))) _q))",
        "(lam (fn_5 _a $0))",
        "(lam (fn_8 $0))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (fn_0 (fn_2 $0) _k))",
        "(lam (fn_0 (_rflatten (_rappend _d (_rsplit _q $0))) _k))",
        "(lam (fn_6 _k $0))",
        "(lam (fn_0 (_rflatten (_rappend _d (_rsplit _s $0))) _k))",
        "(lam (fn_0 (_rflatten (_rappend _d (_rsplit _z $0))) _k))",
        "(lam (_rflatten (_rappend _a (fn_4 $0))))",
        "(lam (fn_0 (fn_2 $0) _a))",
        "(lam (fn_6 _a $0))",
        "(lam (fn_0 (_rflatten (_rappend _d (_rsplit _s $0))) _a))",
        "(lam (fn_0 (_rflatten (_rappend _d (_rsplit _z $0))) _a))",
        "(lam (fn_3 $0 _rempty))",
        "(lam (fn_1 $0 _a))",
        "(lam (_rflatten (fn_4 (fn_3 $0 _rempty))))",
        "(lam (fn_1 (fn_3 $0 _n) _rempty))",
        "(lam (_rflatten (cdr (fn_4 (fn_3 $0 _n)))))",
        "(lam (fn_7 (fn_4 $0) _v))",
        "(lam (fn_7 (_rsplit _rempty $0) _v))",
        "(lam (fn_7 (_rsplit _h $0) _v))",
        "(lam (fn_7 (_rsplit _w $0) _v))",
        "(lam (_rflatten (_rrevcdr (cons _v (_rappend _d (_rsplit _rempty $0))))))"
    ],
    "rewritten_dreamcoder": [
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _n))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat _n _a)))",
        "(lambda (_rflatten (map (lambda _k) (#(lambda (_rrevcdr (_rappend _d (_rsplit _rempty $0)))) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1)))))))) $0 _r))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1)))))))) (_rflatten (#(lambda (_rrevcdr (_rappend _d (_rsplit _rempty $0)))) $0)) _r))",
        "(lambda (_rflatten (#(lambda (_rrevcdr (_rappend _d (_rsplit _rempty $0)))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1)))))))) $0 _r))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1)))))))) (#(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1)))))))) $0 _i)) $0) _r))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1)))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1)))))))) $0 _f) _r))",
        "(lambda (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _i $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _h $0))))",
        "(lambda (#(lambda (_rflatten (_rappend _d (_rsplit _c $0)))) $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1)))))))) $0 _f))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _q))",
        "(lambda (#(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _b)) $0))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 $1)))) (cdr (#(lambda (_rrevcdr (_rappend _d (_rsplit _rempty $0)))) $0)) _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 $1)))) (cdr (_rsplit _rdot $0)) _b))",
        "(lambda (_rflatten (_rrevcdr (cons _b (cdr (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _rempty $0)))))))))",
        "(lambda (_rflatten (_rrevcdr (cons _b (cdr (_rappend _d (_rsplit _rempty $0)))))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 _w)))) _b $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1)))))))) $0 (_rconcat _o _m)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _i))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 $1)))) (cdr (#(lambda (_rrevcdr (_rappend _d (_rsplit _rempty $0)))) $0)) _i))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (_rflatten (#(lambda (_rrevcdr (_rappend _d (_rsplit _rempty $0)))) $0)) _i))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _b)) $0) _i))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 $1)))) (cdr (#(lambda (_rrevcdr (_rappend _d (_rsplit _rempty $0)))) $0)) _i))",
        "(lambda (_rflatten (_rappend _q (#(lambda (_rrevcdr (_rappend _d (_rsplit _rempty $0)))) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1)))))))) (#(lambda (_rflatten (_rappend _d (_rsplit _c $0)))) $0) _q))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1)))))))) (_rflatten (_rappend _d (_rsplit _o $0))) $1))) _q $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1)))))))) (_rflatten (_rappend _d (_rsplit _s $0))) _q))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1)))))))) (_rflatten (_rappend _d (_rsplit _z $0))) _q))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 _w)))) _a $0))",
        "(lambda (#(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1)))))))) $0 _i)) $0))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1)))))))) (#(lambda (_rflatten (_rappend _d (_rsplit _c $0)))) $0) _k))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1)))))))) (_rflatten (_rappend _d (_rsplit _q $0))) _k))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1)))))))) (_rflatten (_rappend _d (_rsplit _o $0))) $1))) _k $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1)))))))) (_rflatten (_rappend _d (_rsplit _s $0))) _k))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1)))))))) (_rflatten (_rappend _d (_rsplit _z $0))) _k))",
        "(lambda (_rflatten (_rappend _a (#(lambda (_rrevcdr (_rappend _d (_rsplit _rempty $0)))) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1)))))))) (#(lambda (_rflatten (_rappend _d (_rsplit _c $0)))) $0) _a))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1)))))))) (_rflatten (_rappend _d (_rsplit _o $0))) $1))) _a $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1)))))))) (_rflatten (_rappend _d (_rsplit _s $0))) _a))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1)))))))) (_rflatten (_rappend _d (_rsplit _z $0))) _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _a))",
        "(lambda (_rflatten (#(lambda (_rrevcdr (_rappend _d (_rsplit _rempty $0)))) (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _rempty))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _n) _rempty))",
        "(lambda (_rflatten (cdr (#(lambda (_rrevcdr (_rappend _d (_rsplit _rempty $0)))) (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1))))))) $0 _n)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 $1)))) (#(lambda (_rrevcdr (_rappend _d (_rsplit _rempty $0)))) $0) _v))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 $1)))) (_rsplit _rempty $0) _v))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 $1)))) (_rsplit _h $0) _v))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 $1)))) (_rsplit _w $0) _v))",
        "(lambda (_rflatten (_rrevcdr (cons _v (_rappend _d (_rsplit _rempty $0))))))"
    ],
    "abstractions": [
        {
            "body": "(_rflatten (_rappend #1 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty #0))))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1))))))))",
            "arity": 2,
            "name": "fn_0",
            "utility": 3131,
            "final_cost": 11717,
            "compression_ratio": 1.2672185713066484,
            "cumulative_compression_ratio": 1.2672185713066484,
            "num_uses": 23,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_0 $0 (_rconcat _o _m)": "(_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (_rappend _d (_rsplit _c $0))) _a": "(_rflatten (_rappend _a (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _c $0)))))))))"
                },
                {
                    "fn_0 (_rflatten (_rappend _d (_rsplit _o $0))) _a": "(_rflatten (_rappend _a (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _o $0)))))))))"
                },
                {
                    "fn_0 (_rflatten (_rappend _d (_rsplit _s $0))) _a": "(_rflatten (_rappend _a (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _s $0)))))))))"
                },
                {
                    "fn_0 (_rflatten (_rappend _d (_rsplit _z $0))) _a": "(_rflatten (_rappend _a (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _z $0)))))))))"
                },
                {
                    "fn_0 $0 _f": "(_rflatten (_rappend _f (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _i": "(_rflatten (_rappend _i (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (_rappend _d (_rsplit _c $0))) _k": "(_rflatten (_rappend _k (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _c $0)))))))))"
                },
                {
                    "fn_0 (_rflatten (_rappend _d (_rsplit _o $0))) _k": "(_rflatten (_rappend _k (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _o $0)))))))))"
                },
                {
                    "fn_0 (_rflatten (_rappend _d (_rsplit _q $0))) _k": "(_rflatten (_rappend _k (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _q $0)))))))))"
                },
                {
                    "fn_0 (_rflatten (_rappend _d (_rsplit _s $0))) _k": "(_rflatten (_rappend _k (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _s $0)))))))))"
                },
                {
                    "fn_0 (_rflatten (_rappend _d (_rsplit _z $0))) _k": "(_rflatten (_rappend _k (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _z $0)))))))))"
                },
                {
                    "fn_0 (_rflatten (_rappend _d (_rsplit _c $0))) _q": "(_rflatten (_rappend _q (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _c $0)))))))))"
                },
                {
                    "fn_0 (_rflatten (_rappend _d (_rsplit _o $0))) _q": "(_rflatten (_rappend _q (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _o $0)))))))))"
                },
                {
                    "fn_0 (_rflatten (_rappend _d (_rsplit _s $0))) _q": "(_rflatten (_rappend _q (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _s $0)))))))))"
                },
                {
                    "fn_0 (_rflatten (_rappend _d (_rsplit _z $0))) _q": "(_rflatten (_rappend _q (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _z $0)))))))))"
                },
                {
                    "fn_0 $0 _r": "(_rflatten (_rappend _r (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (_rappend _f (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $0)))))) _r": "(_rflatten (_rappend _r (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _f (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $0))))))))))))"
                },
                {
                    "fn_0 (_rflatten (_rappend _i (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $0)))))) _r": "(_rflatten (_rappend _r (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rappend _i (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $0))))))))))))"
                },
                {
                    "fn_0 (_rflatten (_rrevcdr (_rappend _d (_rsplit _rempty $0)))) _r": "(_rflatten (_rappend _r (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty (_rflatten (_rrevcdr (_rappend _d (_rsplit _rempty $0))))))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (cdr (_rsplit _rempty #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1))))))",
            "arity": 2,
            "name": "fn_1",
            "utility": 2424,
            "final_cost": 9293,
            "compression_ratio": 1.2608414935973313,
            "cumulative_compression_ratio": 1.597761756160551,
            "num_uses": 10,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_1 $0 (_rconcat _a _w)": "(_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _b _w)": "(_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _n _a)": "(_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 $0 _a": "(_rflatten (cons _a (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 $0 _b": "(_rflatten (cons _b (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 $0 _i": "(_rflatten (cons _i (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_1 (_rflatten (_rrevcdr (_rappend _d (_rsplit _rempty $0)))) _i": "(_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (_rrevcdr (_rappend _d (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 (_rflatten (cons _b (cdr (_rsplit _rempty $0)))) _i": "(_rflatten (cons _i (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))) _rempty": "(_rflatten (cons _rempty (cdr (_rsplit _rempty (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0)))))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend _d (_rsplit _c #0)))",
            "dreamcoder": "#(lambda (_rflatten (_rappend _d (_rsplit _c $0))))",
            "arity": 1,
            "name": "fn_2",
            "utility": 1616,
            "final_cost": 7677,
            "compression_ratio": 1.2104988927966653,
            "cumulative_compression_ratio": 1.9340888367852025,
            "num_uses": 4,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_2 $0": "(_rflatten (_rappend _d (_rsplit _c $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (cons _a (cdr (_rsplit _rempty #0)))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr (_rsplit _rempty $1)))))))",
            "arity": 2,
            "name": "fn_3",
            "utility": 808,
            "final_cost": 6869,
            "compression_ratio": 1.1176299315766487,
            "cumulative_compression_ratio": 2.161595574319406,
            "num_uses": 6,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_3 $0 _n": "(_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_3 $0 _q": "(_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_3 $0 _rempty": "(_rflatten (cons _rempty (cons _a (cdr (_rsplit _rempty $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rrevcdr (_rappend _d (_rsplit _rempty #0)))",
            "dreamcoder": "#(lambda (_rrevcdr (_rappend _d (_rsplit _rempty $0))))",
            "arity": 1,
            "name": "fn_4",
            "utility": 505,
            "final_cost": 6364,
            "compression_ratio": 1.079352608422376,
            "cumulative_compression_ratio": 2.3331238214959145,
            "num_uses": 12,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_4 $0": "(_rrevcdr (_rappend _d (_rsplit _rempty $0)))"
                },
                {
                    "fn_4 (fn_0 $0 _r)": "(_rrevcdr (_rappend _d (_rsplit _rempty (fn_0 $0 _r))))"
                },
                {
                    "fn_4 (fn_3 $0 _n)": "(_rrevcdr (_rappend _d (_rsplit _rempty (fn_3 $0 _n))))"
                },
                {
                    "fn_4 (fn_3 $0 _rempty)": "(_rrevcdr (_rappend _d (_rsplit _rempty (fn_3 $0 _rempty))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_1 #1 (_rconcat #0 _w))",
            "dreamcoder": "#(lambda (lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 _w))))",
            "arity": 2,
            "name": "fn_5",
            "utility": 404,
            "final_cost": 5960,
            "compression_ratio": 1.0677852348993289,
            "cumulative_compression_ratio": 2.491275167785235,
            "num_uses": 2,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_5 _a $0": "(fn_1 $0 (_rconcat _a _w))"
                },
                {
                    "fn_5 _b $0": "(fn_1 $0 (_rconcat _b _w))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_0 (_rflatten (_rappend _d (_rsplit _o #1))) #0)",
            "dreamcoder": "#(lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1)))))))) (_rflatten (_rappend _d (_rsplit _o $0))) $1)))",
            "arity": 2,
            "name": "fn_6",
            "utility": 303,
            "final_cost": 5657,
            "compression_ratio": 1.053561958635319,
            "cumulative_compression_ratio": 2.6247127452713452,
            "num_uses": 3,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_6 _a $0": "(fn_0 (_rflatten (_rappend _d (_rsplit _o $0))) _a)"
                },
                {
                    "fn_6 _k $0": "(fn_0 (_rflatten (_rappend _d (_rsplit _o $0))) _k)"
                },
                {
                    "fn_6 _q $0": "(fn_0 (_rflatten (_rappend _d (_rsplit _o $0))) _q)"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 #0))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 $1))))",
            "arity": 2,
            "name": "fn_7",
            "utility": 101,
            "final_cost": 5556,
            "compression_ratio": 1.0181785457163426,
            "cumulative_compression_ratio": 2.6724262059035278,
            "num_uses": 8,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_7 (cdr (_rsplit _rdot $0)) _b": "(_rflatten (cons _b (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_7 (cdr (fn_4 $0)) _b": "(_rflatten (cons _b (cdr (fn_4 $0))))"
                },
                {
                    "fn_7 (cdr (fn_4 $0)) _i": "(_rflatten (cons _i (cdr (fn_4 $0))))"
                },
                {
                    "fn_7 (_rsplit _h $0) _v": "(_rflatten (cons _v (_rsplit _h $0)))"
                },
                {
                    "fn_7 (_rsplit _rempty $0) _v": "(_rflatten (cons _v (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 (_rsplit _w $0) _v": "(_rflatten (cons _v (_rsplit _w $0)))"
                },
                {
                    "fn_7 (fn_4 $0) _v": "(_rflatten (cons _v (fn_4 $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_0 #0 _i)",
            "dreamcoder": "#(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rrevcdr (_rappend _d (_rsplit _rempty $1)))))))) $0 _i))",
            "arity": 1,
            "name": "fn_8",
            "utility": 101,
            "final_cost": 5455,
            "compression_ratio": 1.0185151237396883,
            "cumulative_compression_ratio": 2.7219065077910174,
            "num_uses": 2,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_8 $0": "(fn_0 $0 _i)"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_1 #0 _b)",
            "dreamcoder": "#(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rempty $1)))))) $0 _b))",
            "arity": 1,
            "name": "fn_9",
            "utility": 101,
            "final_cost": 5354,
            "compression_ratio": 1.018864400448263,
            "cumulative_compression_ratio": 2.77325364213672,
            "num_uses": 2,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_9 $0": "(fn_1 $0 _b)"
                }
            ],
            "dc_comparison_millis": null
        }
    ]
}