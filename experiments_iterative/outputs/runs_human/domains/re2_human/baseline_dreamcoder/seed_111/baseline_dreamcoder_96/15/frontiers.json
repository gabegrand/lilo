{
    "_summary": {
        "n_tasks_solved": {
            "train": 211,
            "test": 247
        }
    },
    "train": {
        "re2_train_0_if_the_word_ends_with_any_letter_add_w_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_0_if_the_word_ends_with_any_letter_add_w_after_that ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat (_rtail (_rsplit _rdot $0)) _w) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _w (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (_rappend _w (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _w (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _w (_rsplit _e $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _w (_rsplit _j $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 5.5455403327941895
        },
        "re2_train_1_if_there_is_consonant_replace_that_with_j_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_1_if_there_is_consonant_replace_that_with_j_p ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _j _p) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_2_if_the_word_ends_with_consonant_s_replace_that_with_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_2_if_the_word_ends_with_consonant_s_replace_that_with_b ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _s) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _s) $0))) _b (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _s) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _s) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_3_if_there_is_d_replace_that_with_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_3_if_there_is_d_replace_that_with_y ((lambda (_rflatten (map (lambda (if (_rmatch _d $0) _y $0)) (_rsplit _d $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _y _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _y _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _y _d))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _y) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _y _rempty) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 5.398475646972656
        },
        "re2_train_4_if_there_is_b_add_k_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_4_if_there_is_b_add_k_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _b $0) (_rconcat _k $0) $0)) (_rsplit _b $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _b) _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _k _b) _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _b) _b))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _b) (_rconcat _rempty _b)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _k _b)) _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.204341411590576
        },
        "re2_train_5_if_the_word_ends_with_consonant_consonant_double_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_5_if_the_word_ends_with_consonant_consonant_double_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_6_if_the_word_starts_with_any_letter_any_letter_add_f_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_6_if_the_word_starts_with_any_letter_any_letter_add_f_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat (car (_rsplit (_rconcat _rdot _rdot) $0)) _f) (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_7_if_the_word_starts_with_consonant_replace_that_with_j_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_7_if_the_word_starts_with_consonant_replace_that_with_j_e ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _j _e) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_8_if_the_word_starts_with_any_letter_consonant_replace_that_with_c_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_8_if_the_word_starts_with_any_letter_consonant_replace_that_with_c_t ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _c _t) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_9_if_the_word_starts_with_any_letter_vowel_add_j_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_9_if_the_word_starts_with_any_letter_vowel_add_j_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _j (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_10_if_there_is_any_letter_any_letter_replace_that_with_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_10_if_there_is_any_letter_any_letter_replace_that_with_i ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _rdot) $0) _i $0)) (_rsplit (_rconcat _rdot _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_11_if_the_word_starts_with_any_letter_replace_that_with_r_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_11_if_the_word_starts_with_any_letter_replace_that_with_r_u ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _r _u) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _u _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _u _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _u _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _u _rempty) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _u (_rconcat _r _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 17.475037336349487
        },
        "re2_train_13_if_the_word_starts_with_vowel_any_letter_replace_that_with_q_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_13_if_the_word_starts_with_vowel_any_letter_replace_that_with_q_v ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat _q _v) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_14_if_there_is_t_replace_that_with_a_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_14_if_there_is_t_replace_that_with_a_x ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _a _x) $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _a _x) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _a _x) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _a _x) _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _a _rempty) _x) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _a _x) _rempty) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 11.834944009780884
        },
        "re2_train_15_if_there_is_vowel_replace_that_with_n_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_15_if_there_is_vowel_replace_that_with_n_n ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _n _n) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_16_if_there_is_a_consonant_replace_that_with_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_16_if_there_is_a_consonant_replace_that_with_f ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _a (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _f $0)) (_rsplit (_rconcat _a (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_17_if_the_word_starts_with_any_letter_any_letter_replace_that_with_l_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_17_if_the_word_starts_with_any_letter_any_letter_replace_that_with_l_n ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat _l _n) (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _l _n) (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _l (cons _n (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _l (cons _n (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0)))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _l (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _n (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0)))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _l (cons _n (cdr (cdr (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 40.8925564289093
        },
        "re2_train_18_if_the_word_starts_with_any_letter_consonant_add_p_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_18_if_the_word_starts_with_any_letter_consonant_add_p_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _p) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_19_if_the_word_ends_with_any_letter_consonant_replace_that_with_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_19_if_the_word_ends_with_any_letter_consonant_replace_that_with_v ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _v (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) _v $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _v (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) _rempty $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _v (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) _rempty (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _v (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)))))) _rempty $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _v (_rrevcdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _rempty)))) _rempty $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 5.44382643699646
        },
        "re2_train_20_if_there_is_e_add_e_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_20_if_there_is_e_add_e_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _e $0) (_rconcat _e $0) $0)) (_rsplit _e $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _e) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _e _e) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _e) _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _e) _e) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e (_rconcat _e _rempty)) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 38.285266399383545
        },
        "re2_train_21_if_the_word_starts_with_any_letter_replace_that_with_n_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_21_if_the_word_starts_with_any_letter_replace_that_with_n_a ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _n _a) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _a _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _n))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a (_rconcat _n _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _n _a) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 31.58961820602417
        },
        "re2_train_22_if_the_word_ends_with_consonant_any_letter_replace_that_with_j_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_22_if_the_word_ends_with_consonant_any_letter_replace_that_with_j_g ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _j _g) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_23_if_there_is_any_letter_replace_that_with_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_23_if_there_is_any_letter_replace_that_with_k ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) _k $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda _k) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _k _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _k) (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _k) (map (lambda _k) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda _k) (#(lambda (_rsplit _rdot $0)) $0))) _v _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.00079345703125
        },
        "re2_train_24_if_the_word_starts_with_any_letter_any_letter_add_b_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_24_if_the_word_starts_with_any_letter_any_letter_add_b_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat (car (_rsplit (_rconcat _rdot _rdot) $0)) _b) (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_25_if_there_is_vowel_vowel_replace_that_with_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_25_if_there_is_vowel_vowel_replace_that_with_d ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _d $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_26_if_the_word_ends_with_any_letter_replace_that_with_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_26_if_the_word_ends_with_any_letter_replace_that_with_r ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) _r (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _rempty _r)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0008134841918945312
        },
        "re2_train_27_if_there_is_consonant_replace_that_with_v_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_27_if_there_is_consonant_replace_that_with_v_i ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _v _i) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_28_if_the_word_starts_with_any_letter_consonant_replace_that_with_w_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_28_if_the_word_starts_with_any_letter_consonant_replace_that_with_w_t ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _w _t) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_29_if_the_word_ends_with_any_letter_any_letter_replace_that_with_o_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_29_if_the_word_ends_with_any_letter_any_letter_replace_that_with_o_u ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _rdot) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat _o _u) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _o _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _o _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _o _u))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _o (_rconcat _rempty _u)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (_rflatten (_rsplit _rempty $0)) _o _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 6.001602649688721
        },
        "re2_train_30_if_the_word_ends_with_n_any_letter_replace_that_with_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_30_if_the_word_ends_with_n_any_letter_replace_that_with_v ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _n _rdot) (_rtail (_rsplit (_rconcat _n _rdot) $0))) _v (_rtail (_rsplit (_rconcat _n _rdot) $0))) (_rrevcdr (_rsplit (_rconcat _n _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_31_if_there_is_consonant_o_replace_that_with_p_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_31_if_there_is_consonant_o_replace_that_with_p_g ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _o) $0) (_rconcat _p _g) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _o) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_32_if_there_is_p_replace_that_with_f_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_32_if_there_is_p_replace_that_with_f_w ((lambda (_rflatten (map (lambda (if (_rmatch _p $0) (_rconcat _f _w) $0)) (_rsplit _p $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f _w) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _f _w) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f _w) _p))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _f _rempty) _w) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _f _w) _rempty) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 19.215474605560303
        },
        "re2_train_33_if_there_is_e_s_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_33_if_there_is_e_s_remove_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _e _s) $0) _rempty $0)) (_rsplit (_rconcat _e _s) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_34_if_the_word_ends_with_any_letter_add_d_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_34_if_the_word_ends_with_any_letter_add_d_after_that ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat (_rtail (_rsplit _rdot $0)) _d) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _d (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (_rappend _d (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _d (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _d (_rsplit _e $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (_rappend _d (_rsplit _e $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 5.93250584602356
        },
        "re2_train_35_if_there_is_any_letter_replace_that_with_q_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_35_if_there_is_any_letter_replace_that_with_q_j ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _q _j) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _j _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _j _q))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 (_rconcat _j _rempty) _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _j (_rconcat _q _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _j) _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 6.0130627155303955
        },
        "re2_train_36_if_the_word_starts_with_consonant_replace_that_with_p_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_36_if_the_word_starts_with_consonant_replace_that_with_p_i ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _p _i) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_37_if_there_is_g_add_q_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_37_if_there_is_g_add_q_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _g $0) (_rconcat _q $0) $0)) (_rsplit _g $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _q _g) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _q _g) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _q _g) _g))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _q _rempty) _g) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _q) _g) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 25.53712272644043
        },
        "re2_train_38_if_there_is_vowel_any_letter_replace_that_with_v_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_38_if_there_is_vowel_any_letter_replace_that_with_v_g ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) (_rconcat _v _g) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_39_if_there_is_c_add_d_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_39_if_there_is_c_add_d_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _c $0) (_rconcat _d $0) $0)) (_rsplit _c $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _c) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _d _c) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _c) _c))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d (_rconcat _rempty _c)) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _c) (_rconcat _c _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 18.930165767669678
        },
        "re2_train_40_if_the_word_starts_with_vowel_replace_that_with_e_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_40_if_the_word_starts_with_vowel_replace_that_with_e_s ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _e _s) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_41_if_there_is_any_letter_add_v_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_41_if_there_is_any_letter_add_v_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat $0 _v) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (map (lambda (_rconcat $0 _v)) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _rempty (map (lambda (_rconcat $0 _v)) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 5.937238454818726
        },
        "re2_train_42_if_the_word_starts_with_consonant_vowel_add_g_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_42_if_the_word_starts_with_consonant_vowel_add_g_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _g (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_43_if_there_is_i_replace_that_with_k_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_43_if_there_is_i_replace_that_with_k_t ((lambda (_rflatten (map (lambda (if (_rmatch _i $0) (_rconcat _k _t) $0)) (_rsplit _i $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _t) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _k _t) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _t) _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _k _rempty) _t) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _k _t) _rempty) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 17.92105484008789
        },
        "re2_train_44_if_there_is_consonant_replace_that_with_p_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_44_if_there_is_consonant_replace_that_with_p_x ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _p _x) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_45_if_there_is_vowel_add_n_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_45_if_there_is_vowel_add_n_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat $0 _n) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_46_if_the_word_ends_with_any_letter_consonant_add_a_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_46_if_the_word_ends_with_any_letter_consonant_add_a_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _a (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_47_if_there_is_u_replace_that_with_l_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_47_if_there_is_u_replace_that_with_l_q ((lambda (_rflatten (map (lambda (if (_rmatch _u $0) (_rconcat _l _q) $0)) (_rsplit _u $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _l _q) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _l _q) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _l _q) _u))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _l _q) _rempty) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _l _rempty) _q) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 12.79366397857666
        },
        "re2_train_48_if_there_is_vowel_add_c_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_48_if_there_is_vowel_add_c_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat $0 _c) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_49_if_the_word_starts_with_consonant_e_add_l_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_49_if_the_word_starts_with_consonant_e_add_l_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0))) (_rconcat _l (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_50_if_the_word_ends_with_consonant_add_o_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_50_if_the_word_ends_with_consonant_add_o_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)) _o) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _o $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _o (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))) _o $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)) _o $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _i $0) _o $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 11.909712314605713
        },
        "re2_train_51_if_the_word_ends_with_vowel_any_letter_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_51_if_the_word_ends_with_vowel_any_letter_replace_that_with_w ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) _w (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_52_if_the_word_ends_with_any_letter_replace_that_with_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_52_if_the_word_ends_with_any_letter_replace_that_with_f ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) _f (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _f))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.000751495361328125
        },
        "re2_train_53_if_the_word_ends_with_any_letter_replace_that_with_t_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_53_if_the_word_ends_with_any_letter_replace_that_with_t_m ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _t _m) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _t _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _t _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _t _m)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (_rsplit _rempty $0)) (_rconcat _t _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _t _m)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0008165836334228516
        },
        "re2_train_54_if_the_word_starts_with_any_letter_consonant_replace_that_with_j_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_54_if_the_word_starts_with_any_letter_consonant_replace_that_with_j_h ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _j _h) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_55_if_the_word_starts_with_any_letter_vowel_add_w_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_55_if_the_word_starts_with_any_letter_vowel_add_w_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _w (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_56_if_there_is_vowel_replace_that_with_u_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_56_if_there_is_vowel_replace_that_with_u_b ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _u _b) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_57_if_there_is_vowel_t_replace_that_with_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_57_if_there_is_vowel_t_replace_that_with_n ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _t) $0) _n $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _t) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_59_if_the_word_ends_with_vowel_any_letter_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_59_if_the_word_ends_with_vowel_any_letter_replace_that_with_t ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) _t (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_60_if_the_word_starts_with_any_letter_replace_that_with_e_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_60_if_the_word_starts_with_any_letter_replace_that_with_e_e ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _e _e) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _e _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _e _e) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _e) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 17.33874011039734
        },
        "re2_train_61_if_the_word_ends_with_any_letter_s_replace_that_with_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_61_if_the_word_ends_with_any_letter_s_replace_that_with_f ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _s) (_rtail (_rsplit (_rconcat _rdot _s) $0))) _f (_rtail (_rsplit (_rconcat _rdot _s) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _s) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_62_if_the_word_starts_with_consonant_consonant_replace_that_with_q_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_62_if_the_word_starts_with_consonant_consonant_replace_that_with_q_l ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _q _l) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_63_if_the_word_starts_with_vowel_any_letter_replace_that_with_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_63_if_the_word_starts_with_vowel_any_letter_replace_that_with_d ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) _d (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_64_if_there_is_o_any_letter_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_64_if_there_is_o_any_letter_replace_that_with_t ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _o _rdot) $0) _t $0)) (_rsplit (_rconcat _o _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_65_if_there_is_d_vowel_add_q_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_65_if_there_is_d_vowel_add_q_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _d (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat $0 _q) $0)) (_rsplit (_rconcat _d (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_66_if_the_word_starts_with_any_letter_any_letter_add_j_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_66_if_the_word_starts_with_any_letter_any_letter_add_j_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat _j (car (_rsplit (_rconcat _rdot _rdot) $0))) (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _j (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _j (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _j (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _a $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 31.899269819259644
        },
        "re2_train_67_if_there_is_any_letter_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_67_if_there_is_any_letter_replace_that_with_j ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) _j $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda _j) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _j _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _rempty _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _j _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _j) _j _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.00060272216796875
        },
        "re2_train_68_if_there_is_any_letter_replace_that_with_h_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_68_if_there_is_any_letter_replace_that_with_h_s ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _h _s) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _s _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _s _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _s)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _g) _s _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _j) _s _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0007138252258300781
        },
        "re2_train_69_if_the_word_ends_with_consonant_replace_that_with_i_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_69_if_the_word_ends_with_consonant_replace_that_with_i_h ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _i _h) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _h _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _h _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _h _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _h (_rconcat _i _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)) _h $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 5.907577037811279
        },
        "re2_train_70_if_the_word_starts_with_consonant_replace_that_with_a_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_70_if_the_word_starts_with_consonant_replace_that_with_a_g ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _a _g) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _g _a) $0 _a) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _g _a) $0 _i) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 284.1479501724243
        },
        "re2_train_71_if_the_word_starts_with_any_letter_replace_that_with_w_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_71_if_the_word_starts_with_any_letter_replace_that_with_w_i ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _w _i) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _i _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _w))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _w) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.938867330551147
        },
        "re2_train_72_if_the_word_ends_with_d_replace_that_with_i_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_72_if_the_word_ends_with_d_replace_that_with_i_u ((lambda (_rflatten (_rappend (if (_rmatch _d (_rtail (_rsplit _d $0))) (_rconcat _i _u) (_rtail (_rsplit _d $0))) (_rrevcdr (_rsplit _d $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 (_rconcat _i _u) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _i _u) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 (_rconcat _i _u) _d))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 (_rconcat _rempty (_rconcat _i _u)) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 (_rconcat _i _u) _d) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.930639266967773
        },
        "re2_train_73_if_there_is_consonant_t_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_73_if_there_is_consonant_t_replace_that_with_q ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _t) $0) _q $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _t) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_74_if_there_is_vowel_add_i_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_74_if_there_is_vowel_add_i_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat $0 _i) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_75_if_the_word_starts_with_consonant_vowel_replace_that_with_o_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_75_if_the_word_starts_with_consonant_vowel_replace_that_with_o_t ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _o _t) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_76_if_there_is_r_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_76_if_there_is_r_replace_that_with_j ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) _j $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _j _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _j _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _j _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _j _rempty) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _j) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 18.958752870559692
        },
        "re2_train_77_if_there_is_t_replace_that_with_t_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_77_if_there_is_t_replace_that_with_t_x ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _t _x) $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t _x) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _t _x) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t _x) _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _t _rempty) _x) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _t _x) _rempty) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 11.431828260421753
        },
        "re2_train_78_if_the_word_starts_with_any_letter_replace_that_with_y_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_78_if_the_word_starts_with_any_letter_replace_that_with_y_w ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _y _w) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _w _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _y))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _y _w) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w (_rconcat _rempty _y)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 12.463737487792969
        },
        "re2_train_79_if_there_is_consonant_consonant_add_w_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_79_if_there_is_consonant_consonant_add_w_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat $0 _w) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_80_if_the_word_starts_with_consonant_consonant_replace_that_with_v_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_80_if_the_word_starts_with_consonant_consonant_replace_that_with_v_e ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _v _e) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_81_if_the_word_starts_with_any_letter_replace_that_with_c_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_81_if_the_word_starts_with_any_letter_replace_that_with_c_v ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _c _v) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _v _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _v _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _v _c))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _c _v) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _c _v)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 29.523006200790405
        },
        "re2_train_82_if_there_is_consonant_vowel_replace_that_with_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_82_if_there_is_consonant_vowel_replace_that_with_h ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _h $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_83_if_there_is_consonant_replace_that_with_c_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_83_if_there_is_consonant_replace_that_with_c_m ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _c _m) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_84_if_there_is_vowel_add_c_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_84_if_there_is_vowel_add_c_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _c $0) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_85_if_the_word_ends_with_vowel_consonant_add_g_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_85_if_the_word_ends_with_vowel_consonant_add_g_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _g) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_86_if_the_word_starts_with_vowel_consonant_replace_that_with_k_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_86_if_the_word_starts_with_vowel_consonant_replace_that_with_k_b ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _k _b) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_87_if_the_word_starts_with_vowel_add_p_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_87_if_the_word_starts_with_vowel_add_p_before_that ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _p (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_88_if_there_is_b_replace_that_with_y_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_88_if_there_is_b_replace_that_with_y_a ((lambda (_rflatten (map (lambda (if (_rmatch _b $0) (_rconcat _y _a) $0)) (_rsplit _b $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _y _a) _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _y _a) _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _y _a) _b))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _y _a) _rempty) _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _y _rempty) _a) _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 29.633877515792847
        },
        "re2_train_89_if_the_word_starts_with_consonant_vowel_replace_that_with_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_89_if_the_word_starts_with_consonant_vowel_replace_that_with_v ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _v (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_90_if_the_word_starts_with_vowel_replace_that_with_j_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_90_if_the_word_starts_with_vowel_replace_that_with_j_l ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _j _l) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_91_if_the_word_starts_with_consonant_vowel_add_t_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_91_if_the_word_starts_with_consonant_vowel_add_t_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _t (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_92_if_there_is_any_letter_consonant_add_k_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_92_if_there_is_any_letter_consonant_add_k_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat $0 _k) $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_93_if_the_word_starts_with_vowel_replace_that_with_u_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_93_if_the_word_starts_with_vowel_replace_that_with_u_c ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _u _c) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_94_if_the_word_starts_with_consonant_vowel_add_x_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_94_if_the_word_starts_with_consonant_vowel_add_x_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _x (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_95_if_the_word_starts_with_consonant_any_letter_replace_that_with_d_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_95_if_the_word_starts_with_consonant_any_letter_replace_that_with_d_i ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _d _i) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_96_if_there_is_vowel_vowel_replace_that_with_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_96_if_there_is_vowel_vowel_replace_that_with_y ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _y $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_97_if_there_is_any_letter_l_replace_that_with_j_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_97_if_there_is_any_letter_l_replace_that_with_j_b ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _l) $0) (_rconcat _j _b) $0)) (_rsplit (_rconcat _rdot _l) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_98_if_the_word_starts_with_consonant_replace_that_with_g_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_98_if_the_word_starts_with_consonant_replace_that_with_g_d ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _g _d) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _d _g) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _d _g) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _d _g) $0 _a) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _d _g) $0 _a) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _d _g) $0 _e) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.2477765083313
        },
        "re2_train_99_if_there_is_t_replace_that_with_d_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_99_if_there_is_t_replace_that_with_d_q ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _d _q) $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _q) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _d _q) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _q) _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _d _q) _rempty) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _q) (_rconcat _t _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 18.986894369125366
        },
        "re2_train_100_if_the_word_starts_with_vowel_replace_that_with_e_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_100_if_the_word_starts_with_vowel_replace_that_with_e_i ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _e _i) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_101_if_the_word_starts_with_consonant_replace_that_with_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_101_if_the_word_starts_with_consonant_replace_that_with_n ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) _n (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _rempty) $0 _i) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _rempty) $0 _u) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _n) $0 _i) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _n) $0 _u) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _rempty) $0 _i) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 92.90134382247925
        },
        "re2_train_102_if_the_word_starts_with_any_letter_vowel_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_102_if_the_word_starts_with_any_letter_vowel_replace_that_with_t ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _t (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_103_if_the_word_starts_with_any_letter_replace_that_with_q_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_103_if_the_word_starts_with_any_letter_replace_that_with_q_a ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _q _a) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _a _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _q))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _a) _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _q _a)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 25.419439554214478
        },
        "re2_train_104_if_there_is_vowel_any_letter_replace_that_with_x_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_104_if_there_is_vowel_any_letter_replace_that_with_x_v ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) (_rconcat _x _v) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_105_if_there_is_vowel_any_letter_replace_that_with_j_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_105_if_there_is_vowel_any_letter_replace_that_with_j_r ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) (_rconcat _j _r) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_106_if_the_word_starts_with_vowel_consonant_add_j_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_106_if_the_word_starts_with_vowel_consonant_add_j_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _j (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_107_if_there_is_any_letter_consonant_add_n_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_107_if_there_is_any_letter_consonant_add_n_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat $0 _n) $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_108_if_the_word_starts_with_consonant_replace_that_with_j_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_108_if_the_word_starts_with_consonant_replace_that_with_j_b ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _j _b) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _j) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _j) $0 _a) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _j) $0 _e) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _j) $0 _e) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _j) $0 _u) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 18.987203121185303
        },
        "re2_train_109_if_there_is_d_replace_that_with_c_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_109_if_there_is_d_replace_that_with_c_t ((lambda (_rflatten (map (lambda (if (_rmatch _d $0) (_rconcat _c _t) $0)) (_rsplit _d $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _t) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _c _t) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _t) _d))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _c _rempty) _t) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _c _t) _rempty) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.221052169799805
        },
        "re2_train_110_if_there_is_consonant_consonant_replace_that_with_l_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_110_if_there_is_consonant_consonant_replace_that_with_l_h ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _l _h) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_111_if_the_word_starts_with_any_letter_replace_that_with_g_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_111_if_the_word_starts_with_any_letter_replace_that_with_g_a ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _g _a) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _a _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _g))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _g _a) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a (_rconcat _g _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.60360813140869
        },
        "re2_train_112_if_there_is_consonant_o_replace_that_with_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_112_if_there_is_consonant_o_replace_that_with_b ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _o) $0) _b $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _o) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_113_if_there_is_any_letter_replace_that_with_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_113_if_there_is_any_letter_replace_that_with_p ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) _p $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda _p) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _p _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _rempty _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _p) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _p) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _q)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0007965564727783203
        },
        "re2_train_114_if_there_is_any_letter_consonant_replace_that_with_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_114_if_there_is_any_letter_consonant_replace_that_with_g ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _g $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_115_if_the_word_starts_with_consonant_replace_that_with_g_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_115_if_the_word_starts_with_consonant_replace_that_with_g_n ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _g _n) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _g) $0 _a) $0 _o) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _g) $0 _a) $0 _u) $0 _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _g) $0 _o) $0 _a) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _g) $0 _o) $0 _u) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _g) $0 _u) $0 _a) $0 _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 551.55988073349
        },
        "re2_train_116_if_the_word_starts_with_consonant_any_letter_replace_that_with_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_116_if_the_word_starts_with_consonant_any_letter_replace_that_with_f ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) _f (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_117_if_there_is_any_letter_consonant_replace_that_with_l_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_117_if_there_is_any_letter_consonant_replace_that_with_l_s ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _l _s) $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_118_if_there_is_l_replace_that_with_n_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_118_if_there_is_l_replace_that_with_n_k ((lambda (_rflatten (map (lambda (if (_rmatch _l $0) (_rconcat _n _k) $0)) (_rsplit _l $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _k) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _n _k) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _k) _l))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _n _k) _rempty) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _n _rempty) _k) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 25.600625038146973
        },
        "re2_train_119_if_there_is_vowel_t_add_i_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_119_if_there_is_vowel_t_add_i_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _t) $0) (_rconcat _i $0) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _t) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_120_if_the_word_starts_with_consonant_add_l_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_120_if_the_word_starts_with_consonant_add_l_before_that ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _l (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_121_if_there_is_t_add_y_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_121_if_there_is_t_add_y_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat $0 _y) $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t _y) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _t _y) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t _y) _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t (_rconcat _rempty _y)) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _t _y)) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 34.97787594795227
        },
        "re2_train_122_if_the_word_starts_with_vowel_replace_that_with_i_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_122_if_the_word_starts_with_vowel_replace_that_with_i_a ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _i _a) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_123_if_there_is_any_letter_i_replace_that_with_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_123_if_there_is_any_letter_i_replace_that_with_n ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _i) $0) _n $0)) (_rsplit (_rconcat _rdot _i) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_124_if_the_word_ends_with_any_letter_s_replace_that_with_x_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_124_if_the_word_ends_with_any_letter_s_replace_that_with_x_l ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _s) (_rtail (_rsplit (_rconcat _rdot _s) $0))) (_rconcat _x _l) (_rtail (_rsplit (_rconcat _rdot _s) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _s) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_125_if_there_is_b_any_letter_replace_that_with_n_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_125_if_there_is_b_any_letter_replace_that_with_n_c ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _b _rdot) $0) (_rconcat _n _c) $0)) (_rsplit (_rconcat _b _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_126_if_there_is_vowel_any_letter_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_126_if_there_is_vowel_any_letter_replace_that_with_q ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) _q $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_127_if_the_word_starts_with_any_letter_replace_that_with_i_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_127_if_the_word_starts_with_any_letter_replace_that_with_i_r ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _i _r) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _r _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _i _r) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r (_rconcat _i _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 25.610909461975098
        },
        "re2_train_128_if_there_is_consonant_r_replace_that_with_q_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_128_if_there_is_consonant_r_replace_that_with_q_u ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _r) $0) (_rconcat _q _u) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _r) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_129_if_there_is_any_letter_replace_that_with_r_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_129_if_there_is_any_letter_replace_that_with_r_v ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _r _v) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _v _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _v _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _v _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _v) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0005893707275390625
        },
        "re2_train_130_if_there_is_e_any_letter_replace_that_with_c_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_130_if_there_is_e_any_letter_replace_that_with_c_t ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _e _rdot) $0) (_rconcat _c _t) $0)) (_rsplit (_rconcat _e _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_131_if_there_is_vowel_replace_that_with_p_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_131_if_there_is_vowel_replace_that_with_p_q ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _p _q) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_132_if_the_word_ends_with_any_letter_consonant_replace_that_with_d_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_132_if_the_word_ends_with_any_letter_consonant_replace_that_with_d_t ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _d _t) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _d _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _d _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _d _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _d (_rconcat _rempty _t)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) _d _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 6.251814365386963
        },
        "re2_train_133_if_there_is_p_add_p_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_133_if_there_is_p_add_p_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _p $0) (_rconcat $0 _p) $0)) (_rsplit _p $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _p _p) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _p _p) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _p _p) _p))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _p) _p) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _p (_rconcat _p _rempty)) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 11.47887659072876
        },
        "re2_train_134_if_the_word_starts_with_any_letter_add_f_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_134_if_the_word_starts_with_any_letter_add_f_before_that ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _f (car (_rsplit _rdot $0))) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _f (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _f (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _f (_rsplit _a $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _f (_rsplit _e $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _f (_rsplit _r $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 19.02535128593445
        },
        "re2_train_135_if_there_is_any_letter_replace_that_with_f_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_135_if_there_is_any_letter_replace_that_with_f_n ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _f _n) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _n _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _n _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _n _f))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _f _n)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) _n _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0006322860717773438
        },
        "re2_train_136_if_the_word_starts_with_any_letter_vowel_add_d_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_136_if_the_word_starts_with_any_letter_vowel_add_d_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _d (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_137_if_there_is_p_replace_that_with_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_137_if_there_is_p_replace_that_with_g ((lambda (_rflatten (map (lambda (if (_rmatch _p $0) _g $0)) (_rsplit _p $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _g _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _g _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _g _p))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _g _rempty) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _g) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.86315655708313
        },
        "re2_train_138_if_there_is_e_any_letter_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_138_if_there_is_e_any_letter_replace_that_with_j ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _e _rdot) $0) _j $0)) (_rsplit (_rconcat _e _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_139_if_there_is_u_any_letter_double_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_139_if_there_is_u_any_letter_double_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _u _rdot) $0) (_rconcat $0 $0) $0)) (_rsplit (_rconcat _u _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_140_if_the_word_ends_with_vowel_any_letter_replace_that_with_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_140_if_the_word_ends_with_vowel_any_letter_replace_that_with_y ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) _y (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_141_if_the_word_starts_with_any_letter_consonant_replace_that_with_x_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_141_if_the_word_starts_with_any_letter_consonant_replace_that_with_x_x ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _x _x) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_142_if_the_word_starts_with_consonant_replace_that_with_r_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_142_if_the_word_starts_with_consonant_replace_that_with_r_p ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _r _p) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _p _r) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _p _r) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _p _r) $0 _a) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _p _r) $0 _e) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _p _r) $0 _e) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 29.264915943145752
        },
        "re2_train_143_if_the_word_ends_with_consonant_replace_that_with_k_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_143_if_the_word_ends_with_consonant_replace_that_with_k_t ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _k _t) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _a (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _t _k)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 369.70867443084717
        },
        "re2_train_144_if_the_word_ends_with_any_letter_add_p_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_144_if_the_word_ends_with_any_letter_add_p_after_that ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat (_rtail (_rsplit _rdot $0)) _p) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _p (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rsplit _i $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rsplit _e $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rsplit _g $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 5.783896207809448
        },
        "re2_train_145_if_the_word_ends_with_vowel_consonant_replace_that_with_s_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_145_if_the_word_ends_with_vowel_consonant_replace_that_with_s_r ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _s _r) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_146_if_there_is_vowel_vowel_replace_that_with_p_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_146_if_there_is_vowel_vowel_replace_that_with_p_p ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _p _p) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_147_if_the_word_starts_with_consonant_replace_that_with_e_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_147_if_the_word_starts_with_consonant_replace_that_with_e_n ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _e _n) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _e) $0 _a) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _e) $0 _e) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 501.83470153808594
        },
        "re2_train_148_if_the_word_starts_with_consonant_replace_that_with_s_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_148_if_the_word_starts_with_consonant_replace_that_with_s_e ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _s _e) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_149_if_the_word_starts_with_consonant_vowel_replace_that_with_p_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_149_if_the_word_starts_with_consonant_vowel_replace_that_with_p_a ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _p _a) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_150_if_the_word_ends_with_s_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_150_if_the_word_ends_with_s_remove_that ((lambda (_rflatten (_rappend (if (_rmatch _s (_rtail (_rsplit _s $0))) _rempty (_rtail (_rsplit _s $0))) (_rrevcdr (_rsplit _s $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 _rempty _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _rempty _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 _rempty _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) (_rflatten (_rsplit _rempty $0)) _rempty _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _rempty $0) _rempty _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 5.499178886413574
        },
        "re2_train_151_if_the_word_ends_with_vowel_consonant_replace_that_with_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_151_if_the_word_ends_with_vowel_consonant_replace_that_with_v ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _v (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_152_if_there_is_r_add_b_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_152_if_there_is_r_add_b_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) (_rconcat _b $0) $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _b _r) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _b _r) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _b _r) _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _b _r) _rempty) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _b _rempty) _r) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.27093744277954
        },
        "re2_train_153_if_there_is_consonant_consonant_replace_that_with_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_153_if_there_is_consonant_consonant_replace_that_with_n ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _n $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_154_if_the_word_starts_with_consonant_vowel_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_154_if_the_word_starts_with_consonant_vowel_replace_that_with_t ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _t (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_155_if_there_is_t_replace_that_with_x_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_155_if_there_is_t_replace_that_with_x_w ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _x _w) $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _x _w) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _x _w) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _x _w) _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _x) _w) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _x _rempty) _w) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 12.864095687866211
        },
        "re2_train_156_if_the_word_ends_with_vowel_any_letter_replace_that_with_n_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_156_if_the_word_ends_with_vowel_any_letter_replace_that_with_n_h ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat _n _h) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_157_if_the_word_starts_with_any_letter_vowel_replace_that_with_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_157_if_the_word_starts_with_any_letter_vowel_replace_that_with_o ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _o (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_158_if_the_word_ends_with_consonant_consonant_add_d_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_158_if_the_word_ends_with_consonant_consonant_add_d_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _d) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _e (_rtail (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _d $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 961.5887141227722
        },
        "re2_train_159_if_there_is_t_replace_that_with_f_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_159_if_there_is_t_replace_that_with_f_v ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _f _v) $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f _v) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _f _v) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f _v) _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f (_rconcat _v _rempty)) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f _v) _t)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 12.848570823669434
        },
        "re2_train_160_if_the_word_starts_with_any_letter_vowel_replace_that_with_r_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_160_if_the_word_starts_with_any_letter_vowel_replace_that_with_r_x ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _r _x) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_161_if_there_is_o_replace_that_with_c_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_161_if_there_is_o_replace_that_with_c_g ((lambda (_rflatten (map (lambda (if (_rmatch _o $0) (_rconcat _c _g) $0)) (_rsplit _o $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _g) _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _c _g) _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _g) _o))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c (_rconcat _rempty _g)) _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _c _g)) _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 19.249265670776367
        },
        "re2_train_162_if_there_is_m_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_162_if_there_is_m_remove_that ((lambda (_rflatten (map (lambda (if (_rmatch _m $0) _rempty $0)) (_rsplit _m $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _rempty _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _rempty _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _rempty _m))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _rempty) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _rempty (_rconcat _rempty _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 29.517727613449097
        },
        "re2_train_163_if_there_is_vowel_replace_that_with_n_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_163_if_there_is_vowel_replace_that_with_n_c ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _n _c) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_164_if_the_word_starts_with_consonant_replace_that_with_i_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_164_if_the_word_starts_with_consonant_replace_that_with_i_q ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _i _q) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _q _i) $0 _e) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _q _i) $0 _u) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 292.2786920070648
        },
        "re2_train_165_if_there_is_vowel_vowel_replace_that_with_d_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_165_if_there_is_vowel_vowel_replace_that_with_d_c ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _d _c) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_166_if_the_word_ends_with_any_letter_consonant_add_r_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_166_if_the_word_ends_with_any_letter_consonant_add_r_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _r (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_167_if_there_is_l_replace_that_with_v_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_167_if_there_is_l_replace_that_with_v_q ((lambda (_rflatten (map (lambda (if (_rmatch _l $0) (_rconcat _v _q) $0)) (_rsplit _l $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _v _q) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _v _q) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _v _q) _l))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _v _q)) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _v (_rconcat _rempty _q)) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 17.393545389175415
        },
        "re2_train_168_if_the_word_ends_with_consonant_consonant_replace_that_with_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_168_if_the_word_ends_with_consonant_consonant_replace_that_with_r ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _r (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_169_if_the_word_starts_with_any_letter_replace_that_with_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_169_if_the_word_starts_with_any_letter_replace_that_with_b ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) _b (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _b _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _rempty))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.799339771270752
        },
        "re2_train_170_if_there_is_consonant_replace_that_with_b_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_170_if_there_is_consonant_replace_that_with_b_q ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _b _q) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_171_if_there_is_vowel_add_g_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_171_if_there_is_vowel_add_g_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _g $0) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_172_if_there_is_c_replace_that_with_k_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_172_if_there_is_c_replace_that_with_k_b ((lambda (_rflatten (map (lambda (if (_rmatch _c $0) (_rconcat _k _b) $0)) (_rsplit _c $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _b) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _k _b) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _b) _c))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _b) (_rconcat _c _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _b) _c))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 19.06591248512268
        },
        "re2_train_173_if_the_word_starts_with_any_letter_vowel_replace_that_with_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_173_if_the_word_starts_with_any_letter_vowel_replace_that_with_y ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _y (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_174_if_the_word_ends_with_consonant_replace_that_with_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_174_if_the_word_ends_with_consonant_replace_that_with_y ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) _y (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 _y (_rnot (_rconcat _e _o))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 _y (_rnot (_rconcat _o _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _y (_rnot (_rconcat _e _o))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 _y (_rnot (_rconcat (_rconcat _e _o) _o))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 _y (_rnot (_rconcat (_rconcat _e _o) _y))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 19.091710567474365
        },
        "re2_train_175_if_the_word_ends_with_vowel_consonant_replace_that_with_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_175_if_the_word_ends_with_vowel_consonant_replace_that_with_h ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _h (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_176_if_there_is_n_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_176_if_there_is_n_replace_that_with_q ((lambda (_rflatten (map (lambda (if (_rmatch _n $0) _q $0)) (_rsplit _n $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _q _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _q _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _q _n))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _q _rempty) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _q) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 11.433990955352783
        },
        "re2_train_177_if_there_is_e_replace_that_with_t_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_177_if_there_is_e_replace_that_with_t_u ((lambda (_rflatten (map (lambda (if (_rmatch _e $0) (_rconcat _t _u) $0)) (_rsplit _e $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t _u) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _t _u) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t _u) _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _t) _u) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (_rsplit _a $0)) (_rconcat _t _u) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 19.088199138641357
        },
        "re2_train_178_if_there_is_vowel_replace_that_with_n_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_178_if_there_is_vowel_replace_that_with_n_p ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _n _p) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_179_if_there_is_vowel_add_h_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_179_if_there_is_vowel_add_h_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _h $0) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_180_if_there_is_any_letter_l_replace_that_with_k_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_180_if_there_is_any_letter_l_replace_that_with_k_t ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _l) $0) (_rconcat _k _t) $0)) (_rsplit (_rconcat _rdot _l) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_181_if_the_word_ends_with_consonant_replace_that_with_f_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_181_if_the_word_ends_with_consonant_replace_that_with_f_w ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _f _w) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _w _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _w _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _w _f))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 (_rconcat _rempty _w) _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (_rsplit _rempty $0)) _w _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0013778209686279297
        },
        "re2_train_182_if_the_word_starts_with_consonant_vowel_replace_that_with_p_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_182_if_the_word_starts_with_consonant_vowel_replace_that_with_p_i ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _p _i) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_183_if_the_word_starts_with_any_letter_replace_that_with_r_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_183_if_the_word_starts_with_any_letter_replace_that_with_r_m ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _r _m) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _m _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _m _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _m _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _m (_rconcat _rempty _r)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _r _m) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 25.652579307556152
        },
        "re2_train_184_if_the_word_starts_with_any_letter_replace_that_with_b_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_184_if_the_word_starts_with_any_letter_replace_that_with_b_w ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _b _w) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _w _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _b))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _b _w)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w (_rconcat _b _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 25.60048532485962
        },
        "re2_train_185_if_the_word_ends_with_consonant_replace_that_with_a_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_185_if_the_word_ends_with_consonant_replace_that_with_a_o ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _a _o) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _o _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _a _o)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _a _o)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _a _o)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 6.266639709472656
        },
        "re2_train_187_if_there_is_consonant_replace_that_with_m_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_187_if_there_is_consonant_replace_that_with_m_b ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _m _b) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_188_if_there_is_consonant_replace_that_with_g_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_188_if_there_is_consonant_replace_that_with_g_o ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _g _o) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_189_if_there_is_consonant_e_replace_that_with_b_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_189_if_there_is_consonant_e_replace_that_with_b_l ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0) (_rconcat _b _l) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_190_if_the_word_ends_with_any_letter_any_letter_add_f_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_190_if_the_word_ends_with_any_letter_any_letter_add_f_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _rdot) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat (_rtail (_rsplit (_rconcat _rdot _rdot) $0)) _f) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _f (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (_rappend _f (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rsplit _e $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0007984638214111328
        },
        "re2_train_191_if_the_word_starts_with_any_letter_add_d_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_191_if_the_word_starts_with_any_letter_add_d_after_that ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat (car (_rsplit _rdot $0)) _d) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _d (car (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _d (car (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _d (car (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _d (car (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _d (car (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.27082633972168
        },
        "re2_train_192_if_there_is_b_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_192_if_there_is_b_replace_that_with_q ((lambda (_rflatten (map (lambda (if (_rmatch _b $0) _q $0)) (_rsplit _b $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _q _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _q _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _q _b))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _q _rempty) _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _q) _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 19.279927968978882
        },
        "re2_train_193_if_the_word_starts_with_consonant_vowel_replace_that_with_g_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_193_if_the_word_starts_with_consonant_vowel_replace_that_with_g_h ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _g _h) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_194_if_the_word_starts_with_any_letter_vowel_replace_that_with_r_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_194_if_the_word_starts_with_any_letter_vowel_replace_that_with_r_r ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _r _r) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_195_if_there_is_m_any_letter_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_195_if_there_is_m_any_letter_replace_that_with_j ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _m _rdot) $0) _j $0)) (_rsplit (_rconcat _m _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_196_if_there_is_n_add_e_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_196_if_there_is_n_add_e_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _n $0) (_rconcat $0 _e) $0)) (_rsplit _n $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _e) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _n _e) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _e) _n))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _e) (_rconcat _n _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _e) (_rconcat _rempty _n)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 40.48600888252258
        },
        "re2_train_197_if_there_is_any_letter_c_add_k_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_197_if_there_is_any_letter_c_add_k_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _c) $0) (_rconcat $0 _k) $0)) (_rsplit (_rconcat _rdot _c) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_198_if_the_word_starts_with_vowel_replace_that_with_q_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_198_if_the_word_starts_with_vowel_replace_that_with_q_b ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _q _b) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_199_if_there_is_d_add_i_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_199_if_there_is_d_add_i_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _d $0) (_rconcat $0 _i) $0)) (_rsplit _d $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _i) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _d _i) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _i) _d))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d (_rconcat _i _rempty)) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d (_rconcat _rempty _i)) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 29.525541067123413
        },
        "re2_train_200_if_the_word_starts_with_consonant_consonant_add_m_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_200_if_the_word_starts_with_consonant_consonant_add_m_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _m) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_201_if_there_is_any_letter_consonant_replace_that_with_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_201_if_there_is_any_letter_consonant_replace_that_with_y ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _y $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_202_if_the_word_starts_with_any_letter_o_add_y_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_202_if_the_word_starts_with_any_letter_o_add_y_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _o) (car (_rsplit (_rconcat _rdot _o) $0))) (_rconcat (car (_rsplit (_rconcat _rdot _o) $0)) _y) (car (_rsplit (_rconcat _rdot _o) $0))) (cdr (_rsplit (_rconcat _rdot _o) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_203_if_the_word_starts_with_any_letter_replace_that_with_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_203_if_the_word_starts_with_any_letter_replace_that_with_f ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) _f (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _f _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _f (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _f (cdr (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 12.65584421157837
        },
        "re2_train_204_if_the_word_starts_with_consonant_consonant_replace_that_with_a_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_204_if_the_word_starts_with_consonant_consonant_replace_that_with_a_c ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _a _c) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_205_if_there_is_consonant_replace_that_with_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_205_if_there_is_consonant_replace_that_with_p ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) _p $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_206_if_the_word_starts_with_any_letter_vowel_replace_that_with_h_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_206_if_the_word_starts_with_any_letter_vowel_replace_that_with_h_i ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _h _i) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_208_if_the_word_starts_with_any_letter_any_letter_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_208_if_the_word_starts_with_any_letter_any_letter_replace_that_with_w ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) _w (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _w (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _w _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _rempty) _w _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _w (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cdr (#(lambda (_rsplit _rdot $0)) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 29.31090021133423
        },
        "re2_train_209_if_there_is_vowel_consonant_add_d_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_209_if_there_is_vowel_consonant_add_d_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat $0 _d) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_210_if_the_word_starts_with_consonant_replace_that_with_p_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_210_if_the_word_starts_with_consonant_replace_that_with_p_b ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _p _b) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _p) $0 _a) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _p) $0 _e) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 653.0493502616882
        },
        "re2_train_211_if_there_is_vowel_vowel_replace_that_with_g_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_211_if_there_is_vowel_vowel_replace_that_with_g_k ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _g _k) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_212_if_there_is_t_any_letter_replace_that_with_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_212_if_there_is_t_any_letter_replace_that_with_v ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _t _rdot) $0) _v $0)) (_rsplit (_rconcat _t _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_213_if_there_is_consonant_t_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_213_if_there_is_consonant_t_replace_that_with_x ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _t) $0) _x $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _t) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_214_if_the_word_ends_with_consonant_any_letter_replace_that_with_b_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_214_if_the_word_ends_with_consonant_any_letter_replace_that_with_b_h ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _b _h) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_215_if_the_word_ends_with_any_letter_consonant_replace_that_with_g_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_215_if_the_word_ends_with_any_letter_consonant_replace_that_with_g_l ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _g _l) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (#(lambda (_rsplit _rdot $0)) (_rflatten (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)))))) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _rempty)))) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (_rappend _g (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 11.535865545272827
        },
        "re2_train_216_if_the_word_ends_with_consonant_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_216_if_the_word_ends_with_consonant_replace_that_with_w ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) _w (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _rempty _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _w _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _w $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _w _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 (_rconcat _w _rempty) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 5.612002611160278
        },
        "re2_train_217_if_the_word_starts_with_any_letter_replace_that_with_y_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_217_if_the_word_starts_with_any_letter_replace_that_with_y_c ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _y _c) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _c _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _c _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _c _y))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _c _rempty) _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _c) _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.83842372894287
        },
        "re2_train_218_if_there_is_vowel_vowel_add_o_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_218_if_there_is_vowel_vowel_add_o_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat $0 _o) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_219_if_there_is_any_letter_replace_that_with_y_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_219_if_there_is_any_letter_replace_that_with_y_t ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _y _t) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _t _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _t _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _t _y))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _t (_rconcat _rempty _y)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _t _y) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0005762577056884766
        },
        "re2_train_220_if_there_is_any_letter_any_letter_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_220_if_there_is_any_letter_any_letter_replace_that_with_w ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _rdot) $0) _w $0)) (_rsplit (_rconcat _rdot _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_221_if_the_word_starts_with_consonant_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_221_if_the_word_starts_with_consonant_replace_that_with_q ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) _q (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _q) $0 _a) $0 _o) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _q) $0 _a) $0 _u) $0 _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _q) $0 _o) $0 _a) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _q) $0 _o) $0 _u) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _q) $0 _u) $0 _o) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 260.0966260433197
        },
        "re2_train_222_if_there_is_o_consonant_add_l_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_222_if_there_is_o_consonant_add_l_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _o (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat $0 _l) $0)) (_rsplit (_rconcat _o (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_223_if_there_is_any_letter_replace_that_with_n_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_223_if_there_is_any_letter_replace_that_with_n_i ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _n _i) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _i _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i (_rconcat _n _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i (_rconcat _rempty _n)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i _n) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0006175041198730469
        },
        "re2_train_224_if_there_is_vowel_l_replace_that_with_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_224_if_there_is_vowel_l_replace_that_with_a ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _l) $0) _a $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _l) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_225_if_there_is_consonant_consonant_replace_that_with_o_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_225_if_there_is_consonant_consonant_replace_that_with_o_w ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _o _w) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_226_if_the_word_ends_with_vowel_any_letter_replace_that_with_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_226_if_the_word_ends_with_vowel_any_letter_replace_that_with_f ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) _f (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_228_if_there_is_consonant_vowel_add_n_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_228_if_there_is_consonant_vowel_add_n_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat $0 _n) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_229_if_there_is_any_letter_replace_that_with_w_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_229_if_there_is_any_letter_replace_that_with_w_t ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _w _t) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _t _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _t _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _t _w))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (_rsplit _rempty $0)) _t _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0006368160247802734
        },
        "re2_train_230_if_there_is_m_replace_that_with_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_230_if_there_is_m_replace_that_with_l ((lambda (_rflatten (map (lambda (if (_rmatch _m $0) _l $0)) (_rsplit _m $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _l _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _l _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _l _m))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _l _rempty) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _l) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 31.977967739105225
        },
        "re2_train_231_if_there_is_vowel_consonant_add_a_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_231_if_there_is_vowel_consonant_add_a_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _a $0) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_232_if_there_is_consonant_replace_that_with_v_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_232_if_there_is_consonant_replace_that_with_v_h ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _v _h) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_233_if_there_is_any_letter_any_letter_replace_that_with_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_233_if_there_is_any_letter_any_letter_replace_that_with_d ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _rdot) $0) _d $0)) (_rsplit (_rconcat _rdot _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_234_if_there_is_r_vowel_add_d_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_234_if_there_is_r_vowel_add_d_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _r (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _d $0) $0)) (_rsplit (_rconcat _r (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_235_if_the_word_starts_with_consonant_vowel_replace_that_with_v_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_235_if_the_word_starts_with_consonant_vowel_replace_that_with_v_j ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _v _j) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_236_if_the_word_starts_with_consonant_add_t_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_236_if_the_word_starts_with_consonant_add_t_after_that ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)) _t) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_237_if_the_word_ends_with_any_letter_replace_that_with_i_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_237_if_the_word_ends_with_any_letter_replace_that_with_i_y ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _i _y) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _i _y)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _i _y)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _i _y)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i) _y _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _y (_rsplit _e (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 6.208964824676514
        },
        "re2_train_238_if_there_is_consonant_any_letter_replace_that_with_w_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_238_if_there_is_consonant_any_letter_replace_that_with_w_e ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0) (_rconcat _w _e) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_239_if_the_word_starts_with_consonant_vowel_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_239_if_the_word_starts_with_consonant_vowel_replace_that_with_j ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _j (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_240_if_there_is_consonant_a_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_240_if_there_is_consonant_a_replace_that_with_x ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _a) $0) _x $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _a) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_241_if_the_word_starts_with_consonant_replace_that_with_g_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_241_if_the_word_starts_with_consonant_replace_that_with_g_u ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _g _u) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _u _g) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _u _g) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _u _g) $0 _e) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _u _g) $0 _u) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _u _g) $0 _u) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 38.22510886192322
        },
        "re2_train_242_if_there_is_consonant_replace_that_with_f_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_242_if_there_is_consonant_replace_that_with_f_r ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _f _r) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_243_if_there_is_c_add_u_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_243_if_there_is_c_add_u_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _c $0) (_rconcat _u $0) $0)) (_rsplit _c $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _u _c) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _u _c) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _u _c) _c))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _u _c) (_rconcat _c _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _u _c) (_rconcat _rempty _c)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 25.674492359161377
        },
        "re2_train_244_if_there_is_any_letter_replace_that_with_u_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_244_if_there_is_any_letter_replace_that_with_u_e ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _u _e) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _e _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _e _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _e _u))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _e) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _e (_rconcat _rempty _u)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0005948543548583984
        },
        "re2_train_245_if_there_is_any_letter_any_letter_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_245_if_there_is_any_letter_any_letter_replace_that_with_j ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _rdot) $0) _j $0)) (_rsplit (_rconcat _rdot _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_246_if_there_is_t_replace_that_with_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_246_if_there_is_t_replace_that_with_n ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) _n $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _n _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _n _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _n _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _rempty) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _n) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 17.83556818962097
        },
        "re2_train_247_if_the_word_ends_with_consonant_any_letter_replace_that_with_l_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_247_if_the_word_ends_with_consonant_any_letter_replace_that_with_l_g ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _l _g) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_248_if_the_word_starts_with_any_letter_vowel_replace_that_with_x_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_248_if_the_word_starts_with_any_letter_vowel_replace_that_with_x_g ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _x _g) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_249_if_there_is_vowel_s_add_m_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_249_if_there_is_vowel_s_add_m_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _s) $0) (_rconcat $0 _m) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _s) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_250_if_there_is_s_add_x_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_250_if_there_is_s_add_x_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat $0 _x) $0)) (_rsplit _s $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _s _x) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _s _x) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _s _x) _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _s (_rconcat _rempty _x)) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _s _x)) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 11.597420930862427
        },
        "re2_train_251_if_there_is_consonant_add_m_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_251_if_there_is_consonant_add_m_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat $0 _m) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_252_if_there_is_e_replace_that_with_i_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_252_if_there_is_e_replace_that_with_i_m ((lambda (_rflatten (map (lambda (if (_rmatch _e $0) (_rconcat _i _m) $0)) (_rsplit _e $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _m) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _i _m) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _m) _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _i) _m) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i (_rconcat _rempty _m)) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 17.65896224975586
        },
        "re2_train_253_if_there_is_o_any_letter_replace_that_with_f_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_253_if_there_is_o_any_letter_replace_that_with_f_q ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _o _rdot) $0) (_rconcat _f _q) $0)) (_rsplit (_rconcat _o _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_254_if_the_word_starts_with_any_letter_vowel_replace_that_with_m_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_254_if_the_word_starts_with_any_letter_vowel_replace_that_with_m_d ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _m _d) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_255_if_the_word_ends_with_e_any_letter_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_255_if_the_word_ends_with_e_any_letter_replace_that_with_t ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _e _rdot) (_rtail (_rsplit (_rconcat _e _rdot) $0))) _t (_rtail (_rsplit (_rconcat _e _rdot) $0))) (_rrevcdr (_rsplit (_rconcat _e _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_256_if_the_word_ends_with_consonant_replace_that_with_w_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_256_if_the_word_ends_with_consonant_replace_that_with_w_i ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _w _i) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _i _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _i _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _i _w))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 (_rconcat _rempty _i) _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 (_rconcat _w _i) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 6.2228477001190186
        },
        "re2_train_257_if_there_is_vowel_replace_that_with_b_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_257_if_there_is_vowel_replace_that_with_b_y ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _b _y) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_258_if_there_is_consonant_add_s_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_258_if_there_is_consonant_add_s_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat $0 _s) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_259_if_the_word_starts_with_consonant_replace_that_with_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_259_if_the_word_starts_with_consonant_replace_that_with_o ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) _o (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _rempty) $0 _a) $0 _i) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _rempty) $0 _a) $0 _u) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _rempty) $0 _i) $0 _a) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _rempty) $0 _i) $0 _u) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _rempty) $0 _u) $0 _a) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 205.57221865653992
        },
        "re2_train_260_if_there_is_any_letter_vowel_add_i_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_260_if_there_is_any_letter_vowel_add_i_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _i $0) $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_261_if_the_word_starts_with_any_letter_any_letter_add_y_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_261_if_the_word_starts_with_any_letter_any_letter_add_y_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat _y (car (_rsplit (_rconcat _rdot _rdot) $0))) (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _y (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _y (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _y (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _y (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _y (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 17.69036078453064
        },
        "re2_train_262_if_there_is_consonant_consonant_replace_that_with_r_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_262_if_there_is_consonant_consonant_replace_that_with_r_y ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _r _y) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_263_if_there_is_vowel_replace_that_with_q_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_263_if_there_is_vowel_replace_that_with_q_f ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _q _f) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_264_if_the_word_starts_with_any_letter_replace_that_with_k_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_264_if_the_word_starts_with_any_letter_replace_that_with_k_e ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _k _e) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _k))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _e _k))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _k))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e (_rconcat _k _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e (_rconcat _rempty _k)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 25.689080238342285
        },
        "re2_train_265_if_the_word_starts_with_any_letter_replace_that_with_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_265_if_the_word_starts_with_any_letter_replace_that_with_h ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) _h (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _h (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _h _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h _rempty))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 17.72806143760681
        },
        "re2_train_266_if_the_word_starts_with_consonant_replace_that_with_w_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_266_if_the_word_starts_with_consonant_replace_that_with_w_v ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _w _v) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_267_if_the_word_ends_with_consonant_consonant_add_e_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_267_if_the_word_ends_with_consonant_consonant_add_e_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _e) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_268_if_the_word_starts_with_any_letter_replace_that_with_x_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_268_if_the_word_starts_with_any_letter_replace_that_with_x_e ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _x _e) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _x))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _e _x))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _x))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e (_rconcat _rempty _x)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _a $0)) _e _x))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 31.99460768699646
        },
        "re2_train_269_if_there_is_r_replace_that_with_m_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_269_if_there_is_r_replace_that_with_m_l ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) (_rconcat _m _l) $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _l) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _m _l) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _l) _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m (_rconcat _rempty _l)) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _l) _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 32.04917860031128
        },
        "re2_train_270_if_there_is_r_replace_that_with_e_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_270_if_there_is_r_replace_that_with_e_d ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) (_rconcat _e _d) $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _d) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _e _d) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _d) _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e (_rconcat _d _rempty)) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _d) _r) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.429190397262573
        },
        "re2_train_271_if_there_is_c_add_e_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_271_if_there_is_c_add_e_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _c $0) (_rconcat $0 _e) $0)) (_rsplit _c $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _e) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _c _e) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _e) _c))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c (_rconcat _rempty _e)) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _c _e)) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 29.31781840324402
        },
        "re2_train_272_if_the_word_starts_with_consonant_replace_that_with_d_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_272_if_the_word_starts_with_consonant_replace_that_with_d_g ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _d _g) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_273_if_there_is_vowel_any_letter_add_i_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_273_if_there_is_vowel_any_letter_add_i_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) (_rconcat _i $0) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_274_if_there_is_consonant_vowel_add_x_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_274_if_there_is_consonant_vowel_add_x_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _x $0) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_275_if_the_word_ends_with_consonant_replace_that_with_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_275_if_the_word_ends_with_consonant_replace_that_with_r ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) _r (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _rempty _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _r $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _rempty _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _r (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _rempty)) _r $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 6.309626579284668
        },
        "re2_train_276_if_the_word_starts_with_any_letter_replace_that_with_m_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_276_if_the_word_starts_with_any_letter_replace_that_with_m_i ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _m _i) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _i _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _m))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i (_rconcat _m _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i (_rconcat _rempty _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 25.707862615585327
        },
        "re2_train_277_if_there_is_i_any_letter_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_277_if_there_is_i_any_letter_replace_that_with_q ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _i _rdot) $0) _q $0)) (_rsplit (_rconcat _i _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_278_if_there_is_any_letter_consonant_replace_that_with_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_278_if_there_is_any_letter_consonant_replace_that_with_k ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _k $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_279_if_the_word_ends_with_consonant_replace_that_with_o_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_279_if_the_word_ends_with_consonant_replace_that_with_o_c ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _o _c) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _c _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _c _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _c _o))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 (_rconcat _c _rempty) _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _o)) _c $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0013098716735839844
        },
        "re2_train_280_if_there_is_any_letter_add_q_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_280_if_there_is_any_letter_add_q_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _q $0) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat _q $0) _rempty)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat _q _rempty) $0)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 5.648980617523193
        },
        "re2_train_281_if_there_is_consonant_vowel_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_281_if_there_is_consonant_vowel_replace_that_with_j ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _j $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_282_if_there_is_vowel_vowel_add_q_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_282_if_there_is_vowel_vowel_add_q_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _q $0) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_283_if_there_is_any_letter_consonant_replace_that_with_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_283_if_there_is_any_letter_consonant_replace_that_with_f ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _f $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_285_if_there_is_any_letter_consonant_replace_that_with_j_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_285_if_there_is_any_letter_consonant_replace_that_with_j_t ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _j _t) $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_286_if_the_word_starts_with_vowel_any_letter_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_286_if_the_word_starts_with_vowel_any_letter_replace_that_with_w ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) _w (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_287_if_the_word_ends_with_consonant_consonant_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_287_if_the_word_ends_with_consonant_consonant_replace_that_with_x ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _x (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_288_if_the_word_ends_with_consonant_consonant_replace_that_with_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_288_if_the_word_ends_with_consonant_consonant_replace_that_with_a ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _a (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_289_if_the_word_starts_with_any_letter_replace_that_with_j_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_289_if_the_word_starts_with_any_letter_replace_that_with_j_o ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _j _o) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _o _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _o) _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o (_rconcat _j _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o (_rconcat _rempty _j)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 25.64423632621765
        },
        "re2_train_290_if_the_word_ends_with_consonant_any_letter_replace_that_with_e_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_290_if_the_word_ends_with_consonant_any_letter_replace_that_with_e_x ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _e _x) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_291_if_there_is_any_letter_t_add_g_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_291_if_there_is_any_letter_t_add_g_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _t) $0) (_rconcat _g $0) $0)) (_rsplit (_rconcat _rdot _t) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_292_if_the_word_ends_with_vowel_replace_that_with_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_292_if_the_word_ends_with_vowel_replace_that_with_y ((lambda (_rflatten (_rappend (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rtail (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) _y (_rtail (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rrevcdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 _y (_ror _e _i)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 _y (_ror _i _e)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 _i _e) _y _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 _y _e) _y _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 _y _i) _y _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 17.851836919784546
        },
        "re2_train_293_if_the_word_ends_with_consonant_add_j_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_293_if_the_word_ends_with_consonant_add_j_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)) _j) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _j $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _j (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _rempty $0) _j $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _a $0) _j $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _i $0) _j $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 5.659666538238525
        },
        "re2_train_294_if_the_word_starts_with_consonant_consonant_replace_that_with_e_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_294_if_the_word_starts_with_consonant_consonant_replace_that_with_e_i ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _e _i) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_295_if_the_word_starts_with_consonant_any_letter_replace_that_with_p_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_295_if_the_word_starts_with_consonant_any_letter_replace_that_with_p_y ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _p _y) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_296_if_there_is_s_replace_that_with_t_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_296_if_there_is_s_replace_that_with_t_q ((lambda (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat _t _q) $0)) (_rsplit _s $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t _q) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _t _q) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t _q) _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _t _q) _rempty) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _t _rempty) _q) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 11.671095371246338
        },
        "re2_train_297_if_the_word_starts_with_consonant_replace_that_with_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_297_if_the_word_starts_with_consonant_replace_that_with_c ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) _c (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _c _rempty) $0 _a) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _c _rempty) $0 _u) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 477.0854604244232
        },
        "re2_train_298_if_the_word_ends_with_consonant_add_p_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_298_if_the_word_ends_with_consonant_add_p_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)) _p) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _p $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _rempty $0) _p $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)) _p $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _e $0) _p $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _j $0) _p $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0014595985412597656
        },
        "re2_train_299_if_there_is_any_letter_replace_that_with_g_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_299_if_there_is_any_letter_replace_that_with_g_i ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _g _i) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _i _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i _g))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _g _i)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i _g) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0006673336029052734
        },
        "re2_train_300_if_there_is_n_replace_that_with_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_300_if_there_is_n_replace_that_with_g ((lambda (_rflatten (map (lambda (if (_rmatch _n $0) _g $0)) (_rsplit _n $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _g _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _g _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _g _n))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _g _rempty) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _g) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 17.769505500793457
        },
        "re2_train_301_if_there_is_t_vowel_replace_that_with_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_301_if_there_is_t_vowel_replace_that_with_d ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _t (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _d $0)) (_rsplit (_rconcat _t (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_302_if_there_is_vowel_add_v_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_302_if_there_is_vowel_add_v_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat $0 _v) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_303_if_there_is_t_consonant_replace_that_with_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_303_if_there_is_t_consonant_replace_that_with_n ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _t (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _n $0)) (_rsplit (_rconcat _t (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_304_if_there_is_any_letter_a_add_y_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_304_if_there_is_any_letter_a_add_y_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _a) $0) (_rconcat _y $0) $0)) (_rsplit (_rconcat _rdot _a) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_305_if_there_is_any_letter_vowel_replace_that_with_e_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_305_if_there_is_any_letter_vowel_replace_that_with_e_s ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _e _s) $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_306_if_the_word_ends_with_vowel_any_letter_replace_that_with_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_306_if_the_word_ends_with_vowel_any_letter_replace_that_with_n ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) _n (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_307_if_the_word_ends_with_any_letter_replace_that_with_o_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_307_if_the_word_ends_with_any_letter_replace_that_with_o_m ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _o _m) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _o _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _o _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _o _m)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (_rsplit _rempty $0)) (_rconcat _o _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0008208751678466797
        },
        "re2_train_308_if_there_is_any_letter_vowel_replace_that_with_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_308_if_there_is_any_letter_vowel_replace_that_with_b ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _b $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_309_if_the_word_ends_with_consonant_replace_that_with_n_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_309_if_the_word_ends_with_consonant_replace_that_with_n_a ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _n _a) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _a _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _a _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _a _n))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 (_rconcat _a _rempty) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 (_rconcat _rempty _a) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 5.6729044914245605
        },
        "re2_train_310_if_the_word_starts_with_consonant_add_x_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_310_if_the_word_starts_with_consonant_add_x_after_that ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)) _x) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_311_if_there_is_g_replace_that_with_k_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_311_if_there_is_g_replace_that_with_k_a ((lambda (_rflatten (map (lambda (if (_rmatch _g $0) (_rconcat _k _a) $0)) (_rsplit _g $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _a) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _k _a) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _a) _g))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k (_rconcat _rempty _a)) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _k _a)) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 11.694422245025635
        },
        "re2_train_312_if_there_is_any_letter_replace_that_with_h_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_312_if_there_is_any_letter_replace_that_with_h_x ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _h _x) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _x _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _x _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _x _h))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _x) _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _x)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0006594657897949219
        },
        "re2_train_314_if_the_word_starts_with_vowel_add_l_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_314_if_the_word_starts_with_vowel_add_l_after_that ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)) _l) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_315_if_there_is_h_replace_that_with_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_315_if_there_is_h_replace_that_with_y ((lambda (_rflatten (map (lambda (if (_rmatch _h $0) _y $0)) (_rsplit _h $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _y _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _y _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _y _h))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _y) _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _y _rempty) _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 25.67714786529541
        },
        "re2_train_316_if_the_word_starts_with_any_letter_replace_that_with_r_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_316_if_the_word_starts_with_any_letter_replace_that_with_r_r ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _r _r) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _r _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r (_rconcat _rempty _r)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _r _r) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 19.217686653137207
        },
        "re2_train_317_if_the_word_ends_with_vowel_consonant_replace_that_with_h_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_317_if_the_word_ends_with_vowel_consonant_replace_that_with_h_t ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _h _t) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_318_if_there_is_u_any_letter_replace_that_with_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_318_if_there_is_u_any_letter_replace_that_with_e ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _u _rdot) $0) _e $0)) (_rsplit (_rconcat _u _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_319_if_there_is_g_replace_that_with_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_319_if_there_is_g_replace_that_with_c ((lambda (_rflatten (map (lambda (if (_rmatch _g $0) _c $0)) (_rsplit _g $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _c _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _c _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _c _g))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _rempty) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _c) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 17.605547666549683
        },
        "re2_train_320_if_there_is_any_letter_vowel_add_s_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_320_if_there_is_any_letter_vowel_add_s_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _s $0) $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_321_if_the_word_ends_with_consonant_consonant_add_j_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_321_if_the_word_ends_with_consonant_consonant_add_j_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _j) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_322_if_the_word_starts_with_any_letter_replace_that_with_g_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_322_if_the_word_starts_with_any_letter_replace_that_with_g_b ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _g _b) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _b _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _g))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _b _rempty) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b (_rconcat _rempty _g)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.859413623809814
        },
        "re2_train_323_if_the_word_starts_with_any_letter_consonant_add_x_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_323_if_the_word_starts_with_any_letter_consonant_add_x_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _x) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_324_if_the_word_starts_with_vowel_any_letter_replace_that_with_i_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_324_if_the_word_starts_with_vowel_any_letter_replace_that_with_i_s ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat _i _s) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_325_if_there_is_t_replace_that_with_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_325_if_there_is_t_replace_that_with_i ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) _i $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _i _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _i _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _i _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _rempty) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _i) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 17.82784152030945
        },
        "re2_train_326_if_the_word_starts_with_any_letter_vowel_replace_that_with_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_326_if_the_word_starts_with_any_letter_vowel_replace_that_with_p ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _p (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_327_if_the_word_starts_with_consonant_replace_that_with_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_327_if_the_word_starts_with_consonant_replace_that_with_i ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) _i (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _i (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _i _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _a $0)) _i _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 25.69902777671814
        },
        "re2_train_328_if_there_is_consonant_consonant_add_d_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_328_if_there_is_consonant_consonant_add_d_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _d $0) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_329_if_there_is_consonant_replace_that_with_w_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_329_if_there_is_consonant_replace_that_with_w_i ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _w _i) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_330_if_there_is_t_replace_that_with_l_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_330_if_there_is_t_replace_that_with_l_p ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _l _p) $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _l _p) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _l _p) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _l _p) _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _l (_rconcat _p _rempty)) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _e (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _l _p) _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 12.68680191040039
        },
        "re2_train_331_if_the_word_ends_with_consonant_replace_that_with_o_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_331_if_the_word_ends_with_consonant_replace_that_with_o_g ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _o _g) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _g _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _o _g)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _g _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _g _o))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _o _g)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0013492107391357422
        },
        "re2_train_332_if_there_is_a_replace_that_with_u_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_332_if_there_is_a_replace_that_with_u_c ((lambda (_rflatten (map (lambda (if (_rmatch _a $0) (_rconcat _u _c) $0)) (_rsplit _a $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _u _c) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _u _c) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _u _c) _a))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _u) _c) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _u _c) _rempty) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 31.77633023262024
        },
        "re2_train_333_if_the_word_starts_with_vowel_replace_that_with_i_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_333_if_the_word_starts_with_vowel_replace_that_with_i_d ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _i _d) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_334_if_the_word_starts_with_consonant_any_letter_replace_that_with_r_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_334_if_the_word_starts_with_consonant_any_letter_replace_that_with_r_d ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _r _d) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _d _r) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _rempty) _d _r) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 86.32266020774841
        },
        "re2_train_335_if_there_is_consonant_i_replace_that_with_w_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_335_if_there_is_consonant_i_replace_that_with_w_l ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _i) $0) (_rconcat _w _l) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _i) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_336_if_there_is_vowel_any_letter_replace_that_with_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_336_if_there_is_vowel_any_letter_replace_that_with_y ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) _y $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_337_if_the_word_ends_with_vowel_any_letter_add_m_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_337_if_the_word_ends_with_vowel_any_letter_add_m_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)) _m) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_338_if_the_word_starts_with_consonant_replace_that_with_w_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_338_if_the_word_starts_with_consonant_replace_that_with_w_x ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _w _x) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _w) $0 _a) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _w) $0 _i) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 137.8117880821228
        },
        "re2_train_339_if_the_word_ends_with_consonant_double_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_339_if_the_word_ends_with_consonant_double_that ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 _rempty _i)) (_rtail (#(lambda (_rsplit _rdot $0)) $0)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) (_rflatten (_rappend (_rtail (#(lambda (_rsplit _rdot $0)) $0)) (_rsplit _e $0))) _rempty _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rtail (#(lambda (_rsplit _rdot $0)) $0)) (_rsplit _e (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 _rempty _i)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _i (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) (_rtail (#(lambda (_rsplit _rdot $0)) $0)) $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _i (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) (_rtail (#(lambda (_rsplit _rdot $0)) $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 11.706231355667114
        },
        "re2_train_340_if_the_word_starts_with_consonant_consonant_add_y_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_340_if_the_word_starts_with_consonant_consonant_add_y_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _y) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_341_if_the_word_starts_with_consonant_any_letter_replace_that_with_e_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_341_if_the_word_starts_with_consonant_any_letter_replace_that_with_e_a ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _e _a) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _a _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _rempty) _a _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _e (cons _a (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0)))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _e (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _a (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0)))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 48.761327028274536
        },
        "re2_train_342_if_there_is_consonant_replace_that_with_y_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_342_if_there_is_consonant_replace_that_with_y_y ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _y _y) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_343_if_the_word_ends_with_consonant_replace_that_with_v_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_343_if_the_word_ends_with_consonant_replace_that_with_v_c ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _v _c) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _c _v))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _c _v))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _c _v))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 (_rconcat _c _rempty) _v))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) _c _v))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0013260841369628906
        },
        "re2_train_344_if_the_word_ends_with_any_letter_add_q_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_344_if_the_word_ends_with_any_letter_add_q_after_that ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat (_rtail (_rsplit _rdot $0)) _q) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _q (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _a $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _i $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _r $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0008389949798583984
        },
        "re2_train_345_if_there_is_consonant_vowel_replace_that_with_h_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_345_if_there_is_consonant_vowel_replace_that_with_h_e ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _h _e) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_346_if_there_is_l_vowel_replace_that_with_p_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_346_if_there_is_l_vowel_replace_that_with_p_f ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _l (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _p _f) $0)) (_rsplit (_rconcat _l (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_347_if_the_word_starts_with_vowel_consonant_replace_that_with_q_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_347_if_the_word_starts_with_vowel_consonant_replace_that_with_q_f ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _q _f) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_348_if_there_is_n_consonant_replace_that_with_q_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_348_if_there_is_n_consonant_replace_that_with_q_o ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _n (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _q _o) $0)) (_rsplit (_rconcat _n (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_349_if_the_word_starts_with_any_letter_consonant_replace_that_with_y_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_349_if_the_word_starts_with_any_letter_consonant_replace_that_with_y_m ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _y _m) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_350_if_the_word_starts_with_consonant_replace_that_with_n_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_350_if_the_word_starts_with_consonant_replace_that_with_n_t ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _n _t) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _t _n) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _t _n) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _t _n) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _n _t) _rempty) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _n _t)) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 45.99734592437744
        },
        "re2_train_351_if_there_is_g_add_w_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_351_if_there_is_g_add_w_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _g $0) (_rconcat _w $0) $0)) (_rsplit _g $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w _g) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _w _g) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w _g) _g))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _w _g) _rempty) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _w _rempty) _g) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 25.70987892150879
        },
        "re2_train_352_if_the_word_starts_with_consonant_any_letter_replace_that_with_v_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_352_if_the_word_starts_with_consonant_any_letter_replace_that_with_v_d ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _v _d) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_353_if_there_is_vowel_replace_that_with_u_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_353_if_there_is_vowel_replace_that_with_u_q ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _u _q) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_354_if_the_word_starts_with_consonant_replace_that_with_i_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_354_if_the_word_starts_with_consonant_replace_that_with_i_s ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _i _s) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _s _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _s _rempty) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) _s _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.698095321655273
        },
        "re2_train_355_if_the_word_starts_with_any_letter_replace_that_with_g_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_355_if_the_word_starts_with_any_letter_replace_that_with_g_l ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _g _l) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _l _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _l _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _l _g))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _l _rempty) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _l _g)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 17.807584285736084
        },
        "re2_train_356_if_the_word_starts_with_any_letter_replace_that_with_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_356_if_the_word_starts_with_any_letter_replace_that_with_m ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) _m (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _m _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _m (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _m _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _m _rempty))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.690261363983154
        },
        "re2_train_357_if_there_is_i_replace_that_with_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_357_if_there_is_i_replace_that_with_m ((lambda (_rflatten (map (lambda (if (_rmatch _i $0) _m $0)) (_rsplit _i $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _m _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _m _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _m _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _rempty) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _m) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.814969778060913
        },
        "re2_train_358_if_there_is_any_letter_replace_that_with_j_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_358_if_there_is_any_letter_replace_that_with_j_u ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _j _u) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _u _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _u _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _u _j))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 (_rconcat _j _u) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _u) _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0006194114685058594
        },
        "re2_train_359_if_there_is_vowel_replace_that_with_n_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_359_if_there_is_vowel_replace_that_with_n_k ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _n _k) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_360_if_there_is_s_replace_that_with_d_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_360_if_there_is_s_replace_that_with_d_u ((lambda (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat _d _u) $0)) (_rsplit _s $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _u) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _d _u) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _u) _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (_rsplit _rempty $0)) (_rconcat _d _u) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) (_rconcat _d _u) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 11.602943897247314
        },
        "re2_train_361_if_the_word_starts_with_any_letter_consonant_replace_that_with_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_361_if_the_word_starts_with_any_letter_consonant_replace_that_with_o ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _o (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_362_if_there_is_consonant_consonant_replace_that_with_n_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_362_if_there_is_consonant_consonant_replace_that_with_n_c ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _n _c) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_364_if_the_word_ends_with_s_replace_that_with_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_364_if_the_word_ends_with_s_replace_that_with_y ((lambda (_rflatten (_rappend (if (_rmatch _s (_rtail (_rsplit _s $0))) _y (_rtail (_rsplit _s $0))) (_rrevcdr (_rsplit _s $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 _y _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _y _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 _y _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 _y (_ror _s _i)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 _y _s) _y _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 6.305990219116211
        },
        "re2_train_365_if_there_is_vowel_consonant_replace_that_with_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_365_if_there_is_vowel_consonant_replace_that_with_n ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _n $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_366_if_there_is_s_replace_that_with_p_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_366_if_there_is_s_replace_that_with_p_t ((lambda (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat _p _t) $0)) (_rsplit _s $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _p _t) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _p _t) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _p _t) _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _p _t) _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _p _t) _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 11.63622760772705
        },
        "re2_train_367_if_the_word_ends_with_consonant_replace_that_with_i_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_367_if_the_word_ends_with_consonant_replace_that_with_i_u ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _i _u) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _rempty (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)) _u $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _a (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)) _u $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _i (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)) _u $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _e (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)) _u $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _t (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)) _u $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 5.673348426818848
        },
        "re2_train_368_if_the_word_starts_with_consonant_any_letter_add_s_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_368_if_the_word_starts_with_consonant_any_letter_add_s_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _s (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_369_if_the_word_ends_with_consonant_consonant_add_c_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_369_if_the_word_ends_with_consonant_consonant_add_c_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _c) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _e (_rtail (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _c $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _e (_rtail (_rrevcdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _c $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch (_rtail (#(lambda (_rsplit _rdot $0)) $0)) (_rtail (_rsplit _e $0))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _c $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch (_rtail (_rsplit _e $0)) (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _c $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch (_ror _e _i) (_rtail (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _c $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 249.71056747436523
        },
        "re2_train_370_if_the_word_starts_with_any_letter_vowel_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_370_if_the_word_starts_with_any_letter_vowel_replace_that_with_x ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _x (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_371_if_there_is_p_replace_that_with_a_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_371_if_there_is_p_replace_that_with_a_w ((lambda (_rflatten (map (lambda (if (_rmatch _p $0) (_rconcat _a _w) $0)) (_rsplit _p $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _a _w) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _a _w) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _a _w) _p))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _a _rempty) _w) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _a _w) _rempty) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 19.311420917510986
        },
        "re2_train_372_if_there_is_g_replace_that_with_u_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_372_if_there_is_g_replace_that_with_u_f ((lambda (_rflatten (map (lambda (if (_rmatch _g $0) (_rconcat _u _f) $0)) (_rsplit _g $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _u _f) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _u _f) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _u _f) _g))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _u) _f) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _u _f)) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 45.963159799575806
        },
        "re2_train_373_if_there_is_vowel_replace_that_with_v_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_373_if_there_is_vowel_replace_that_with_v_v ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _v _v) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_374_if_the_word_ends_with_consonant_consonant_replace_that_with_d_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_374_if_the_word_ends_with_consonant_consonant_replace_that_with_d_u ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _d _u) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_375_if_the_word_starts_with_any_letter_replace_that_with_a_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_375_if_the_word_starts_with_any_letter_replace_that_with_a_w ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _a _w) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _w _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _a))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _w _rempty) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _a _w)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 32.047982931137085
        },
        "re2_train_376_if_there_is_vowel_any_letter_replace_that_with_w_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_376_if_there_is_vowel_any_letter_replace_that_with_w_t ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) (_rconcat _w _t) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_377_if_the_word_ends_with_any_letter_replace_that_with_r_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_377_if_the_word_ends_with_any_letter_replace_that_with_r_j ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _r _j) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _r _j)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _r _j)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _r _j)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rsplit _rempty (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0008351802825927734
        },
        "re2_train_378_if_there_is_any_letter_replace_that_with_i_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_378_if_there_is_any_letter_replace_that_with_i_p ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _i _p) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _p _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _p _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _p _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _i _p)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i) _p _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0006201267242431641
        },
        "re2_train_379_if_there_is_t_any_letter_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_379_if_there_is_t_any_letter_remove_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _t _rdot) $0) _rempty $0)) (_rsplit (_rconcat _t _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_380_if_there_is_consonant_add_y_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_380_if_there_is_consonant_add_y_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat $0 _y) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_381_if_there_is_any_letter_replace_that_with_n_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_381_if_there_is_any_letter_replace_that_with_n_g ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _n _g) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _g _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _g _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _g) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _n _g)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _g) _g _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0006592273712158203
        },
        "re2_train_382_if_the_word_starts_with_any_letter_add_o_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_382_if_the_word_starts_with_any_letter_add_o_after_that ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat (car (_rsplit _rdot $0)) _o) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o (car (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o (car (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _o (car (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o (car (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o (car (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 37.745075941085815
        },
        "re2_train_383_if_the_word_starts_with_vowel_replace_that_with_q_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_383_if_the_word_starts_with_vowel_replace_that_with_q_h ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _q _h) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_384_if_the_word_ends_with_vowel_consonant_replace_that_with_w_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_384_if_the_word_ends_with_vowel_consonant_replace_that_with_w_x ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _w _x) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_385_if_the_word_starts_with_any_letter_replace_that_with_x_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_385_if_the_word_starts_with_any_letter_replace_that_with_x_i ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _x _i) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _x))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _i _x))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _x))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i (_rconcat _rempty _x)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _x))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 17.66037130355835
        },
        "re2_train_386_if_there_is_any_letter_any_letter_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_386_if_there_is_any_letter_any_letter_replace_that_with_t ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _rdot) $0) _t $0)) (_rsplit (_rconcat _rdot _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_387_if_the_word_ends_with_consonant_any_letter_replace_that_with_x_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_387_if_the_word_ends_with_consonant_any_letter_replace_that_with_x_j ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _x _j) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_388_if_the_word_starts_with_consonant_replace_that_with_q_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_388_if_the_word_starts_with_consonant_replace_that_with_q_i ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _q _i) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _i _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _q))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _i _rempty) _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i (_rconcat _rempty _q)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 19.321813344955444
        },
        "re2_train_389_if_there_is_any_letter_any_letter_replace_that_with_t_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_389_if_there_is_any_letter_any_letter_replace_that_with_t_t ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _rdot) $0) (_rconcat _t _t) $0)) (_rsplit (_rconcat _rdot _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_390_if_the_word_ends_with_any_letter_any_letter_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_390_if_the_word_ends_with_any_letter_any_letter_replace_that_with_j ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _rdot) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) _j (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _j _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _rempty _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _j))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 6.336563587188721
        },
        "re2_train_391_if_the_word_ends_with_any_letter_consonant_add_y_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_391_if_the_word_ends_with_any_letter_consonant_add_y_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _y) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _a (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _y $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _a (_rtail (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _y $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _a (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _y (_rflatten (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _a (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))) _y $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _a (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _a) (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _y $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 6.353536128997803
        },
        "re2_train_392_if_the_word_starts_with_any_letter_vowel_replace_that_with_v_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_392_if_the_word_starts_with_any_letter_vowel_replace_that_with_v_p ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _v _p) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_393_if_the_word_ends_with_consonant_replace_that_with_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_393_if_the_word_ends_with_consonant_replace_that_with_i ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) _i (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _i _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _i _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0008132457733154297
        },
        "re2_train_394_if_there_is_t_replace_that_with_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_394_if_there_is_t_replace_that_with_k ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) _k $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _k _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _k _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _k _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _rempty) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _k) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 5.784069776535034
        },
        "re2_train_395_if_the_word_starts_with_any_letter_replace_that_with_e_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_395_if_the_word_starts_with_any_letter_replace_that_with_e_s ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _e _s) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _s _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _e _s) (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _e) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 17.797853708267212
        },
        "re2_train_396_if_the_word_starts_with_vowel_add_g_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_396_if_the_word_starts_with_vowel_add_g_before_that ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _g (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_397_if_there_is_s_replace_that_with_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_397_if_there_is_s_replace_that_with_h ((lambda (_rflatten (map (lambda (if (_rmatch _s $0) _h $0)) (_rsplit _s $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _h _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _h _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _h _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _h _rempty) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _h) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 11.710537910461426
        },
        "re2_train_398_if_the_word_starts_with_any_letter_vowel_add_q_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_398_if_the_word_starts_with_any_letter_vowel_add_q_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _q (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_399_if_there_is_any_letter_o_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_399_if_there_is_any_letter_o_replace_that_with_x ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _o) $0) _x $0)) (_rsplit (_rconcat _rdot _o) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_400_if_there_is_any_letter_vowel_add_p_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_400_if_there_is_any_letter_vowel_add_p_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _p $0) $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_401_if_there_is_r_add_q_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_401_if_there_is_r_add_q_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) (_rconcat $0 _q) $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _q) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _r _q) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _q) _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _r _q) _rempty) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _r _rempty) _q) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.741583108901978
        },
        "re2_train_402_if_the_word_starts_with_vowel_replace_that_with_i_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_402_if_the_word_starts_with_vowel_replace_that_with_i_x ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _i _x) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_403_if_the_word_starts_with_vowel_replace_that_with_h_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_403_if_the_word_starts_with_vowel_replace_that_with_h_e ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _h _e) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_404_if_there_is_u_replace_that_with_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_404_if_there_is_u_replace_that_with_b ((lambda (_rflatten (map (lambda (if (_rmatch _u $0) _b $0)) (_rsplit _u $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _b _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _b _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _b _u))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _b _rempty) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _b) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 29.625280141830444
        },
        "re2_train_405_if_there_is_vowel_vowel_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_405_if_there_is_vowel_vowel_replace_that_with_t ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _t $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_406_if_the_word_starts_with_any_letter_consonant_replace_that_with_l_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_406_if_the_word_starts_with_any_letter_consonant_replace_that_with_l_a ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _l _a) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_407_if_the_word_starts_with_any_letter_any_letter_replace_that_with_e_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_407_if_the_word_starts_with_any_letter_any_letter_replace_that_with_e_s ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat _e _s) (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _s _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _rempty) _s _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))))) _s _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))) _s _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _s _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 29.64515519142151
        },
        "re2_train_408_if_there_is_consonant_any_letter_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_408_if_there_is_consonant_any_letter_replace_that_with_t ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0) _t $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_409_if_there_is_consonant_any_letter_replace_that_with_x_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_409_if_there_is_consonant_any_letter_replace_that_with_x_p ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0) (_rconcat _x _p) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_410_if_there_is_consonant_add_n_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_410_if_there_is_consonant_add_n_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _n $0) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_411_if_there_is_r_replace_that_with_v_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_411_if_there_is_r_replace_that_with_v_a ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) (_rconcat _v _a) $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _v _a) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _v _a) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _v _a) _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _v _a) _rempty) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _v _rempty) _a) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.746426820755005
        },
        "re2_train_412_if_there_is_vowel_consonant_replace_that_with_k_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_412_if_there_is_vowel_consonant_replace_that_with_k_b ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _k _b) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_413_if_there_is_consonant_e_replace_that_with_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_413_if_there_is_consonant_e_replace_that_with_s ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0) _s $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_414_if_there_is_i_replace_that_with_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_414_if_there_is_i_replace_that_with_v ((lambda (_rflatten (map (lambda (if (_rmatch _i $0) _v $0)) (_rsplit _i $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _v _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _v _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _v _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _v) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _v _rempty) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 12.79017686843872
        },
        "re2_train_415_if_the_word_starts_with_consonant_replace_that_with_f_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_415_if_the_word_starts_with_consonant_replace_that_with_f_p ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _f _p) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_416_if_there_is_consonant_r_replace_that_with_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_416_if_there_is_consonant_r_replace_that_with_h ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _r) $0) _h $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _r) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_417_if_there_is_any_letter_add_l_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_417_if_there_is_any_letter_add_l_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _l $0) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _l $0)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _l $0)) (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _l $0)) (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat _l $0) _rempty)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat _rempty _l) $0)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 11.757543802261353
        },
        "re2_train_418_if_there_is_vowel_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_418_if_there_is_vowel_replace_that_with_j ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) _j $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_419_if_the_word_starts_with_consonant_replace_that_with_e_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_419_if_the_word_starts_with_consonant_replace_that_with_e_y ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _e _y) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _e) $0 _a) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _e) $0 _i) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _e) $0 _a) $0 _a) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _e) $0 _a) $0 _i) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _e) $0 _i) $0 _a) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 51.482672452926636
        },
        "re2_train_420_if_the_word_ends_with_consonant_replace_that_with_o_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_420_if_the_word_ends_with_consonant_replace_that_with_o_y ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _o _y) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _y _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _y _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _y _o))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)))) _y _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 _y _s) _y _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0013005733489990234
        },
        "re2_train_421_if_there_is_vowel_replace_that_with_b_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_421_if_there_is_vowel_replace_that_with_b_t ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _b _t) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_422_if_the_word_starts_with_any_letter_consonant_replace_that_with_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_422_if_the_word_starts_with_any_letter_consonant_replace_that_with_c ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _c (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_423_if_there_is_consonant_l_replace_that_with_m_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_423_if_there_is_consonant_l_replace_that_with_m_x ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _l) $0) (_rconcat _m _x) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _l) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_424_if_there_is_vowel_replace_that_with_a_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_424_if_there_is_vowel_replace_that_with_a_f ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _a _f) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_425_if_the_word_starts_with_consonant_replace_that_with_y_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_425_if_the_word_starts_with_consonant_replace_that_with_y_g ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _y _g) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _g _y) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _g _y) $0 _a) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _g _y) $0 _e) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _g _y) $0 _e) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _g _y) $0 _u) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 25.809730529785156
        },
        "re2_train_426_if_the_word_starts_with_any_letter_vowel_replace_that_with_h_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_426_if_the_word_starts_with_any_letter_vowel_replace_that_with_h_p ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _h _p) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_427_if_the_word_starts_with_any_letter_any_letter_replace_that_with_f_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_427_if_the_word_starts_with_any_letter_any_letter_replace_that_with_f_s ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat _f _s) (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _f _s) (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _f (cons _s (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _f (cons _s (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0)))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _f (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _s (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0)))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _f (cons _s (cdr (cdr (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.325387954711914
        },
        "re2_train_428_if_the_word_starts_with_any_letter_any_letter_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_428_if_the_word_starts_with_any_letter_any_letter_replace_that_with_q ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) _q (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _q (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _q (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _q (cdr (cdr (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _q (cdr (cdr (_rsplit _rempty $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _q (cdr (cdr (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 29.53451180458069
        },
        "re2_train_429_if_the_word_ends_with_any_letter_any_letter_replace_that_with_r_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_429_if_the_word_ends_with_any_letter_any_letter_replace_that_with_r_q ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _rdot) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat _r _q) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _r _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _r _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (_rflatten (_rsplit _rempty $0)) _r _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r) _r _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _r _j) _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0008022785186767578
        },
        "re2_train_431_if_there_is_u_consonant_replace_that_with_t_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_431_if_there_is_u_consonant_replace_that_with_t_u ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _u (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _t _u) $0)) (_rsplit (_rconcat _u (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_432_if_the_word_ends_with_vowel_any_letter_replace_that_with_h_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_432_if_the_word_ends_with_vowel_any_letter_replace_that_with_h_i ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat _h _i) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_433_if_there_is_vowel_replace_that_with_d_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_433_if_there_is_vowel_replace_that_with_d_b ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _d _b) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_434_if_the_word_ends_with_any_letter_any_letter_replace_that_with_b_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_434_if_the_word_ends_with_any_letter_any_letter_replace_that_with_b_j ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _rdot) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat _b _j) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _b _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _b _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _b _j))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _b (_rconcat _rempty _j)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty (_rconcat _b _j)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 5.884240388870239
        },
        "re2_train_435_if_there_is_vowel_add_d_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_435_if_there_is_vowel_add_d_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _d $0) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_436_if_the_word_ends_with_any_letter_consonant_add_f_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_436_if_the_word_ends_with_any_letter_consonant_add_f_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _f (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_437_if_the_word_starts_with_vowel_replace_that_with_l_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_437_if_the_word_starts_with_vowel_replace_that_with_l_a ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _l _a) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_438_if_the_word_ends_with_vowel_consonant_add_m_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_438_if_the_word_ends_with_vowel_consonant_add_m_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _m) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_439_if_there_is_c_replace_that_with_n_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_439_if_there_is_c_replace_that_with_n_m ((lambda (_rflatten (map (lambda (if (_rmatch _c $0) (_rconcat _n _m) $0)) (_rsplit _c $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _m) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _n _m) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _m) _c))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _m) (_rconcat _c _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _m) _c))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.620291471481323
        },
        "re2_train_440_if_the_word_starts_with_any_letter_consonant_replace_that_with_x_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_440_if_the_word_starts_with_any_letter_consonant_replace_that_with_x_h ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _x _h) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_441_if_there_is_any_letter_add_b_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_441_if_there_is_any_letter_add_b_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat $0 _b) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _b)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _b)) (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda (_rconcat $0 _b)) (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _b)) (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda (_rconcat $0 _b)) (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 5.7494611740112305
        },
        "re2_train_442_if_there_is_any_letter_replace_that_with_h_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_442_if_there_is_any_letter_replace_that_with_h_r ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _h _r) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _r _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _r _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _r _h))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _r) _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _r)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0006263256072998047
        },
        "re2_train_443_if_the_word_ends_with_any_letter_add_k_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_443_if_the_word_ends_with_any_letter_add_k_after_that ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat (_rtail (_rsplit _rdot $0)) _k) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _k (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _k (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _k (_rsplit _i $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _k (_rsplit _e $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _k (_rsplit _t $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0008168220520019531
        },
        "re2_train_444_if_there_is_vowel_s_replace_that_with_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_444_if_there_is_vowel_s_replace_that_with_r ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _s) $0) _r $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _s) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_445_if_the_word_ends_with_any_letter_replace_that_with_x_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_445_if_the_word_ends_with_any_letter_replace_that_with_x_s ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _x _s) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _s (_rsplit _i (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _x)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _s (_rsplit _e (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _x)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _s (_rsplit _s (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _x)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _s (_rsplit _b (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _x)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _s (_rsplit _k (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _x)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 6.399988889694214
        },
        "re2_train_446_if_the_word_starts_with_consonant_any_letter_replace_that_with_t_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_446_if_the_word_starts_with_consonant_any_letter_replace_that_with_t_l ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _t _l) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_447_if_there_is_vowel_replace_that_with_p_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_447_if_there_is_vowel_replace_that_with_p_v ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _p _v) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_448_if_there_is_any_letter_n_double_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_448_if_there_is_any_letter_n_double_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _n) $0) (_rconcat $0 $0) $0)) (_rsplit (_rconcat _rdot _n) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_449_if_there_is_d_replace_that_with_a_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_449_if_there_is_d_replace_that_with_a_v ((lambda (_rflatten (map (lambda (if (_rmatch _d $0) (_rconcat _a _v) $0)) (_rsplit _d $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _a _v) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _a _v) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _a _v) _d))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _a _rempty) _v) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _a _v) _rempty) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 29.56717348098755
        },
        "re2_train_450_if_the_word_ends_with_any_letter_consonant_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_450_if_the_word_ends_with_any_letter_consonant_replace_that_with_j ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _j (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _j _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _rempty _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _j))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty (_rconcat _rempty _j)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0008478164672851562
        },
        "re2_train_451_if_the_word_starts_with_any_letter_e_replace_that_with_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_451_if_the_word_starts_with_any_letter_e_replace_that_with_m ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _e) (car (_rsplit (_rconcat _rdot _e) $0))) _m (car (_rsplit (_rconcat _rdot _e) $0))) (cdr (_rsplit (_rconcat _rdot _e) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_452_if_the_word_ends_with_consonant_any_letter_add_w_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_452_if_the_word_ends_with_consonant_any_letter_add_w_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _w (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_453_if_there_is_vowel_r_add_i_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_453_if_there_is_vowel_r_add_i_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _r) $0) (_rconcat _i $0) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _r) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_454_if_the_word_starts_with_vowel_add_k_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_454_if_the_word_starts_with_vowel_add_k_after_that ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)) _k) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_455_if_there_is_vowel_replace_that_with_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_455_if_there_is_vowel_replace_that_with_s ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) _s $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_456_if_there_is_vowel_add_v_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_456_if_there_is_vowel_add_v_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _v $0) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_457_if_the_word_ends_with_consonant_replace_that_with_r_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_457_if_the_word_ends_with_consonant_replace_that_with_r_t ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _r _t) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _t _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _t _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _t _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 (_rconcat _r _t) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 (_rconcat _rempty _t) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 6.39673376083374
        },
        "re2_train_458_if_there_is_n_consonant_add_p_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_458_if_there_is_n_consonant_add_p_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _n (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat $0 _p) $0)) (_rsplit (_rconcat _n (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_459_if_the_word_ends_with_consonant_consonant_add_l_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_459_if_the_word_ends_with_consonant_consonant_add_l_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _l) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_460_if_the_word_starts_with_vowel_replace_that_with_x_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_460_if_the_word_starts_with_vowel_replace_that_with_x_l ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _x _l) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_461_if_the_word_starts_with_consonant_replace_that_with_w_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_461_if_the_word_starts_with_consonant_replace_that_with_w_w ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _w _w) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_462_if_the_word_ends_with_any_letter_any_letter_add_a_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_462_if_the_word_ends_with_any_letter_any_letter_add_a_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _rdot) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat (_rtail (_rsplit (_rconcat _rdot _rdot) $0)) _a) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _a (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (_rappend _a (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rsplit _a $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 6.398139953613281
        },
        "re2_train_463_if_the_word_starts_with_any_letter_replace_that_with_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_463_if_the_word_starts_with_any_letter_replace_that_with_a ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) _a (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _a (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _a _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _a $0)) _a _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 25.7396183013916
        },
        "re2_train_464_if_there_is_consonant_any_letter_add_x_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_464_if_there_is_consonant_any_letter_add_x_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0) (_rconcat _x $0) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_465_if_the_word_starts_with_consonant_replace_that_with_q_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_465_if_the_word_starts_with_consonant_replace_that_with_q_n ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _q _n) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _q) $0 _i) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _q) $0 _e) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _q) $0 (_ror _e _i)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 88.22340250015259
        },
        "re2_train_466_if_the_word_ends_with_any_letter_add_u_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_466_if_the_word_ends_with_any_letter_add_u_after_that ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat (_rtail (_rsplit _rdot $0)) _u) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _u (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _a $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _e $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 5.823848009109497
        },
        "re2_train_467_if_there_is_any_letter_any_letter_double_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_467_if_there_is_any_letter_any_letter_double_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _rdot) $0) (_rconcat $0 $0) $0)) (_rsplit (_rconcat _rdot _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_468_if_the_word_ends_with_any_letter_replace_that_with_x_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_468_if_the_word_ends_with_any_letter_replace_that_with_x_p ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _x _p) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rsplit _rempty (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _x)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rsplit _a (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _x)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rsplit _e (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _x)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rsplit _t (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _x)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rsplit _s (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _x)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 5.84047532081604
        },
        "re2_train_469_if_there_is_p_add_o_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_469_if_there_is_p_add_o_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _p $0) (_rconcat $0 _o) $0)) (_rsplit _p $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _p _o) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _p _o) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _p _o) _p))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _p (_rconcat _rempty _o)) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _p _o)) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.637855291366577
        },
        "re2_train_470_if_the_word_starts_with_any_letter_vowel_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_470_if_the_word_starts_with_any_letter_vowel_replace_that_with_w ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _w (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_471_if_there_is_o_add_r_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_471_if_there_is_o_add_r_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _o $0) (_rconcat _r $0) $0)) (_rsplit _o $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _o) _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _r _o) _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _o) _o))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _r) _o) _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _o) (_rconcat _rempty _o)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 31.983057975769043
        },
        "re2_train_472_if_the_word_starts_with_any_letter_add_v_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_472_if_the_word_starts_with_any_letter_add_v_before_that ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _v (car (_rsplit _rdot $0))) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _v (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _v (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _v (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _v (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _v (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 29.56208062171936
        },
        "re2_train_473_if_there_is_o_replace_that_with_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_473_if_there_is_o_replace_that_with_l ((lambda (_rflatten (map (lambda (if (_rmatch _o $0) _l $0)) (_rsplit _o $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _l _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _l _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _l _o))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _l _rempty) _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _l) _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 25.742713451385498
        },
        "re2_train_474_if_there_is_t_replace_that_with_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_474_if_there_is_t_replace_that_with_o ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) _o $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _o _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _o _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _o _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _o (_rconcat _t _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _o _t) _o _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 19.375161170959473
        },
        "re2_train_475_if_the_word_starts_with_consonant_o_replace_that_with_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_475_if_the_word_starts_with_consonant_o_replace_that_with_r ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _o) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _o) $0))) _r (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _o) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _o) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_476_if_there_is_consonant_replace_that_with_x_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_476_if_there_is_consonant_replace_that_with_x_u ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _x _u) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_477_if_there_is_s_replace_that_with_i_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_477_if_there_is_s_replace_that_with_i_r ((lambda (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat _i _r) $0)) (_rsplit _s $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _r) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _i _r) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _r) _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i (_rconcat _r _rempty)) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (_rsplit _rempty $0)) (_rconcat _i _r) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 19.375086545944214
        },
        "re2_train_478_if_there_is_consonant_consonant_add_r_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_478_if_there_is_consonant_consonant_add_r_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _r $0) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_479_if_there_is_vowel_replace_that_with_a_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_479_if_there_is_vowel_replace_that_with_a_c ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _a _c) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_480_if_the_word_ends_with_consonant_replace_that_with_g_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_480_if_the_word_ends_with_consonant_replace_that_with_g_l ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _g _l) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _l (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)))) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _t)))) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 5.915031433105469
        },
        "re2_train_481_if_the_word_starts_with_consonant_i_replace_that_with_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_481_if_the_word_starts_with_consonant_i_replace_that_with_i ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _i) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _i) $0))) _i (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _i) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _i) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (if (_rmatch _i (car (cdr (#(lambda (_rsplit _rdot $0)) $0)))) (cdr (#(lambda (_rsplit _rdot $0)) $0)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (if (_rmatch _i (car (cdr (#(lambda (_rsplit _rdot $0)) $0)))) (cdr (#(lambda (_rsplit _rdot $0)) $0)) (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (if (_rmatch _i (car (#(lambda (_rsplit _rdot $0)) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0)))))) (cdr (#(lambda (_rsplit _rdot $0)) $0)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (if (_rmatch _i (car (cdr (#(lambda (_rsplit _rdot $0)) $0)))) (cdr (#(lambda (_rsplit _rdot $0)) $0)) (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (if (_rmatch _i (car (cdr (#(lambda (_rsplit _rdot $0)) $0)))) (cdr (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)))) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 17.919538259506226
        },
        "re2_train_482_if_the_word_ends_with_any_letter_consonant_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_482_if_the_word_ends_with_any_letter_consonant_replace_that_with_x ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _x (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _rempty))) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _x (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) _rempty $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) (_rflatten (_rrevcdr (_rsplit _rempty $0))))) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _b _rempty))) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 5.880441904067993
        },
        "re2_train_483_if_the_word_ends_with_consonant_replace_that_with_b_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_483_if_the_word_ends_with_consonant_replace_that_with_b_a ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _b _a) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _a _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _a _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _a _b))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 (_rconcat _rempty _a) _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (_rsplit _rempty $0)) _a _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0013294219970703125
        },
        "re2_train_484_if_the_word_ends_with_consonant_replace_that_with_j_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_484_if_the_word_ends_with_consonant_replace_that_with_j_q ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _j _q) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _q _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _q _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _q _j))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 (_rconcat _q _rempty) _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _j)) _q $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0012881755828857422
        },
        "re2_train_485_if_there_is_l_add_m_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_485_if_there_is_l_add_m_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _l $0) (_rconcat _m $0) $0)) (_rsplit _l $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _l) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _m _l) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _l) _l))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _l) (_rconcat _l _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _l) (_rconcat _rempty _l)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 37.68487548828125
        },
        "re2_train_486_if_the_word_starts_with_any_letter_add_b_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_486_if_the_word_starts_with_any_letter_add_b_before_that ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _b (car (_rsplit _rdot $0))) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _b (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _b (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _b (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _b (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _b (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 17.662196397781372
        },
        "re2_train_487_if_the_word_starts_with_consonant_add_a_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_487_if_the_word_starts_with_consonant_add_a_before_that ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _a (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _a (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _a (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _a (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _a (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _a (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 17.966594219207764
        },
        "re2_train_488_if_there_is_vowel_c_add_i_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_488_if_there_is_vowel_c_add_i_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _c) $0) (_rconcat $0 _i) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _c) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_489_if_there_is_any_letter_consonant_replace_that_with_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_489_if_there_is_any_letter_consonant_replace_that_with_b ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _b $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_490_if_there_is_any_letter_replace_that_with_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_490_if_there_is_any_letter_replace_that_with_l ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) _l $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda _l) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _l) (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _l _rempty)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _l) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _l)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (map (lambda _l) (#(lambda (_rsplit _rdot $0)) $0))) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0007669925689697266
        },
        "re2_train_491_if_the_word_ends_with_any_letter_replace_that_with_o_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_491_if_the_word_ends_with_any_letter_replace_that_with_o_j ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _o _j) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _o _j)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _o _j)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _o _j)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat (_rconcat _o _j) _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _o (_rconcat _rempty _j))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 5.897882461547852
        },
        "re2_train_492_if_the_word_starts_with_vowel_replace_that_with_c_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_492_if_the_word_starts_with_vowel_replace_that_with_c_d ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _c _d) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_493_if_there_is_s_replace_that_with_r_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_493_if_there_is_s_replace_that_with_r_a ((lambda (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat _r _a) $0)) (_rsplit _s $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _a) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _r _a) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _a) _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _r _a) _rempty) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _r _rempty) _a) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 17.93223237991333
        },
        "re2_train_494_if_the_word_starts_with_any_letter_replace_that_with_s_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_494_if_the_word_starts_with_any_letter_replace_that_with_s_b ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _s _b) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _b _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _s _b) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _b _rempty) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.825631618499756
        },
        "re2_train_495_if_the_word_ends_with_any_letter_replace_that_with_c_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_495_if_the_word_ends_with_any_letter_replace_that_with_c_v ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _c _v) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _c _v)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _c _v)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _c _v)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _v (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _c)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (_rsplit _rempty $0)) (_rconcat _c _v)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0007760524749755859
        },
        "re2_train_496_if_there_is_any_letter_vowel_replace_that_with_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_496_if_there_is_any_letter_vowel_replace_that_with_h ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _h $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_497_if_there_is_consonant_replace_that_with_m_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_497_if_there_is_consonant_replace_that_with_m_a ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _m _a) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_498_if_the_word_starts_with_consonant_consonant_add_e_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_498_if_the_word_starts_with_consonant_consonant_add_e_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _e (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_499_if_there_is_vowel_vowel_add_o_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_499_if_there_is_vowel_vowel_add_o_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _o $0) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        }
    },
    "test": {
        "re2_test_0_if_the_word_ends_with_s_replace_that_with_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_0_if_the_word_ends_with_s_replace_that_with_m ((lambda (_rflatten (_rappend (if (_rmatch _s (_rtail (_rsplit _s $0))) _m (_rtail (_rsplit _s $0))) (_rrevcdr (_rsplit _s $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _rempty _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _rempty _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _rempty _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 15.200934648513794
        },
        "re2_test_1_if_there_is_any_letter_t_double_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_1_if_there_is_any_letter_t_double_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _t) $0) (_rconcat $0 $0) $0)) (_rsplit (_rconcat _rdot _t) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_2_if_the_word_starts_with_any_letter_consonant_replace_that_with_q_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_2_if_the_word_starts_with_any_letter_consonant_replace_that_with_q_f ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _q _f) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_3_if_there_is_consonant_vowel_add_f_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_3_if_there_is_consonant_vowel_add_f_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _f $0) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_4_if_the_word_starts_with_any_letter_replace_that_with_k_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_4_if_the_word_starts_with_any_letter_replace_that_with_k_a ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _k _a) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _k))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _a _k))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _k) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _k) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _k) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 31.234925746917725
        },
        "re2_test_5_if_there_is_any_letter_add_u_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_5_if_there_is_any_letter_add_u_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat $0 _u) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _u)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _u)) (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda (_rconcat $0 _u)) (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _u)) (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (map (lambda (_rconcat $0 _u)) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 55.29349875450134
        },
        "re2_test_6_if_the_word_starts_with_vowel_replace_that_with_g_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_6_if_the_word_starts_with_vowel_replace_that_with_g_p ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _g _p) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_7_if_the_word_starts_with_any_letter_vowel_replace_that_with_y_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_7_if_the_word_starts_with_any_letter_vowel_replace_that_with_y_l ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _y _l) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_8_if_the_word_ends_with_consonant_replace_that_with_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_8_if_the_word_ends_with_consonant_replace_that_with_g ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) _g (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _g _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _rempty _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _g $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _g _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _rempty $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 31.266580820083618
        },
        "re2_test_9_if_there_is_t_vowel_replace_that_with_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_9_if_there_is_t_vowel_replace_that_with_g ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _t (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _g $0)) (_rsplit (_rconcat _t (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_10_if_the_word_starts_with_any_letter_replace_that_with_w_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_10_if_the_word_starts_with_any_letter_replace_that_with_w_t ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _w _t) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _t _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _t _w))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cons _t (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _t _w) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _t _w) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 46.83109998703003
        },
        "re2_test_11_if_there_is_c_any_letter_replace_that_with_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_11_if_there_is_c_any_letter_replace_that_with_m ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _c _rdot) $0) _m $0)) (_rsplit (_rconcat _c _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_12_if_the_word_starts_with_consonant_any_letter_replace_that_with_s_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_12_if_the_word_starts_with_consonant_any_letter_replace_that_with_s_d ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _s _d) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_13_if_the_word_ends_with_any_letter_replace_that_with_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_13_if_the_word_ends_with_any_letter_replace_that_with_a ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) _a (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _a))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _a))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _a) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 15.403417348861694
        },
        "re2_test_14_if_the_word_ends_with_any_letter_replace_that_with_l_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_14_if_the_word_ends_with_any_letter_replace_that_with_l_k ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _l _k) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _k (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _l)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _k (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _l)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _k (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _l $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _k (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) _l)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _k (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _l) _l)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 46.99872064590454
        },
        "re2_test_15_if_there_is_consonant_add_h_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_15_if_there_is_consonant_add_h_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat $0 _h) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_16_if_there_is_any_letter_add_j_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_16_if_there_is_any_letter_add_j_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat $0 _j) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _j)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda (_rconcat $0 _j)) (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _j)) (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (map (lambda (_rconcat $0 _j)) (#(lambda (_rsplit _rdot $0)) $0))) _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (_rflatten (_rappend _j (map (lambda (_rconcat $0 _j)) (#(lambda (_rsplit _rdot $0)) $0)))) _rempty _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 79.44925618171692
        },
        "re2_test_17_if_there_is_vowel_t_replace_that_with_t_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_17_if_there_is_vowel_t_replace_that_with_t_n ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _t) $0) (_rconcat _t _n) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _t) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_18_if_there_is_any_letter_d_replace_that_with_p_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_18_if_there_is_any_letter_d_replace_that_with_p_y ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _d) $0) (_rconcat _p _y) $0)) (_rsplit (_rconcat _rdot _d) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_19_if_there_is_consonant_a_add_p_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_19_if_there_is_consonant_a_add_p_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _a) $0) (_rconcat $0 _p) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _a) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_20_if_the_word_ends_with_vowel_consonant_replace_that_with_k_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_20_if_the_word_ends_with_vowel_consonant_replace_that_with_k_x ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _k _x) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_21_if_the_word_ends_with_consonant_add_r_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_21_if_the_word_ends_with_consonant_add_r_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _r (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 (_rtail (#(lambda (_rsplit _rdot $0)) $0)) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 (_rtail (#(lambda (_rsplit _rdot $0)) $0)) _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r)) (_rtail (#(lambda (_rsplit _rdot $0)) $0)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _t _r) (_rtail (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r)) (_rtail (#(lambda (_rsplit _rdot $0)) $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 75.14988136291504
        },
        "re2_test_22_if_there_is_any_letter_add_w_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_22_if_there_is_any_letter_add_w_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _w $0) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w $0)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda (_rconcat _w $0)) (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w $0)) (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (map (lambda (_rconcat _w $0)) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w $0)) (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 31.37659525871277
        },
        "re2_test_23_if_there_is_h_any_letter_add_k_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_23_if_there_is_h_any_letter_add_k_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _h _rdot) $0) (_rconcat $0 _k) $0)) (_rsplit (_rconcat _h _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_24_if_the_word_starts_with_any_letter_any_letter_add_s_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_24_if_the_word_starts_with_any_letter_any_letter_add_s_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat (car (_rsplit (_rconcat _rdot _rdot) $0)) _s) (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_25_if_there_is_t_replace_that_with_c_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_25_if_there_is_t_replace_that_with_c_n ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _c _n) $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _n) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _c _n) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _n) _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _n) _t) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _n) _t) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 74.044016122818
        },
        "re2_test_26_if_there_is_consonant_consonant_replace_that_with_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_26_if_there_is_consonant_consonant_replace_that_with_k ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _k $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_27_if_there_is_consonant_replace_that_with_w_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_27_if_there_is_consonant_replace_that_with_w_h ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _w _h) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_28_if_the_word_ends_with_any_letter_consonant_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_28_if_the_word_ends_with_any_letter_consonant_replace_that_with_w ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _w (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _w $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _w (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _rempty _rempty) _rempty _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _rempty _rempty) _w _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _rempty _rempty))) _rempty _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 64.02613306045532
        },
        "re2_test_29_if_the_word_starts_with_consonant_replace_that_with_m_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_29_if_the_word_starts_with_consonant_replace_that_with_m_x ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _m _x) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _x _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _m) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _m) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _m) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 39.09029936790466
        },
        "re2_test_30_if_the_word_ends_with_any_letter_replace_that_with_v_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_30_if_the_word_ends_with_any_letter_replace_that_with_v_n ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _v _n) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _n _v))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _v _n)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _n _v))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _n (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _v)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _v (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _n $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 63.925999879837036
        },
        "re2_test_31_if_there_is_vowel_consonant_replace_that_with_g_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_31_if_there_is_vowel_consonant_replace_that_with_g_u ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _g _u) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_32_if_the_word_starts_with_vowel_consonant_add_u_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_32_if_the_word_starts_with_vowel_consonant_add_u_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _u (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (cons _u (#(lambda (_rsplit _rdot $0)) $0)) _rempty $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (_rflatten (cons _u (#(lambda (_rsplit _rdot $0)) $0))) $0 _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _u (#(lambda (_rsplit _rdot $0)) $0)))) _rempty $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (cons _u (#(lambda (_rsplit _rdot $0)) $0)) _rempty (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (cons _u (#(lambda (_rsplit _rdot $0)) $0)) _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 91.35615015029907
        },
        "re2_test_33_if_the_word_starts_with_consonant_replace_that_with_a_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_33_if_the_word_starts_with_consonant_replace_that_with_a_h ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _a _h) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _h _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h _a) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h _a) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h _a) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 55.38446307182312
        },
        "re2_test_34_if_there_is_consonant_s_replace_that_with_y_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_34_if_there_is_consonant_s_replace_that_with_y_v ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _s) $0) (_rconcat _y _v) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _s) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_35_if_there_is_vowel_replace_that_with_v_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_35_if_there_is_vowel_replace_that_with_v_p ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _v _p) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_36_if_the_word_starts_with_consonant_replace_that_with_l_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_36_if_the_word_starts_with_consonant_replace_that_with_l_r ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _l _r) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _l) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _l) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _l) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _l) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 47.32368183135986
        },
        "re2_test_37_if_there_is_u_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_37_if_there_is_u_replace_that_with_w ((lambda (_rflatten (map (lambda (if (_rmatch _u $0) _w $0)) (_rsplit _u $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _w _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _w _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _w _u))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _w) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w _rempty) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 47.336822271347046
        },
        "re2_test_38_if_there_is_r_replace_that_with_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_38_if_there_is_r_replace_that_with_k ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) _k $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _k _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _k _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _k _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _rempty) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _k) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 39.35654592514038
        },
        "re2_test_39_if_there_is_any_letter_i_replace_that_with_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_39_if_there_is_any_letter_i_replace_that_with_e ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _i) $0) _e $0)) (_rsplit (_rconcat _rdot _i) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_40_if_the_word_starts_with_vowel_add_n_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_40_if_the_word_starts_with_vowel_add_n_before_that ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _n (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_41_if_the_word_starts_with_consonant_consonant_replace_that_with_f_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_41_if_the_word_starts_with_consonant_consonant_replace_that_with_f_j ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _f _j) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_42_if_the_word_starts_with_consonant_replace_that_with_m_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_42_if_the_word_starts_with_consonant_replace_that_with_m_p ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _m _p) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _p _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _p _m) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _p _m) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _p _m) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _p _m) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 55.54689407348633
        },
        "re2_test_43_if_the_word_starts_with_any_letter_replace_that_with_p_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_43_if_the_word_starts_with_any_letter_replace_that_with_p_x ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _p _x) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _x _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _p _x) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _p) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _p) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 55.80506706237793
        },
        "re2_test_44_if_the_word_starts_with_consonant_vowel_replace_that_with_r_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_44_if_the_word_starts_with_consonant_vowel_replace_that_with_r_u ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _r _u) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _u _r) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 229.8849275112152
        },
        "re2_test_45_if_there_is_n_replace_that_with_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_45_if_there_is_n_replace_that_with_i ((lambda (_rflatten (map (lambda (if (_rmatch _n $0) _i $0)) (_rsplit _n $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _i _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _i _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _i _n))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _i (_rconcat _n _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _i _n) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 39.418755769729614
        },
        "re2_test_46_if_there_is_consonant_replace_that_with_p_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_46_if_there_is_consonant_replace_that_with_p_l ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _p _l) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_47_if_the_word_starts_with_any_letter_replace_that_with_q_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_47_if_the_word_starts_with_any_letter_replace_that_with_q_n ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _q _n) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _n _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _q))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _n _rempty) _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _q) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 47.34302616119385
        },
        "re2_test_48_if_the_word_starts_with_any_letter_replace_that_with_t_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_48_if_the_word_starts_with_any_letter_replace_that_with_t_n ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _t _n) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _n _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _n _rempty) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _t (cons _n (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 55.522040605545044
        },
        "re2_test_49_if_the_word_ends_with_consonant_consonant_replace_that_with_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_49_if_the_word_ends_with_consonant_consonant_replace_that_with_l ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _l (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_50_if_the_word_starts_with_vowel_any_letter_replace_that_with_r_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_50_if_the_word_starts_with_vowel_any_letter_replace_that_with_r_y ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat _r _y) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_51_if_there_is_t_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_51_if_there_is_t_replace_that_with_x ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) _x $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _x _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _x _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _x) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _x _rempty) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _rempty _x) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.370986461639404
        },
        "re2_test_52_if_the_word_starts_with_any_letter_any_letter_replace_that_with_v_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_52_if_the_word_starts_with_any_letter_any_letter_replace_that_with_v_j ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat _v _j) (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _j _v))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _v (cons _j (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _v (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _j (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0)))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _v (cons _j (#(lambda (_rsplit _rdot $0)) (_rflatten (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0)))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _v (cons _j (cdr (#(lambda (_rsplit _rdot $0)) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0)))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 83.4793176651001
        },
        "re2_test_53_if_the_word_starts_with_consonant_replace_that_with_l_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_53_if_the_word_starts_with_consonant_replace_that_with_l_v ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _l _v) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _v _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _v _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _v _l))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _l (cons _v (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _v _l) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 55.684884548187256
        },
        "re2_test_54_if_there_is_g_replace_that_with_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_54_if_there_is_g_replace_that_with_p ((lambda (_rflatten (map (lambda (if (_rmatch _g $0) _p $0)) (_rsplit _g $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _p _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _p _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _p _g))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _p _rempty) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _p) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 39.37792944908142
        },
        "re2_test_55_if_the_word_starts_with_vowel_consonant_replace_that_with_j_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_55_if_the_word_starts_with_vowel_consonant_replace_that_with_j_g ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _j _g) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_56_if_the_word_starts_with_any_letter_replace_that_with_c_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_56_if_the_word_starts_with_any_letter_replace_that_with_c_x ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _c _x) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _x _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _c) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _c) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _c) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 39.508655309677124
        },
        "re2_test_57_if_the_word_starts_with_any_letter_replace_that_with_r_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_57_if_the_word_starts_with_any_letter_replace_that_with_r_w ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _r _w) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _w _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _r) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _r) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 47.54474186897278
        },
        "re2_test_58_if_the_word_starts_with_any_letter_replace_that_with_f_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_58_if_the_word_starts_with_any_letter_replace_that_with_f_a ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _f _a) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _f _a) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _f) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _f) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _f) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 47.52053213119507
        },
        "re2_test_59_if_there_is_any_letter_add_g_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_59_if_there_is_any_letter_add_g_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat $0 _g) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _g)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _g)) (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda (_rconcat $0 _g)) (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (map (lambda (_rconcat $0 _g)) (#(lambda (_rsplit _rdot $0)) $0))) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda (_rconcat $0 _g)) (#(lambda (_rsplit _rdot $0)) $0))) _g _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 55.7680389881134
        },
        "re2_test_60_if_the_word_starts_with_vowel_replace_that_with_l_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_60_if_the_word_starts_with_vowel_replace_that_with_l_c ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _l _c) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_61_if_the_word_starts_with_consonant_replace_that_with_d_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_61_if_the_word_starts_with_consonant_replace_that_with_d_x ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _d _x) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _x _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _d) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _d) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _d) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 39.56688976287842
        },
        "re2_test_62_if_there_is_n_any_letter_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_62_if_there_is_n_any_letter_replace_that_with_x ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _n _rdot) $0) _x $0)) (_rsplit (_rconcat _n _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_63_if_there_is_e_add_h_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_63_if_there_is_e_add_h_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _e $0) (_rconcat $0 _h) $0)) (_rsplit _e $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _h) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _e _h) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _h) _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _h) (_rconcat _e _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _h) (_rconcat _rempty _e)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 73.59967637062073
        },
        "re2_test_64_if_the_word_starts_with_any_letter_replace_that_with_y_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_64_if_the_word_starts_with_any_letter_replace_that_with_y_j ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _y _j) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _j _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _j _rempty) _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j _y) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j _y) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 47.55698847770691
        },
        "re2_test_65_if_there_is_vowel_add_n_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_65_if_there_is_vowel_add_n_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _n $0) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_66_if_the_word_starts_with_vowel_replace_that_with_g_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_66_if_the_word_starts_with_vowel_replace_that_with_g_y ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _g _y) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _g) $0 _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _g) $0 _h))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _g) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 100.76272583007812
        },
        "re2_test_67_if_there_is_any_letter_s_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_67_if_there_is_any_letter_s_remove_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _s) $0) _rempty $0)) (_rsplit (_rconcat _rdot _s) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_68_if_the_word_starts_with_vowel_replace_that_with_a_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_68_if_the_word_starts_with_vowel_replace_that_with_a_c ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _a _c) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_69_if_there_is_e_add_f_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_69_if_there_is_e_add_f_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _e $0) (_rconcat _f $0) $0)) (_rsplit _e $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f _e) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _f _e) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f _e) _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f _e) _e) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f _e) _e) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 64.57348966598511
        },
        "re2_test_70_if_the_word_ends_with_s_add_g_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_70_if_the_word_ends_with_s_add_g_after_that ((lambda (_rflatten (_rappend (if (_rmatch _s (_rtail (_rsplit _s $0))) (_rconcat (_rtail (_rsplit _s $0)) _g) (_rtail (_rsplit _s $0))) (_rrevcdr (_rsplit _s $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _t (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _g $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _g $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) (_rtail (_rappend _g (#(lambda (_rsplit _rdot $0)) $0))) $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) (_rtail (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _g))) $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) (_rtail (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _g _n))) $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 76.9810574054718
        },
        "re2_test_71_if_the_word_starts_with_consonant_replace_that_with_c_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_71_if_the_word_starts_with_consonant_replace_that_with_c_m ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _c _m) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _m _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _m _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _m _c))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _m _c) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _m _c) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 47.49304509162903
        },
        "re2_test_72_if_the_word_starts_with_any_letter_replace_that_with_i_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_72_if_the_word_starts_with_any_letter_replace_that_with_i_a ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _i _a) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _a _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _i) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _i) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 39.58423948287964
        },
        "re2_test_73_if_the_word_ends_with_any_letter_add_a_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_73_if_the_word_ends_with_any_letter_add_a_after_that ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat (_rtail (_rsplit _rdot $0)) _a) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _a (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (_rappend _a (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (_rappend _a (#(lambda (_rsplit _rdot $0)) $0))) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (_rappend _w (#(lambda (_rsplit _rdot $0)) $0))) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 7.843489170074463
        },
        "re2_test_74_if_the_word_ends_with_consonant_replace_that_with_c_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_74_if_the_word_ends_with_consonant_replace_that_with_c_v ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _c _v) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _c _v)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _c _v)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat (_rconcat _c _rempty) _v)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat (_rconcat _c _v) _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _c (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _v $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 7.89606237411499
        },
        "re2_test_75_if_there_is_vowel_consonant_replace_that_with_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_75_if_there_is_vowel_consonant_replace_that_with_c ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _c $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_76_if_there_is_d_replace_that_with_k_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_76_if_there_is_d_replace_that_with_k_i ((lambda (_rflatten (map (lambda (if (_rmatch _d $0) (_rconcat _k _i) $0)) (_rsplit _d $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _i) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _k _i) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _i) _d))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k (_rconcat _i _rempty)) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)))) (_rconcat _k _i) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 64.83248329162598
        },
        "re2_test_77_if_there_is_vowel_vowel_add_v_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_77_if_there_is_vowel_vowel_add_v_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat $0 _v) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_78_if_there_is_i_any_letter_replace_that_with_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_78_if_there_is_i_any_letter_replace_that_with_y ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _i _rdot) $0) _y $0)) (_rsplit (_rconcat _i _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_79_if_the_word_starts_with_any_letter_replace_that_with_p_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_79_if_the_word_starts_with_any_letter_replace_that_with_p_j ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _p _j) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _j _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _p _j) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j _p) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j _p) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.269622564315796
        },
        "re2_test_80_if_there_is_c_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_80_if_there_is_c_replace_that_with_q ((lambda (_rflatten (map (lambda (if (_rmatch _c $0) _q $0)) (_rsplit _c $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _q _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _q _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _q _c))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _q _rempty) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _q) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.80174231529236
        },
        "re2_test_81_if_there_is_l_add_w_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_81_if_there_is_l_add_w_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _l $0) (_rconcat $0 _w) $0)) (_rsplit _l $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _l _w) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _l _w) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _l _w) _l))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _l _w) (_rconcat _rempty _l)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _l _w) _l) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.22110867500305
        },
        "re2_test_82_if_there_is_e_add_m_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_82_if_there_is_e_add_m_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _e $0) (_rconcat $0 _m) $0)) (_rsplit _e $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _m) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _e _m) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _m) _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _e _m) _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _m) _e))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 75.51312756538391
        },
        "re2_test_83_if_the_word_ends_with_s_add_f_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_83_if_the_word_ends_with_s_add_f_after_that ((lambda (_rflatten (_rappend (if (_rmatch _s (_rtail (_rsplit _s $0))) (_rconcat (_rtail (_rsplit _s $0)) _f) (_rtail (_rsplit _s $0))) (_rrevcdr (_rsplit _s $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 (_rconcat _s _f) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (_rflatten (_rappend _f (#(lambda (_rsplit _rdot $0)) $0))) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (if (_rmatch _s (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (_rappend _f (#(lambda (_rsplit _rdot $0)) $0)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (if (_rmatch _s (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (_rappend _f (#(lambda (_rsplit _rdot $0)) $0)) (_rsplit _e $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch (_rnot _s) (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _f $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 89.09729933738708
        },
        "re2_test_84_if_there_is_e_any_letter_replace_that_with_r_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_84_if_there_is_e_any_letter_replace_that_with_r_a ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _e _rdot) $0) (_rconcat _r _a) $0)) (_rsplit (_rconcat _e _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_85_if_the_word_starts_with_any_letter_replace_that_with_c_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_85_if_the_word_starts_with_any_letter_replace_that_with_c_y ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _c _y) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _y _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _c))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _c) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _c) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 48.073094844818115
        },
        "re2_test_86_if_there_is_d_add_b_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_86_if_there_is_d_add_b_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _d $0) (_rconcat $0 _b) $0)) (_rsplit _d $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _b) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _d _b) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _b) _d))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d (_rconcat _rempty _b)) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _d _b)) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.51712918281555
        },
        "re2_test_87_if_there_is_t_replace_that_with_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_87_if_there_is_t_replace_that_with_m ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) _m $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _m _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _m _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _m _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _rempty) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _m) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 48.07582211494446
        },
        "re2_test_88_if_there_is_c_any_letter_replace_that_with_o_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_88_if_there_is_c_any_letter_replace_that_with_o_x ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _c _rdot) $0) (_rconcat _o _x) $0)) (_rsplit (_rconcat _c _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_89_if_there_is_consonant_e_add_v_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_89_if_there_is_consonant_e_add_v_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0) (_rconcat _v $0) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_90_if_there_is_consonant_replace_that_with_r_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_90_if_there_is_consonant_replace_that_with_r_r ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _r _r) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_91_if_the_word_ends_with_vowel_any_letter_replace_that_with_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_91_if_the_word_ends_with_vowel_any_letter_replace_that_with_l ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) _l (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _l (car (cdr (#(lambda (_rsplit _rdot $0)) $0)))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _l $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 429.0178716182709
        },
        "re2_test_92_if_there_is_vowel_vowel_replace_that_with_w_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_92_if_there_is_vowel_vowel_replace_that_with_w_b ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _w _b) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_93_if_the_word_starts_with_consonant_replace_that_with_g_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_93_if_the_word_starts_with_consonant_replace_that_with_g_w ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _g _w) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _w _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _g))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _g) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _g) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 40.04813051223755
        },
        "re2_test_94_if_the_word_ends_with_s_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_94_if_the_word_ends_with_s_replace_that_with_t ((lambda (_rflatten (_rappend (if (_rmatch _s (_rtail (_rsplit _s $0))) _t (_rtail (_rsplit _s $0))) (_rrevcdr (_rsplit _s $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 _t _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _t _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 _t _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 (_rconcat _rempty _t) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 (_rconcat _t _rempty) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 65.71834015846252
        },
        "re2_test_95_if_there_is_consonant_vowel_replace_that_with_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_95_if_there_is_consonant_vowel_replace_that_with_m ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _m $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_96_if_there_is_i_replace_that_with_i_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_96_if_there_is_i_replace_that_with_i_f ((lambda (_rflatten (map (lambda (if (_rmatch _i $0) (_rconcat _i _f) $0)) (_rsplit _i $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _f) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _i _f) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _f) _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i (_rconcat _f _rempty)) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _i _f)) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 65.30450963973999
        },
        "re2_test_97_if_the_word_starts_with_vowel_consonant_add_s_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_97_if_the_word_starts_with_vowel_consonant_add_s_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _s) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_98_if_there_is_i_consonant_replace_that_with_t_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_98_if_there_is_i_consonant_replace_that_with_t_f ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _i (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _t _f) $0)) (_rsplit (_rconcat _i (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_99_if_the_word_starts_with_consonant_add_o_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_99_if_the_word_starts_with_consonant_add_o_before_that ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _o (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (_rflatten (cons _o (#(lambda (_rsplit _rdot $0)) $0))) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (car (#(lambda (_rsplit _rdot $0)) $0)) _o) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cons _f (#(lambda (_rsplit _rdot $0)) $0))) _o _rempty) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 140.6834852695465
        },
        "re2_test_100_if_the_word_ends_with_any_letter_add_m_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_100_if_the_word_ends_with_any_letter_add_m_after_that ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat (_rtail (_rsplit _rdot $0)) _m) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _m (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rsplit _r $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rsplit _g $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat (_rtail (#(lambda (_rsplit _rdot $0)) $0)) _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 39.85814571380615
        },
        "re2_test_101_if_the_word_ends_with_any_letter_any_letter_add_k_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_101_if_the_word_ends_with_any_letter_any_letter_add_k_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _rdot) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat _k (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_102_if_there_is_any_letter_any_letter_replace_that_with_k_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_102_if_there_is_any_letter_any_letter_replace_that_with_k_g ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _rdot) $0) (_rconcat _k _g) $0)) (_rsplit (_rconcat _rdot _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_103_if_there_is_e_any_letter_replace_that_with_e_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_103_if_there_is_e_any_letter_replace_that_with_e_h ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _e _rdot) $0) (_rconcat _e _h) $0)) (_rsplit (_rconcat _e _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_104_if_there_is_m_add_i_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_104_if_there_is_m_add_i_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _m $0) (_rconcat _i $0) $0)) (_rsplit _m $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _m) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _i _m) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _m) _m))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i (_rconcat _m _rempty)) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _m) _m) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 90.17668962478638
        },
        "re2_test_105_if_there_is_l_add_e_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_105_if_there_is_l_add_e_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _l $0) (_rconcat _e $0) $0)) (_rsplit _l $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _l) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _e _l) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _l) _l))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _l) (_rconcat _rempty _l)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _l) _l) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.50259590148926
        },
        "re2_test_106_if_there_is_vowel_r_add_h_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_106_if_there_is_vowel_r_add_h_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _r) $0) (_rconcat $0 _h) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _r) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_107_if_there_is_vowel_any_letter_replace_that_with_t_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_107_if_there_is_vowel_any_letter_replace_that_with_t_g ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) (_rconcat _t _g) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_108_if_the_word_starts_with_consonant_replace_that_with_h_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_108_if_the_word_starts_with_consonant_replace_that_with_h_y ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _h _y) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _h) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _h) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _h) $0 _e) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _h) $0 _i) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _h) $0 _e) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 75.71208715438843
        },
        "re2_test_109_if_the_word_ends_with_any_letter_replace_that_with_i_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_109_if_the_word_ends_with_any_letter_replace_that_with_i_u ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _i _u) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _i _u)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _e (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)) _u $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _b (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)) _u $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _o (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)) _u $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _e (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)) _u (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 8.033499002456665
        },
        "re2_test_110_if_the_word_starts_with_consonant_any_letter_replace_that_with_a_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_110_if_the_word_starts_with_consonant_any_letter_replace_that_with_a_t ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _a _t) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _t _a) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 531.6046166419983
        },
        "re2_test_111_if_there_is_r_any_letter_add_u_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_111_if_there_is_r_any_letter_add_u_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _r _rdot) $0) (_rconcat _u $0) $0)) (_rsplit (_rconcat _r _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_112_if_there_is_i_any_letter_add_p_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_112_if_there_is_i_any_letter_add_p_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _i _rdot) $0) (_rconcat _p $0) $0)) (_rsplit (_rconcat _i _rdot) $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _p _i) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _p _i) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _p _i) _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _p _i) (_rconcat _i _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _p _i) (_rconcat _rempty _i)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 87.52400732040405
        },
        "re2_test_113_if_the_word_ends_with_consonant_consonant_add_s_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_113_if_the_word_ends_with_consonant_consonant_add_s_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _s (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_114_if_there_is_vowel_add_w_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_114_if_there_is_vowel_add_w_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _w $0) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_115_if_the_word_starts_with_consonant_vowel_replace_that_with_n_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_115_if_the_word_starts_with_consonant_vowel_replace_that_with_n_s ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _n _s) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_116_if_the_word_starts_with_consonant_replace_that_with_w_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_116_if_the_word_starts_with_consonant_replace_that_with_w_o ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _w _o) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _o _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _w) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _w) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _w) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 40.01739192008972
        },
        "re2_test_117_if_the_word_starts_with_vowel_any_letter_replace_that_with_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_117_if_the_word_starts_with_vowel_any_letter_replace_that_with_u ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) _u (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_118_if_the_word_starts_with_any_letter_consonant_replace_that_with_n_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_118_if_the_word_starts_with_any_letter_consonant_replace_that_with_n_y ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _n _y) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_119_if_the_word_starts_with_consonant_replace_that_with_f_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_119_if_the_word_starts_with_consonant_replace_that_with_f_i ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _f _i) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _f) $0 _a) $0 _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _f) $0 _o) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 491.22126722335815
        },
        "re2_test_120_if_there_is_any_letter_vowel_add_l_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_120_if_there_is_any_letter_vowel_add_l_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _l $0) $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_121_if_the_word_starts_with_any_letter_replace_that_with_w_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_121_if_the_word_starts_with_any_letter_replace_that_with_w_n ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _w _n) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _n _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _w))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _w) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _w) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 40.056573152542114
        },
        "re2_test_122_if_there_is_any_letter_replace_that_with_h_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_122_if_there_is_any_letter_replace_that_with_h_j ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _h _j) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _j _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _j _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _j) _j _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _h _i) _j _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _h _s) _j _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 8.07332968711853
        },
        "re2_test_123_if_the_word_ends_with_consonant_replace_that_with_g_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_123_if_the_word_ends_with_consonant_replace_that_with_g_x ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _g _x) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _g _x)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _x (_rsplit _e (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _g)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _e (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _g)) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (_rsplit _e (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _g))) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 32.16594052314758
        },
        "re2_test_124_if_the_word_ends_with_any_letter_replace_that_with_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_124_if_the_word_ends_with_any_letter_replace_that_with_m ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) _m (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _m))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _rempty _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _rempty _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 16.288620710372925
        },
        "re2_test_125_if_there_is_n_consonant_add_y_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_125_if_there_is_n_consonant_add_y_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _n (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat $0 _y) $0)) (_rsplit (_rconcat _n (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_126_if_there_is_any_letter_add_w_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_126_if_there_is_any_letter_add_w_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat $0 _w) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _w)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda (_rconcat $0 _w)) (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat _rempty $0) _w)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _w (cdr (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda (_rconcat _w $0)) (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cdr (_rappend _w (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda (_rconcat _w $0)) (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 65.45363783836365
        },
        "re2_test_127_if_the_word_starts_with_any_letter_replace_that_with_m_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_127_if_the_word_starts_with_any_letter_replace_that_with_m_d ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _m _d) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _d _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _d _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _d _m))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _m _d) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _m _d)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 48.45585012435913
        },
        "re2_test_128_if_the_word_ends_with_vowel_any_letter_replace_that_with_v_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_128_if_the_word_ends_with_vowel_any_letter_replace_that_with_v_f ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat _v _f) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_129_if_there_is_vowel_s_replace_that_with_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_129_if_there_is_vowel_s_replace_that_with_l ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _s) $0) _l $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _s) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_130_if_there_is_any_letter_vowel_add_f_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_130_if_there_is_any_letter_vowel_add_f_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat $0 _f) $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_131_if_the_word_ends_with_vowel_any_letter_replace_that_with_g_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_131_if_the_word_ends_with_vowel_any_letter_replace_that_with_g_t ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat _g _t) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_132_if_the_word_starts_with_any_letter_replace_that_with_b_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_132_if_the_word_starts_with_any_letter_replace_that_with_b_b ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _b _b) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _b _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _b))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _b) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _b) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 32.182560443878174
        },
        "re2_test_133_if_there_is_u_replace_that_with_m_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_133_if_there_is_u_replace_that_with_m_v ((lambda (_rflatten (map (lambda (if (_rmatch _u $0) (_rconcat _m _v) $0)) (_rsplit _u $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _v) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _m _v) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _v) _u))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _v) (_rconcat _rempty _u)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _m _v)) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 65.34671711921692
        },
        "re2_test_134_if_there_is_vowel_any_letter_add_s_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_134_if_there_is_vowel_any_letter_add_s_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) (_rconcat _s $0) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_135_if_the_word_starts_with_consonant_vowel_replace_that_with_l_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_135_if_the_word_starts_with_consonant_vowel_replace_that_with_l_t ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _l _t) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_136_if_there_is_a_add_m_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_136_if_there_is_a_add_m_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _a $0) (_rconcat _m $0) $0)) (_rsplit _a $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _a) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _m _a) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _a) _a))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _m _a) _a))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _a) _a) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 74.76803660392761
        },
        "re2_test_137_if_there_is_consonant_any_letter_add_j_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_137_if_there_is_consonant_any_letter_add_j_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0) (_rconcat $0 _j) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_138_if_there_is_i_vowel_replace_that_with_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_138_if_there_is_i_vowel_replace_that_with_d ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _i (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _d $0)) (_rsplit (_rconcat _i (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_139_if_the_word_ends_with_consonant_add_l_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_139_if_the_word_ends_with_consonant_add_l_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)) _l) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _l (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _l $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (_rappend _g (#(lambda (_rsplit _rdot $0)) $0))) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _i (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _l $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 32.3439040184021
        },
        "re2_test_140_if_there_is_vowel_r_replace_that_with_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_140_if_there_is_vowel_r_replace_that_with_s ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _r) $0) _s $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _r) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_141_if_the_word_ends_with_vowel_any_letter_add_i_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_141_if_the_word_ends_with_vowel_any_letter_add_i_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)) _i) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_142_if_the_word_ends_with_consonant_consonant_replace_that_with_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_142_if_the_word_ends_with_consonant_consonant_replace_that_with_v ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _v (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_143_if_the_word_ends_with_consonant_consonant_replace_that_with_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_143_if_the_word_ends_with_consonant_consonant_replace_that_with_u ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _u (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _u) $0 _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _u) $0 _h))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _w (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _u)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 547.457926273346
        },
        "re2_test_144_if_the_word_starts_with_any_letter_replace_that_with_e_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_144_if_the_word_starts_with_any_letter_replace_that_with_e_p ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _e _p) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _p _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _p _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _p _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _p _rempty) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _p _e) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 40.06052541732788
        },
        "re2_test_145_if_there_is_m_add_r_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_145_if_there_is_m_add_r_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _m $0) (_rconcat _r $0) $0)) (_rsplit _m $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _m) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _r _m) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _m) _m))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 117.14900755882263
        },
        "re2_test_146_if_there_is_s_consonant_add_n_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_146_if_there_is_s_consonant_add_n_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _s (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat $0 _n) $0)) (_rsplit (_rconcat _s (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_147_if_the_word_ends_with_vowel_consonant_replace_that_with_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_147_if_the_word_ends_with_vowel_consonant_replace_that_with_u ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _u (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _u) $0 _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _y (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _u)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 684.2210681438446
        },
        "re2_test_148_if_there_is_consonant_vowel_replace_that_with_y_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_148_if_there_is_consonant_vowel_replace_that_with_y_d ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _y _d) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_149_if_there_is_any_letter_add_x_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_149_if_there_is_any_letter_add_x_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _x $0) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _x $0)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda (_rconcat _x $0)) (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _x $0)) (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _rempty (map (lambda (_rconcat _x $0)) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat _rempty _x) $0)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 74.60420608520508
        },
        "re2_test_150_if_the_word_ends_with_any_letter_any_letter_add_d_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_150_if_the_word_ends_with_any_letter_any_letter_add_d_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _rdot) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat _d (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_151_if_there_is_d_vowel_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_151_if_there_is_d_vowel_remove_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _d (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _rempty $0)) (_rsplit (_rconcat _d (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_152_if_there_is_consonant_replace_that_with_l_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_152_if_there_is_consonant_replace_that_with_l_a ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _l _a) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_153_if_there_is_o_any_letter_replace_that_with_t_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_153_if_there_is_o_any_letter_replace_that_with_t_f ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _o _rdot) $0) (_rconcat _t _f) $0)) (_rsplit (_rconcat _o _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_154_if_there_is_e_replace_that_with_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_154_if_there_is_e_replace_that_with_h ((lambda (_rflatten (map (lambda (if (_rmatch _e $0) _h $0)) (_rsplit _e $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _h _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _h _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _h _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)))) _h _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _h _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 40.20266556739807
        },
        "re2_test_155_if_there_is_vowel_replace_that_with_f_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_155_if_there_is_vowel_replace_that_with_f_c ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _f _c) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_156_if_there_is_i_any_letter_replace_that_with_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_156_if_there_is_i_any_letter_replace_that_with_c ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _i _rdot) $0) _c $0)) (_rsplit (_rconcat _i _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_157_if_there_is_h_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_157_if_there_is_h_replace_that_with_t ((lambda (_rflatten (map (lambda (if (_rmatch _h $0) _t $0)) (_rsplit _h $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _t _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _t _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _t _h))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _t) _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t _rempty) _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.79641842842102
        },
        "re2_test_158_if_the_word_ends_with_d_replace_that_with_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_158_if_the_word_ends_with_d_replace_that_with_o ((lambda (_rflatten (_rappend (if (_rmatch _d (_rtail (_rsplit _d $0))) _o (_rtail (_rsplit _d $0))) (_rrevcdr (_rsplit _d $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _o _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 _o _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _o _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 (_rconcat _o _rempty) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 (_rconcat _rempty _o) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 40.209309577941895
        },
        "re2_test_159_if_the_word_ends_with_consonant_any_letter_add_c_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_159_if_the_word_ends_with_consonant_any_letter_add_c_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _c (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_160_if_the_word_starts_with_consonant_any_letter_add_h_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_160_if_the_word_starts_with_consonant_any_letter_add_h_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)) _h) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_161_if_the_word_starts_with_consonant_add_d_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_161_if_the_word_starts_with_consonant_add_d_before_that ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _d (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _d (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _d (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _d $0)) (_rsplit _j $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _d $0)) (_rsplit _y $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _d $0)) (_rsplit _m $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 48.85963201522827
        },
        "re2_test_162_if_the_word_ends_with_consonant_replace_that_with_y_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_162_if_the_word_ends_with_consonant_replace_that_with_y_x ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _y _x) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _y)) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _y _rempty)) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _e (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _y)) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _s (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _y)) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (_rsplit _e (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _y))) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.00621199607849
        },
        "re2_test_163_if_the_word_starts_with_consonant_replace_that_with_f_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_163_if_the_word_starts_with_consonant_replace_that_with_f_l ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _f _l) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _l _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _l _f) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _f (cons _l (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _l _f) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _l _f) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 65.60998892784119
        },
        "re2_test_164_if_the_word_starts_with_any_letter_vowel_add_h_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_164_if_the_word_starts_with_any_letter_vowel_add_h_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _h (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_165_if_the_word_starts_with_consonant_replace_that_with_r_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_165_if_the_word_starts_with_consonant_replace_that_with_r_e ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _r _e) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _r) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _r) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _r) $0 _i) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _r) $0 _e) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _r) $0 _i) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 57.286309003829956
        },
        "re2_test_166_if_the_word_starts_with_any_letter_consonant_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_166_if_the_word_starts_with_any_letter_consonant_replace_that_with_t ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _t (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_167_if_there_is_consonant_add_b_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_167_if_there_is_consonant_add_b_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _b $0) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_168_if_the_word_starts_with_consonant_any_letter_add_a_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_168_if_the_word_starts_with_consonant_any_letter_add_a_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _a (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _a (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _a (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _a (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _a (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (car (#(lambda (_rsplit _rdot $0)) $0)) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 40.761749029159546
        },
        "re2_test_169_if_there_is_n_vowel_replace_that_with_m_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_169_if_there_is_n_vowel_replace_that_with_m_s ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _n (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _m _s) $0)) (_rsplit (_rconcat _n (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_170_if_the_word_starts_with_any_letter_replace_that_with_h_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_170_if_the_word_starts_with_any_letter_replace_that_with_h_f ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _h _f) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _f _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _f _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _f _h) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _f _h) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _f _h) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 57.22469997406006
        },
        "re2_test_171_if_the_word_starts_with_consonant_replace_that_with_e_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_171_if_the_word_starts_with_consonant_replace_that_with_e_j ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _e _j) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j _e) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j _e) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _j _e) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j _e) $0 _a))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j _e) $0 _a) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 75.91479110717773
        },
        "re2_test_172_if_the_word_starts_with_consonant_any_letter_replace_that_with_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_172_if_the_word_starts_with_consonant_any_letter_replace_that_with_l ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) _l (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (_rflatten (cons _l (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 423.6699137687683
        },
        "re2_test_173_if_the_word_starts_with_consonant_replace_that_with_j_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_173_if_the_word_starts_with_consonant_replace_that_with_j_n ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _j _n) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _j) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _j) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _j) $0 _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _j) $0 _e) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _j) $0 _u) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 77.07047080993652
        },
        "re2_test_174_if_there_is_vowel_vowel_replace_that_with_m_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_174_if_there_is_vowel_vowel_replace_that_with_m_l ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _m _l) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_175_if_there_is_vowel_replace_that_with_a_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_175_if_there_is_vowel_replace_that_with_a_q ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _a _q) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_176_if_the_word_ends_with_any_letter_add_m_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_176_if_the_word_ends_with_any_letter_add_m_before_that ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _m (_rtail (_rsplit _rdot $0))) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _m (_rtail (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _m (_rtail (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _m (_rtail (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _m (_rtail (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _m (_rtail (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 74.94088053703308
        },
        "re2_test_177_if_the_word_starts_with_any_letter_a_replace_that_with_x_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_177_if_the_word_starts_with_any_letter_a_replace_that_with_x_b ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _a) (car (_rsplit (_rconcat _rdot _a) $0))) (_rconcat _x _b) (car (_rsplit (_rconcat _rdot _a) $0))) (cdr (_rsplit (_rconcat _rdot _a) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_178_if_the_word_ends_with_any_letter_replace_that_with_p_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_178_if_the_word_ends_with_any_letter_replace_that_with_p_q ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _p _q) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _q _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _p)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _p)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (_rflatten (_rappend _q (#(lambda (_rsplit _rdot $0)) $0))) _p _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _p $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 40.70020937919617
        },
        "re2_test_179_if_the_word_starts_with_vowel_replace_that_with_o_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_179_if_the_word_starts_with_vowel_replace_that_with_o_s ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _o _s) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _o) $0 _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 477.993465423584
        },
        "re2_test_180_if_there_is_e_replace_that_with_r_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_180_if_there_is_e_replace_that_with_r_u ((lambda (_rflatten (map (lambda (if (_rmatch _e $0) (_rconcat _r _u) $0)) (_rsplit _e $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _u) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _r _u) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _u) _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _r _u)) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) (_rconcat _r _u) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 32.57949376106262
        },
        "re2_test_181_if_there_is_m_replace_that_with_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_181_if_there_is_m_replace_that_with_r ((lambda (_rflatten (map (lambda (if (_rmatch _m $0) _r $0)) (_rsplit _m $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _r _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _r _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _r _m))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _rempty) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _r) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.203537464141846
        },
        "re2_test_182_if_the_word_starts_with_consonant_consonant_add_w_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_182_if_the_word_starts_with_consonant_consonant_add_w_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _w) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_183_if_the_word_starts_with_vowel_consonant_add_g_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_183_if_the_word_starts_with_vowel_consonant_add_g_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _g) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _g) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _m _g) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _g) _m))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _m _g) _m))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _g) _m)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 75.50155067443848
        },
        "re2_test_184_if_there_is_consonant_t_add_s_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_184_if_there_is_consonant_t_add_s_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _t) $0) (_rconcat _s $0) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _t) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_185_if_the_word_ends_with_consonant_replace_that_with_t_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_185_if_the_word_ends_with_consonant_replace_that_with_t_c ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _t _c) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _c _t) $0 _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _i (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _c _t)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _i (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _c (_rconcat _rempty _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _i (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _t)) _c $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _i (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _t)) _c $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 75.99577736854553
        },
        "re2_test_186_if_there_is_vowel_replace_that_with_m_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_186_if_there_is_vowel_replace_that_with_m_x ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _m _x) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_187_if_there_is_r_add_v_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_187_if_there_is_r_add_v_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) (_rconcat $0 _v) $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _v) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _r _v) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _v) _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _r) _v) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _v) (_rconcat _rempty _r)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 57.41247296333313
        },
        "re2_test_188_if_there_is_any_letter_vowel_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_188_if_there_is_any_letter_vowel_replace_that_with_q ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _q $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_189_if_there_is_i_replace_that_with_w_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_189_if_there_is_i_replace_that_with_w_d ((lambda (_rflatten (map (lambda (if (_rmatch _i $0) (_rconcat _w _d) $0)) (_rsplit _i $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w _d) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _w _d) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w _d) _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) (_rconcat _w _d) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (_rsplit _i $0)) (_rconcat _w _d) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 57.34671401977539
        },
        "re2_test_190_if_the_word_starts_with_consonant_any_letter_replace_that_with_h_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_190_if_the_word_starts_with_consonant_any_letter_replace_that_with_h_t ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _h _t) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _t _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))))) _t _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))) _t _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _t _h))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _h _t) (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 75.30371451377869
        },
        "re2_test_191_if_there_is_n_replace_that_with_c_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_191_if_there_is_n_replace_that_with_c_q ((lambda (_rflatten (map (lambda (if (_rmatch _n $0) (_rconcat _c _q) $0)) (_rsplit _n $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _q) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _c _q) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _q) _n))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _c) _q) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (_rsplit _i $0)) (_rconcat _c _q) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 40.86845517158508
        },
        "re2_test_192_if_there_is_any_letter_add_u_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_192_if_there_is_any_letter_add_u_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _u $0) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _u $0)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda (_rconcat _u $0)) (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _u $0)) (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _u $0)) (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 117.57553434371948
        },
        "re2_test_193_if_there_is_i_consonant_replace_that_with_j_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_193_if_there_is_i_consonant_replace_that_with_j_v ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _i (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _j _v) $0)) (_rsplit (_rconcat _i (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_194_if_there_is_consonant_e_add_y_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_194_if_there_is_consonant_e_add_y_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0) (_rconcat _y $0) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_195_if_there_is_t_add_r_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_195_if_there_is_t_add_r_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat $0 _r) $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t _r) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _t _r) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t _r) _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t _r) _t) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t _r) _t) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 65.4958062171936
        },
        "re2_test_196_if_the_word_ends_with_vowel_any_letter_add_t_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_196_if_the_word_ends_with_vowel_any_letter_add_t_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)) _t) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_197_if_there_is_vowel_r_add_j_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_197_if_there_is_vowel_r_add_j_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _r) $0) (_rconcat _j $0) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _r) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_198_if_there_is_l_vowel_replace_that_with_x_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_198_if_there_is_l_vowel_replace_that_with_x_n ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _l (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _x _n) $0)) (_rsplit (_rconcat _l (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_199_if_the_word_starts_with_vowel_replace_that_with_c_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_199_if_the_word_starts_with_vowel_replace_that_with_c_x ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _c _x) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _c) $0 _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 721.9444222450256
        },
        "re2_test_200_if_the_word_ends_with_consonant_add_w_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_200_if_the_word_ends_with_consonant_add_w_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)) _w) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _w (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _w $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _w (_rsplit _e $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _w (_rsplit _r $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _w (_rsplit _g $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0003256797790527344
        },
        "re2_test_201_if_there_is_i_replace_that_with_s_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_201_if_there_is_i_replace_that_with_s_p ((lambda (_rflatten (map (lambda (if (_rmatch _i $0) (_rconcat _s _p) $0)) (_rsplit _i $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _s _p) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _s _p) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _s _p) _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) (_rconcat _s _p) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (_rsplit _e $0)) (_rconcat _s _p) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 57.60520815849304
        },
        "re2_test_202_if_the_word_ends_with_any_letter_consonant_add_t_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_202_if_the_word_ends_with_any_letter_consonant_add_t_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _t (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_203_if_there_is_vowel_replace_that_with_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_203_if_there_is_vowel_replace_that_with_g ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) _g $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_204_if_the_word_ends_with_any_letter_replace_that_with_r_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_204_if_the_word_ends_with_any_letter_replace_that_with_r_r ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _r _r) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _r _r)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _r (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r) _r _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (_rappend _r (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r)))) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (_rappend _u (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r)))) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.179200410842896
        },
        "re2_test_205_if_the_word_starts_with_vowel_consonant_replace_that_with_y_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_205_if_the_word_starts_with_vowel_consonant_replace_that_with_y_v ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _y _v) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_206_if_there_is_consonant_vowel_replace_that_with_o_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_206_if_there_is_consonant_vowel_replace_that_with_o_q ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _o _q) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_207_if_there_is_p_replace_that_with_x_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_207_if_there_is_p_replace_that_with_x_c ((lambda (_rflatten (map (lambda (if (_rmatch _p $0) (_rconcat _x _c) $0)) (_rsplit _p $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _x _c) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _x _c) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _x _c) _p))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _x _c)) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _x (_rconcat _rempty _c)) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 65.97599053382874
        },
        "re2_test_208_if_there_is_a_replace_that_with_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_208_if_there_is_a_replace_that_with_h ((lambda (_rflatten (map (lambda (if (_rmatch _a $0) _h $0)) (_rsplit _a $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _h _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _h _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _h _a))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _h _rempty) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _h _a) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.01495385169983
        },
        "re2_test_209_if_there_is_i_any_letter_replace_that_with_q_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_209_if_there_is_i_any_letter_replace_that_with_q_c ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _i _rdot) $0) (_rconcat _q _c) $0)) (_rsplit (_rconcat _i _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_210_if_the_word_starts_with_any_letter_o_replace_that_with_t_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_210_if_the_word_starts_with_any_letter_o_replace_that_with_t_b ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _o) (car (_rsplit (_rconcat _rdot _o) $0))) (_rconcat _t _b) (car (_rsplit (_rconcat _rdot _o) $0))) (cdr (_rsplit (_rconcat _rdot _o) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_211_if_there_is_c_replace_that_with_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_211_if_there_is_c_replace_that_with_k ((lambda (_rflatten (map (lambda (if (_rmatch _c $0) _k $0)) (_rsplit _c $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _k _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _k _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _k _c))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _rempty) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _k _c) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 57.3763325214386
        },
        "re2_test_212_if_there_is_vowel_n_replace_that_with_s_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_212_if_there_is_vowel_n_replace_that_with_s_i ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _n) $0) (_rconcat _s _i) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _n) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_213_if_the_word_starts_with_any_letter_consonant_add_t_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_213_if_the_word_starts_with_any_letter_consonant_add_t_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _t) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_214_if_there_is_any_letter_l_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_214_if_there_is_any_letter_l_remove_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _l) $0) _rempty $0)) (_rsplit (_rconcat _rdot _l) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_215_if_the_word_ends_with_any_letter_consonant_add_l_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_215_if_the_word_ends_with_any_letter_consonant_add_l_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _l) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _l $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _r $0) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _t $0) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 32.589263677597046
        },
        "re2_test_216_if_the_word_ends_with_consonant_any_letter_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_216_if_the_word_ends_with_consonant_any_letter_replace_that_with_t ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) _t (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _t) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _t _rempty) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _t) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _t) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _t))) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 77.16657829284668
        },
        "re2_test_217_if_there_is_u_add_k_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_217_if_there_is_u_add_k_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _u $0) (_rconcat $0 _k) $0)) (_rsplit _u $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _u _k) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _u _k) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _u _k) _u))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _u _k) (_rconcat _u _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _u _k) _u) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 65.65151810646057
        },
        "re2_test_218_if_the_word_ends_with_any_letter_replace_that_with_m_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_218_if_the_word_ends_with_any_letter_replace_that_with_m_r ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _m _r) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _r _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _m _r)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _i _m) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _r _m) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _w _m) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.27198886871338
        },
        "re2_test_219_if_the_word_starts_with_consonant_add_h_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_219_if_the_word_starts_with_consonant_add_h_before_that ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _h (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _h (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _h (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _h (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _h (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (car (#(lambda (_rsplit _rdot $0)) $0)) _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.32991075515747
        },
        "re2_test_220_if_there_is_any_letter_vowel_add_x_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_220_if_there_is_any_letter_vowel_add_x_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat $0 _x) $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_221_if_the_word_starts_with_vowel_replace_that_with_v_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_221_if_the_word_starts_with_vowel_replace_that_with_v_o ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _v _o) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_222_if_the_word_starts_with_consonant_replace_that_with_w_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_222_if_the_word_starts_with_consonant_replace_that_with_w_y ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _w _y) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _y _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _w _y) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _w) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _w) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.24325084686279
        },
        "re2_test_223_if_the_word_starts_with_any_letter_add_w_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_223_if_the_word_starts_with_any_letter_add_w_after_that ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat (car (_rsplit _rdot $0)) _w) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w (car (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w (car (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _w (car (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w (car (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w (car (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.21210837364197
        },
        "re2_test_224_if_the_word_starts_with_consonant_consonant_replace_that_with_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_224_if_the_word_starts_with_consonant_consonant_replace_that_with_v ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _v (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_225_if_there_is_consonant_any_letter_replace_that_with_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_225_if_there_is_consonant_any_letter_replace_that_with_k ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0) _k $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_226_if_there_is_t_any_letter_add_j_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_226_if_there_is_t_any_letter_add_j_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _t _rdot) $0) (_rconcat $0 _j) $0)) (_rsplit (_rconcat _t _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_227_if_there_is_vowel_t_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_227_if_there_is_vowel_t_remove_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _t) $0) _rempty $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _t) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_228_if_there_is_a_replace_that_with_g_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_228_if_there_is_a_replace_that_with_g_w ((lambda (_rflatten (map (lambda (if (_rmatch _a $0) (_rconcat _g _w) $0)) (_rsplit _a $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _g _w) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _g _w) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _g _w) _a))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (_rsplit _i $0)) (_rconcat _g _w) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _g _w) _a) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 75.07905554771423
        },
        "re2_test_229_if_there_is_any_letter_vowel_replace_that_with_h_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_229_if_there_is_any_letter_vowel_replace_that_with_h_d ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _h _d) $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_230_if_the_word_ends_with_any_letter_add_p_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_230_if_the_word_ends_with_any_letter_add_p_before_that ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _p (_rtail (_rsplit _rdot $0))) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 (_rtail (#(lambda (_rsplit _rdot $0)) $0)) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _p (_rtail (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _p)) (_rtail (#(lambda (_rsplit _rdot $0)) $0)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _p)) (_rtail (#(lambda (_rsplit _rdot $0)) $0)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _i (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _p)) (_rtail (#(lambda (_rsplit _rdot $0)) $0)) $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 78.22245454788208
        },
        "re2_test_231_if_there_is_any_letter_replace_that_with_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_231_if_there_is_any_letter_replace_that_with_g ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) _g $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda _g) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _g _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _rempty _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _g _rdot))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _g _rempty) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 24.5419340133667
        },
        "re2_test_232_if_the_word_starts_with_any_letter_add_u_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_232_if_the_word_starts_with_any_letter_add_u_before_that ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _u (car (_rsplit _rdot $0))) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _u (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _u (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _u (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cons _a (#(lambda (_rsplit _rdot $0)) $0))) _u _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cons _f (#(lambda (_rsplit _rdot $0)) $0))) _u _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.2593834400177
        },
        "re2_test_233_if_there_is_vowel_any_letter_add_a_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_233_if_there_is_vowel_any_letter_add_a_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) (_rconcat $0 _a) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_234_if_there_is_any_letter_vowel_replace_that_with_e_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_234_if_there_is_any_letter_vowel_replace_that_with_e_x ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _e _x) $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_235_if_the_word_ends_with_any_letter_consonant_add_h_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_235_if_the_word_ends_with_any_letter_consonant_add_h_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _h (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_236_if_the_word_starts_with_consonant_replace_that_with_i_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_236_if_the_word_starts_with_consonant_replace_that_with_i_k ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _i _k) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _k _i) $0 _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _k _i) $0 _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _k _i) $0 _o))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _k _i) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _k _rempty) _i) $0 _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 101.68815445899963
        },
        "re2_test_237_if_the_word_starts_with_consonant_vowel_replace_that_with_v_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_237_if_the_word_starts_with_consonant_vowel_replace_that_with_v_d ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _v _d) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_238_if_there_is_vowel_replace_that_with_p_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_238_if_there_is_vowel_replace_that_with_p_s ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _p _s) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_239_if_there_is_i_any_letter_replace_that_with_b_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_239_if_there_is_i_any_letter_replace_that_with_b_n ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _i _rdot) $0) (_rconcat _b _n) $0)) (_rsplit (_rconcat _i _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_240_if_there_is_vowel_any_letter_replace_that_with_m_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_240_if_there_is_vowel_any_letter_replace_that_with_m_y ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) (_rconcat _m _y) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_241_if_there_is_any_letter_consonant_add_l_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_241_if_there_is_any_letter_consonant_add_l_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat $0 _l) $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_242_if_there_is_a_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_242_if_there_is_a_replace_that_with_j ((lambda (_rflatten (map (lambda (if (_rmatch _a $0) _j $0)) (_rsplit _a $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _j _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _j _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _j _a))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _j) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (_rsplit _i $0)) _j _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 40.64706325531006
        },
        "re2_test_243_if_there_is_any_letter_any_letter_replace_that_with_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_243_if_there_is_any_letter_any_letter_replace_that_with_h ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _rdot) $0) _h $0)) (_rsplit (_rconcat _rdot _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_244_if_there_is_n_replace_that_with_c_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_244_if_there_is_n_replace_that_with_c_e ((lambda (_rflatten (map (lambda (if (_rmatch _n $0) (_rconcat _c _e) $0)) (_rsplit _n $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _e) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _c _e) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _e) _n))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)))) (_rconcat _c _e) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _e) _n) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 40.561293601989746
        },
        "re2_test_245_if_there_is_l_replace_that_with_x_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_245_if_there_is_l_replace_that_with_x_k ((lambda (_rflatten (map (lambda (if (_rmatch _l $0) (_rconcat _x _k) $0)) (_rsplit _l $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _x _k) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _x _k) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _x _k) _l))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _x) _k) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _x _k)) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.96227431297302
        },
        "re2_test_246_if_the_word_starts_with_any_letter_replace_that_with_x_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_246_if_the_word_starts_with_any_letter_replace_that_with_x_h ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _x _h) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h _x))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _h _x))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h _x))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _x (cons _h (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h _x) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 65.67222857475281
        },
        "re2_test_247_if_the_word_starts_with_consonant_any_letter_add_j_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_247_if_the_word_starts_with_consonant_any_letter_add_j_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)) _j) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_248_if_the_word_ends_with_any_letter_consonant_add_c_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_248_if_the_word_ends_with_any_letter_consonant_add_c_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _c (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_249_if_the_word_ends_with_d_replace_that_with_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_249_if_the_word_ends_with_d_replace_that_with_s ((lambda (_rflatten (_rappend (if (_rmatch _d (_rtail (_rsplit _d $0))) _s (_rtail (_rsplit _d $0))) (_rrevcdr (_rsplit _d $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 _s _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _s _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 _s _d))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _s _d))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 _s _d) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 76.5069694519043
        },
        "re2_test_250_if_there_is_vowel_consonant_replace_that_with_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_250_if_there_is_vowel_consonant_replace_that_with_s ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _s $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_251_if_the_word_starts_with_vowel_replace_that_with_w_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_251_if_the_word_starts_with_vowel_replace_that_with_w_e ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _w _e) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_252_if_the_word_starts_with_vowel_add_a_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_252_if_the_word_starts_with_vowel_add_a_after_that ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)) _a) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a (car (#(lambda (_rsplit _rdot $0)) $0))) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) $0 (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a (car (#(lambda (_rsplit _rdot $0)) $0))))) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a (car (#(lambda (_rsplit _rdot $0)) $0))) _u))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a (car (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a (car (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 95.93752479553223
        },
        "re2_test_253_if_the_word_ends_with_d_replace_that_with_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_253_if_the_word_ends_with_d_replace_that_with_b ((lambda (_rflatten (_rappend (if (_rmatch _d (_rtail (_rsplit _d $0))) _b (_rtail (_rsplit _d $0))) (_rrevcdr (_rsplit _d $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _b _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 _b _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _b _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _b _d))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 (_rconcat _rempty _b) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 40.56399917602539
        },
        "re2_test_254_if_the_word_starts_with_vowel_replace_that_with_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_254_if_the_word_starts_with_vowel_replace_that_with_d ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) _d (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_255_if_there_is_vowel_replace_that_with_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_255_if_there_is_vowel_replace_that_with_a ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) _a $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_256_if_the_word_starts_with_consonant_replace_that_with_v_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_256_if_the_word_starts_with_consonant_replace_that_with_v_y ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _v _y) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _v))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _y _v))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _v))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _v) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _v) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.05453133583069
        },
        "re2_test_257_if_there_is_vowel_consonant_add_a_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_257_if_there_is_vowel_consonant_add_a_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat $0 _a) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_258_if_there_is_any_letter_consonant_add_e_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_258_if_there_is_any_letter_consonant_add_e_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _e $0) $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_259_if_there_is_any_letter_replace_that_with_y_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_259_if_there_is_any_letter_replace_that_with_y_p ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _y _p) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _p _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _p _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (_rsplit _e $0)) _p _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _y) _p _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda _p) (#(lambda (_rsplit _rdot $0)) $0))) _p _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 24.229219436645508
        },
        "re2_test_260_if_there_is_r_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_260_if_there_is_r_remove_that ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) _rempty $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _rempty _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _rempty _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _rempty _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _rempty _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _rempty _r) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 32.11390042304993
        },
        "re2_test_261_if_the_word_ends_with_s_replace_that_with_b_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_261_if_the_word_ends_with_s_replace_that_with_b_r ((lambda (_rflatten (_rappend (if (_rmatch _s (_rtail (_rsplit _s $0))) (_rconcat _b _r) (_rtail (_rsplit _s $0))) (_rrevcdr (_rsplit _s $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 (_rconcat _b _r) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _b _r) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 (_rconcat _b _r) _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 (_rconcat _b _r) (_ror _e _s)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 (_rconcat _b _r) (_ror _p _s)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 77.48284912109375
        },
        "re2_test_262_if_there_is_d_replace_that_with_g_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_262_if_there_is_d_replace_that_with_g_y ((lambda (_rflatten (map (lambda (if (_rmatch _d $0) (_rconcat _g _y) $0)) (_rsplit _d $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _g _y) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _g _y) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _g _y) _d))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _g _y)) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _g _y) _d) _y _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 48.77735233306885
        },
        "re2_test_263_if_there_is_any_letter_consonant_add_h_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_263_if_there_is_any_letter_consonant_add_h_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat $0 _h) $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_264_if_the_word_ends_with_vowel_consonant_replace_that_with_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_264_if_the_word_ends_with_vowel_consonant_replace_that_with_f ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _f (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_265_if_there_is_any_letter_i_replace_that_with_m_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_265_if_there_is_any_letter_i_replace_that_with_m_n ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _i) $0) (_rconcat _m _n) $0)) (_rsplit (_rconcat _rdot _i) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_266_if_the_word_starts_with_consonant_replace_that_with_e_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_266_if_the_word_starts_with_consonant_replace_that_with_e_o ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _e _o) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _o _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _e) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _e) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _e) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 32.13152599334717
        },
        "re2_test_267_if_the_word_starts_with_any_letter_vowel_replace_that_with_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_267_if_the_word_starts_with_any_letter_vowel_replace_that_with_l ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _l (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_268_if_the_word_starts_with_any_letter_consonant_replace_that_with_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_268_if_the_word_starts_with_any_letter_consonant_replace_that_with_a ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _a (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _a (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _a _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _rempty _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _a (#(lambda (_rsplit _rdot $0)) (_rflatten (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _a (cdr (#(lambda (_rsplit _rdot $0)) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 48.75276565551758
        },
        "re2_test_269_if_there_is_any_letter_vowel_add_t_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_269_if_there_is_any_letter_vowel_add_t_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat $0 _t) $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_270_if_the_word_ends_with_any_letter_replace_that_with_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_270_if_the_word_ends_with_any_letter_replace_that_with_e ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) _e (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _e _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _rempty _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _rempty _e)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _e $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 16.05038332939148
        },
        "re2_test_271_if_the_word_starts_with_consonant_vowel_replace_that_with_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_271_if_the_word_starts_with_consonant_vowel_replace_that_with_p ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _p (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_272_if_the_word_starts_with_consonant_replace_that_with_f_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_272_if_the_word_starts_with_consonant_replace_that_with_f_x ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _f _x) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _x _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _f _x) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _f _x)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _f) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.37668418884277
        },
        "re2_test_273_if_there_is_consonant_any_letter_add_x_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_273_if_there_is_consonant_any_letter_add_x_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0) (_rconcat $0 _x) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_274_if_the_word_starts_with_vowel_any_letter_replace_that_with_v_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_274_if_the_word_starts_with_vowel_any_letter_replace_that_with_v_p ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat _v _p) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_275_if_the_word_ends_with_consonant_add_x_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_275_if_the_word_ends_with_consonant_add_x_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)) _x) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _x (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _x (_rsplit _e $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _e $0) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (#(lambda (_rsplit _rdot $0)) $0)) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 15.972209692001343
        },
        "re2_test_276_if_there_is_l_any_letter_add_q_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_276_if_there_is_l_any_letter_add_q_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _l _rdot) $0) (_rconcat _q $0) $0)) (_rsplit (_rconcat _l _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_277_if_there_is_consonant_consonant_replace_that_with_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_277_if_there_is_consonant_consonant_replace_that_with_i ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _i $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_278_if_there_is_l_vowel_replace_that_with_s_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_278_if_there_is_l_vowel_replace_that_with_s_f ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _l (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _s _f) $0)) (_rsplit (_rconcat _l (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_279_if_the_word_starts_with_consonant_add_q_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_279_if_the_word_starts_with_consonant_add_q_before_that ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _q (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (_rflatten (cons _q (#(lambda (_rsplit _rdot $0)) $0))) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _q (#(lambda (_rsplit _rdot $0)) $0))))) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (_rflatten (cons _q (#(lambda (_rsplit _rdot $0)) $0))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (_rflatten (cons _q (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (car (#(lambda (_rsplit _rdot $0)) $0)) _q) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 64.5291862487793
        },
        "re2_test_280_if_there_is_n_any_letter_replace_that_with_d_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_280_if_there_is_n_any_letter_replace_that_with_d_j ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _n _rdot) $0) (_rconcat _d _j) $0)) (_rsplit (_rconcat _n _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_281_if_the_word_starts_with_any_letter_replace_that_with_w_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_281_if_the_word_starts_with_any_letter_replace_that_with_w_x ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _w _x) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _x _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _w) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _w) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _w) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 39.689106464385986
        },
        "re2_test_282_if_there_is_g_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_282_if_there_is_g_remove_that ((lambda (_rflatten (map (lambda (if (_rmatch _g $0) _rempty $0)) (_rsplit _g $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _rempty _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _rempty _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _rempty _g))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)))) _rempty _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _rempty _g) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 48.12231373786926
        },
        "re2_test_283_if_there_is_b_replace_that_with_a_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_283_if_there_is_b_replace_that_with_a_m ((lambda (_rflatten (map (lambda (if (_rmatch _b $0) (_rconcat _a _m) $0)) (_rsplit _b $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _a _m) _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _a _m) _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _a _m) _b))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _a) _m) _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _a _m) _b) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 55.79263114929199
        },
        "re2_test_284_if_the_word_starts_with_consonant_vowel_replace_that_with_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_284_if_the_word_starts_with_consonant_vowel_replace_that_with_c ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _c (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_285_if_there_is_consonant_replace_that_with_f_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_285_if_there_is_consonant_replace_that_with_f_w ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _f _w) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_286_if_there_is_s_any_letter_replace_that_with_h_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_286_if_there_is_s_any_letter_replace_that_with_h_y ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _s _rdot) $0) (_rconcat _h _y) $0)) (_rsplit (_rconcat _s _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_287_if_the_word_ends_with_vowel_any_letter_add_q_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_287_if_the_word_ends_with_vowel_any_letter_add_q_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat _q (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_288_if_there_is_any_letter_h_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_288_if_there_is_any_letter_h_replace_that_with_w ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _h) $0) _w $0)) (_rsplit (_rconcat _rdot _h) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_289_if_there_is_consonant_any_letter_add_e_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_289_if_there_is_consonant_any_letter_add_e_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0) (_rconcat $0 _e) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_290_if_the_word_ends_with_any_letter_any_letter_add_x_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_290_if_the_word_ends_with_any_letter_any_letter_add_x_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _rdot) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat (_rtail (_rsplit (_rconcat _rdot _rdot) $0)) _x) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _x (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _e $0) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (cons _rempty (#(lambda (_rsplit _rdot $0)) $0)) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (#(lambda (_rsplit _rdot $0)) $0)) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 8.04936146736145
        },
        "re2_test_291_if_the_word_starts_with_consonant_vowel_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_291_if_the_word_starts_with_consonant_vowel_replace_that_with_x ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _x (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_292_if_there_is_m_add_q_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_292_if_there_is_m_add_q_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _m $0) (_rconcat $0 _q) $0)) (_rsplit _m $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _q) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _m _q) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _q) _m))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _q) (_rconcat _m _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _q) (_rconcat _rempty _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 58.04743766784668
        },
        "re2_test_293_if_there_is_c_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_293_if_there_is_c_replace_that_with_x ((lambda (_rflatten (map (lambda (if (_rmatch _c $0) _x $0)) (_rsplit _c $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _x _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _x _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _x _c))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _x) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _x _rempty) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 55.77509570121765
        },
        "re2_test_294_if_there_is_c_any_letter_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_294_if_there_is_c_any_letter_remove_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _c _rdot) $0) _rempty $0)) (_rsplit (_rconcat _c _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_295_if_there_is_vowel_consonant_replace_that_with_n_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_295_if_there_is_vowel_consonant_replace_that_with_n_q ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _n _q) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_296_if_the_word_starts_with_consonant_consonant_replace_that_with_n_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_296_if_the_word_starts_with_consonant_consonant_replace_that_with_n_f ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _n _f) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_297_if_the_word_starts_with_vowel_consonant_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_297_if_the_word_starts_with_vowel_consonant_replace_that_with_q ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _q (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_298_if_there_is_any_letter_replace_that_with_o_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_298_if_there_is_any_letter_replace_that_with_o_m ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _o _m) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _m _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _m _o))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 (_rconcat _o _m) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _rempty (_rconcat _o _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _o _m) _rdot))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 55.70824837684631
        },
        "re2_test_299_if_there_is_n_any_letter_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_299_if_there_is_n_any_letter_replace_that_with_t ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _n _rdot) $0) _t $0)) (_rsplit (_rconcat _n _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_300_if_there_is_a_any_letter_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_300_if_there_is_a_any_letter_remove_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _a _rdot) $0) _rempty $0)) (_rsplit (_rconcat _a _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_301_if_there_is_c_add_f_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_301_if_there_is_c_add_f_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _c $0) (_rconcat $0 _f) $0)) (_rsplit _c $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _f) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _c _f) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _f) _c))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)))) (_rconcat _c _f) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _f) _c) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 64.27221202850342
        },
        "re2_test_302_if_the_word_ends_with_vowel_any_letter_replace_that_with_r_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_302_if_the_word_ends_with_vowel_any_letter_replace_that_with_r_r ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat _r _r) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _r _r) $0 _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 685.8074114322662
        },
        "re2_test_303_if_there_is_consonant_vowel_replace_that_with_h_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_303_if_there_is_consonant_vowel_replace_that_with_h_q ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _h _q) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_304_if_the_word_ends_with_any_letter_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_304_if_the_word_ends_with_any_letter_replace_that_with_j ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) _j (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _j _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _rempty _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _rempty _j)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _j $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 15.994906663894653
        },
        "re2_test_305_if_the_word_starts_with_any_letter_replace_that_with_w_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_305_if_the_word_starts_with_any_letter_replace_that_with_w_e ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _w _e) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _e _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _e) _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _w _e) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _w _e)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 48.03809571266174
        },
        "re2_test_306_if_there_is_u_replace_that_with_f_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_306_if_there_is_u_replace_that_with_f_n ((lambda (_rflatten (map (lambda (if (_rmatch _u $0) (_rconcat _f _n) $0)) (_rsplit _u $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f _n) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _f _n) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f _n) _u))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f _n) _u) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f _n) _u) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 75.08837628364563
        },
        "re2_test_307_if_the_word_starts_with_consonant_add_j_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_307_if_the_word_starts_with_consonant_add_j_before_that ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _j (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _j (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _j (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _j (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _j (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _i $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 39.49071383476257
        },
        "re2_test_308_if_the_word_starts_with_consonant_any_letter_replace_that_with_n_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_308_if_the_word_starts_with_consonant_any_letter_replace_that_with_n_d ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _n _d) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _d _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))))) _d _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))) _d _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _n _d) (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _d _n) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 74.60987997055054
        },
        "re2_test_309_if_the_word_starts_with_consonant_any_letter_replace_that_with_y_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_309_if_the_word_starts_with_consonant_any_letter_replace_that_with_y_k ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _y _k) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_310_if_there_is_h_replace_that_with_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_310_if_there_is_h_replace_that_with_f ((lambda (_rflatten (map (lambda (if (_rmatch _h $0) _f $0)) (_rsplit _h $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _f _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _f _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _f _h))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _f) _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _f _h))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 64.05606460571289
        },
        "re2_test_311_if_there_is_any_letter_replace_that_with_t_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_311_if_there_is_any_letter_replace_that_with_t_v ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _t _v) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _v _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _v) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _rempty (_rconcat _t _v)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _v (_rconcat _rempty _t)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _v (_rconcat _t _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 39.453370809555054
        },
        "re2_test_312_if_the_word_starts_with_any_letter_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_312_if_the_word_starts_with_any_letter_replace_that_with_x ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) _x (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _x))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _rempty _x))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _x _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _x) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 39.5188205242157
        },
        "re2_test_313_if_the_word_ends_with_consonant_replace_that_with_a_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_313_if_the_word_ends_with_consonant_replace_that_with_a_x ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _a _x) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _a _x)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _a _x)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _a (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _e (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _a _x)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _e (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _a)) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 31.59036350250244
        },
        "re2_test_314_if_there_is_r_any_letter_replace_that_with_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_314_if_there_is_r_any_letter_replace_that_with_l ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _r _rdot) $0) _l $0)) (_rsplit (_rconcat _r _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_315_if_there_is_n_add_r_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_315_if_there_is_n_add_r_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _n $0) (_rconcat $0 _r) $0)) (_rsplit _n $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _r) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _n _r) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _r) _n))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _r) (_rconcat _n _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _r) (_rconcat _rempty _n)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 95.68357038497925
        },
        "re2_test_316_if_the_word_ends_with_consonant_replace_that_with_e_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_316_if_the_word_ends_with_consonant_replace_that_with_e_s ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _e _s) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _s _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _s _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _s _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _s) _s _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _s _e) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 75.64849209785461
        },
        "re2_test_317_if_there_is_vowel_replace_that_with_b_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_317_if_there_is_vowel_replace_that_with_b_c ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _b _c) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_318_if_the_word_starts_with_consonant_vowel_replace_that_with_m_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_318_if_the_word_starts_with_consonant_vowel_replace_that_with_m_h ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _m _h) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_319_if_the_word_starts_with_consonant_replace_that_with_c_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_319_if_the_word_starts_with_consonant_replace_that_with_c_d ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _c _d) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_320_if_there_is_any_letter_replace_that_with_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_320_if_there_is_any_letter_replace_that_with_b ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) _b $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda _b) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _b _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _rempty _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _b _rdot))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _b) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.793424129486084
        },
        "re2_test_321_if_the_word_starts_with_consonant_vowel_replace_that_with_e_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_321_if_the_word_starts_with_consonant_vowel_replace_that_with_e_g ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _e _g) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_322_if_there_is_r_replace_that_with_n_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_322_if_there_is_r_replace_that_with_n_d ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) (_rconcat _n _d) $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _d) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _n _d) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _d) _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _d) _r) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _d) _r) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 55.72820258140564
        },
        "re2_test_323_if_there_is_vowel_replace_that_with_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_323_if_there_is_vowel_replace_that_with_v ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) _v $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_324_if_the_word_ends_with_s_replace_that_with_l_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_324_if_the_word_ends_with_s_replace_that_with_l_j ((lambda (_rflatten (_rappend (if (_rmatch _s (_rtail (_rsplit _s $0))) (_rconcat _l _j) (_rtail (_rsplit _s $0))) (_rrevcdr (_rsplit _s $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 (_rconcat _l _j) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) $0 (_rconcat _l _j) _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 238.4822132587433
        },
        "re2_test_325_if_the_word_starts_with_vowel_replace_that_with_a_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_325_if_the_word_starts_with_vowel_replace_that_with_a_o ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _a _o) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _a) $0 _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 482.611665725708
        },
        "re2_test_326_if_the_word_starts_with_vowel_replace_that_with_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_326_if_the_word_starts_with_vowel_replace_that_with_p ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) _p (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_327_if_there_is_t_vowel_double_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_327_if_there_is_t_vowel_double_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _t (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat $0 $0) $0)) (_rsplit (_rconcat _t (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_328_if_there_is_any_letter_vowel_replace_that_with_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_328_if_there_is_any_letter_vowel_replace_that_with_d ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _d $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_329_if_there_is_vowel_replace_that_with_u_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_329_if_there_is_vowel_replace_that_with_u_y ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _u _y) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_330_if_there_is_vowel_replace_that_with_h_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_330_if_there_is_vowel_replace_that_with_h_l ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _h _l) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_331_if_there_is_consonant_replace_that_with_f_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_331_if_there_is_consonant_replace_that_with_f_g ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _f _g) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_332_if_the_word_ends_with_consonant_replace_that_with_q_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_332_if_the_word_ends_with_consonant_replace_that_with_q_q ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _q _q) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _q _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _q _q)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _q _q)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _q)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _rempty (_rconcat _q _q)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 31.790969133377075
        },
        "re2_test_333_if_the_word_ends_with_consonant_any_letter_replace_that_with_w_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_333_if_the_word_ends_with_consonant_any_letter_replace_that_with_w_a ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _w _a) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_334_if_the_word_starts_with_consonant_vowel_replace_that_with_x_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_334_if_the_word_starts_with_consonant_vowel_replace_that_with_x_l ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _x _l) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_335_if_there_is_any_letter_o_replace_that_with_x_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_335_if_there_is_any_letter_o_replace_that_with_x_l ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _o) $0) (_rconcat _x _l) $0)) (_rsplit (_rconcat _rdot _o) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_336_if_there_is_any_letter_replace_that_with_p_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_336_if_there_is_any_letter_replace_that_with_p_f ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _p _f) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _f _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _f _p))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 (_rconcat _p _f) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _f _p) _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda _p) (#(lambda (_rsplit _rdot $0)) $0))) _f _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 31.806129455566406
        },
        "re2_test_337_if_there_is_any_letter_r_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_337_if_there_is_any_letter_r_remove_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _r) $0) _rempty $0)) (_rsplit (_rconcat _rdot _r) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_338_if_the_word_starts_with_any_letter_vowel_add_u_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_338_if_the_word_starts_with_any_letter_vowel_add_u_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)) _u) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_339_if_the_word_ends_with_consonant_consonant_replace_that_with_d_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_339_if_the_word_ends_with_consonant_consonant_replace_that_with_d_d ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _d _d) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _d _d) $0 _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _e (_rtail (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) $0 (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _d _d)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _e (_rtail (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _d _rempty)) _d $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _e (_rtail (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _d)) _d $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 151.74513030052185
        },
        "re2_test_340_if_the_word_ends_with_consonant_add_m_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_340_if_the_word_ends_with_consonant_add_m_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _m (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _m (_rtail (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rtail (#(lambda (_rsplit _rdot $0)) $0)) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _m)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _m)) (_rtail (#(lambda (_rsplit _rdot $0)) $0)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _m)) (_rtail (#(lambda (_rsplit _rdot $0)) $0)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _i (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _m)) (_rtail (#(lambda (_rsplit _rdot $0)) $0)) $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 107.49236154556274
        },
        "re2_test_341_if_the_word_ends_with_consonant_add_u_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_341_if_the_word_ends_with_consonant_add_u_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _u (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 (_rtail (#(lambda (_rsplit _rdot $0)) $0)) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _u)) (_rtail (#(lambda (_rsplit _rdot $0)) $0)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _u (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) (_rtail (#(lambda (_rsplit _rdot $0)) $0)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _u (_rrevcdr (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))) (_rtail (#(lambda (_rsplit _rdot $0)) $0)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _u (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _rempty))) (_rtail (#(lambda (_rsplit _rdot $0)) $0)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 76.2658576965332
        },
        "re2_test_342_if_the_word_starts_with_any_letter_replace_that_with_k_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_342_if_the_word_starts_with_any_letter_replace_that_with_k_t ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _k _t) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _t _k))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _t _k))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _t _k))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _t _k) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _t _k) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.310725927352905
        },
        "re2_test_343_if_there_is_vowel_add_d_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_343_if_there_is_vowel_add_d_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat $0 _d) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_344_if_there_is_vowel_any_letter_add_q_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_344_if_there_is_vowel_any_letter_add_q_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) (_rconcat $0 _q) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_345_if_the_word_starts_with_consonant_replace_that_with_w_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_345_if_the_word_starts_with_consonant_replace_that_with_w_h ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _w _h) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _h _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h _w) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h _w) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h _w) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.18483328819275
        },
        "re2_test_346_if_there_is_t_add_y_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_346_if_there_is_t_add_y_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _y $0) $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _y _t) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _y _t) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _y _t) _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 88.82209634780884
        },
        "re2_test_347_if_there_is_t_replace_that_with_j_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_347_if_there_is_t_replace_that_with_j_w ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _j _w) $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _j _w) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _j _w) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _j _w) _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _j _w) _t) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _j _w) _t) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 74.44596529006958
        },
        "re2_test_348_if_the_word_starts_with_consonant_vowel_replace_that_with_q_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_348_if_the_word_starts_with_consonant_vowel_replace_that_with_q_c ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _q _c) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _c _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _c _q))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _q (cons _c (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _c _q) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _c _q) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 75.9698691368103
        },
        "re2_test_349_if_there_is_u_add_k_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_349_if_there_is_u_add_k_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _u $0) (_rconcat _k $0) $0)) (_rsplit _u $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _u) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _k _u) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _u) _u))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k (_rconcat _u _rempty)) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _u) (_rconcat _u _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 84.7540671825409
        },
        "re2_test_350_if_there_is_vowel_replace_that_with_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_350_if_there_is_vowel_replace_that_with_d ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) _d $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_351_if_there_is_o_replace_that_with_w_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_351_if_there_is_o_replace_that_with_w_b ((lambda (_rflatten (map (lambda (if (_rmatch _o $0) (_rconcat _w _b) $0)) (_rsplit _o $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w _b) _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _w _b) _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w _b) _o))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)))) (_rconcat _w _b) _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w _b) _o) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 64.74157810211182
        },
        "re2_test_352_if_the_word_starts_with_vowel_replace_that_with_d_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_352_if_the_word_starts_with_vowel_replace_that_with_d_g ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _d _g) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_353_if_there_is_d_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_353_if_there_is_d_replace_that_with_j ((lambda (_rflatten (map (lambda (if (_rmatch _d $0) _j $0)) (_rsplit _d $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _j _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _j _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _j _d))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _j _rempty) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _j) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 39.540262937545776
        },
        "re2_test_354_if_the_word_ends_with_any_letter_consonant_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_354_if_the_word_ends_with_any_letter_consonant_replace_that_with_t ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _t (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _t _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _rempty) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _rempty _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.845374584197998
        },
        "re2_test_355_if_there_is_vowel_any_letter_replace_that_with_r_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_355_if_there_is_vowel_any_letter_replace_that_with_r_y ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) (_rconcat _r _y) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_356_if_there_is_any_letter_replace_that_with_g_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_356_if_there_is_any_letter_replace_that_with_g_k ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _g _k) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _k _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _k _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _k (_rconcat _g _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _v _i) _k _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 (_rtail (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _k _n))) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 16.01680827140808
        },
        "re2_test_357_if_there_is_consonant_add_h_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_357_if_there_is_consonant_add_h_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _h $0) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_358_if_there_is_r_add_w_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_358_if_there_is_r_add_w_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) (_rconcat _w $0) $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w _r) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _w _r) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w _r) _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _w _r)) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w (_rconcat _rempty _r)) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 64.91018986701965
        },
        "re2_test_359_if_there_is_l_any_letter_add_n_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_359_if_there_is_l_any_letter_add_n_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _l _rdot) $0) (_rconcat $0 _n) $0)) (_rsplit (_rconcat _l _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_360_if_the_word_ends_with_consonant_replace_that_with_u_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_360_if_the_word_ends_with_consonant_replace_that_with_u_e ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _u _e) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _e _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _e _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _e (_rconcat _rempty _u)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _u (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _e $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _e (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _u)) _e $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 39.58040761947632
        },
        "re2_test_361_if_the_word_ends_with_any_letter_replace_that_with_i_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_361_if_the_word_ends_with_any_letter_replace_that_with_i_x ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _i _x) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _i _x)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _i (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _e (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _i _x)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _e (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (_rsplit _e (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i))) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.96424126625061
        },
        "re2_test_362_if_there_is_g_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_362_if_there_is_g_replace_that_with_q ((lambda (_rflatten (map (lambda (if (_rmatch _g $0) _q $0)) (_rsplit _g $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _q _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _q _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _q _g))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _q _rempty) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _q) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.979958295822144
        },
        "re2_test_363_if_the_word_ends_with_consonant_any_letter_add_t_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_363_if_the_word_ends_with_consonant_any_letter_add_t_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _t (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_364_if_there_is_consonant_vowel_add_x_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_364_if_there_is_consonant_vowel_add_x_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat $0 _x) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_365_if_the_word_ends_with_any_letter_any_letter_add_h_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_365_if_the_word_ends_with_any_letter_any_letter_add_h_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _rdot) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat (_rtail (_rsplit (_rconcat _rdot _rdot) $0)) _h) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _h (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _h (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (_rappend _u (#(lambda (_rsplit _rdot $0)) $0))) _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _h (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _h)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _e $0) _h (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.490506172180176
        },
        "re2_test_366_if_the_word_ends_with_consonant_consonant_replace_that_with_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_366_if_the_word_ends_with_consonant_consonant_replace_that_with_p ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _p (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _p $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (_rflatten (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))) _p $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) (_rflatten (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))) _p $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _p (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _rempty))) _p $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.79448080062866
        },
        "re2_test_367_if_there_is_any_letter_c_replace_that_with_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_367_if_there_is_any_letter_c_replace_that_with_i ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _c) $0) _i $0)) (_rsplit (_rconcat _rdot _c) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_368_if_there_is_consonant_replace_that_with_q_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_368_if_there_is_consonant_replace_that_with_q_o ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _q _o) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_369_if_there_is_g_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_369_if_there_is_g_replace_that_with_w ((lambda (_rflatten (map (lambda (if (_rmatch _g $0) _w $0)) (_rsplit _g $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _w _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _w _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _w _g))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _w) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) $0 $0 _e) _w _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 48.29515743255615
        },
        "re2_test_370_if_the_word_ends_with_consonant_replace_that_with_t_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_370_if_the_word_ends_with_consonant_replace_that_with_t_d ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _t _d) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _t _d)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _d (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _t)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _t)) _d $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _i (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _t)) _d $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _t)) _d $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 48.24355673789978
        },
        "re2_test_371_if_the_word_ends_with_any_letter_replace_that_with_r_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_371_if_the_word_ends_with_any_letter_replace_that_with_r_i ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _r _i) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _i _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _r _i)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _i _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _i (_rconcat _rempty _r)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _i _r) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 24.148542165756226
        },
        "re2_test_372_if_there_is_consonant_e_replace_that_with_d_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_372_if_there_is_consonant_e_replace_that_with_d_l ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0) (_rconcat _d _l) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_373_if_there_is_vowel_replace_that_with_h_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_373_if_there_is_vowel_replace_that_with_h_j ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _h _j) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_374_if_there_is_r_any_letter_replace_that_with_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_374_if_there_is_r_any_letter_replace_that_with_s ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _r _rdot) $0) _s $0)) (_rsplit (_rconcat _r _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_375_if_there_is_r_add_p_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_375_if_there_is_r_add_p_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) (_rconcat $0 _p) $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _p) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _r _p) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _p) _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _p) _r) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _p) _r) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 65.49041819572449
        },
        "re2_test_376_if_there_is_consonant_vowel_add_b_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_376_if_there_is_consonant_vowel_add_b_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat $0 _b) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_377_if_there_is_vowel_replace_that_with_r_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_377_if_there_is_vowel_replace_that_with_r_e ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _r _e) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_378_if_there_is_r_replace_that_with_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_378_if_there_is_r_replace_that_with_n ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) _n $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _n _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _n _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _n _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _rempty) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _n _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 39.90604209899902
        },
        "re2_test_379_if_there_is_any_letter_r_add_c_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_379_if_there_is_any_letter_r_add_c_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _r) $0) (_rconcat $0 _c) $0)) (_rsplit (_rconcat _rdot _r) $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _c) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _r _c) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _c) _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (_rsplit _i $0)) (_rconcat _r _c) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _c) _r) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 65.8369951248169
        },
        "re2_test_380_if_the_word_starts_with_consonant_add_k_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_380_if_the_word_starts_with_consonant_add_k_after_that ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)) _k) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _k (car (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _k (car (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _k (car (#(lambda (_rsplit _rdot $0)) $0))) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _k (car (#(lambda (_rsplit _rdot $0)) $0))) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _k (car (#(lambda (_rsplit _rdot $0)) $0))) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 66.03482437133789
        },
        "re2_test_381_if_there_is_any_letter_replace_that_with_i_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_381_if_there_is_any_letter_replace_that_with_i_d ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _i _d) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _d _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _d _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _d _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _d _i) _q _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _q _s) _d _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 24.189162015914917
        },
        "re2_test_382_if_the_word_starts_with_consonant_replace_that_with_y_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_382_if_the_word_starts_with_consonant_replace_that_with_y_n ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _y _n) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _n _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _y) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _y) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _y) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 39.863932847976685
        },
        "re2_test_383_if_there_is_any_letter_g_add_q_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_383_if_there_is_any_letter_g_add_q_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _g) $0) (_rconcat _q $0) $0)) (_rsplit (_rconcat _rdot _g) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_384_if_the_word_starts_with_consonant_add_h_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_384_if_the_word_starts_with_consonant_add_h_after_that ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)) _h) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h (car (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h (car (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _h (car (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h (car (#(lambda (_rsplit _rdot $0)) $0))) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h (car (#(lambda (_rsplit _rdot $0)) $0))) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 65.9490373134613
        },
        "re2_test_385_if_the_word_ends_with_consonant_replace_that_with_a_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_385_if_the_word_ends_with_consonant_replace_that_with_a_m ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _a _m) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _m _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _a _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _m _a))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _a _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _a _m)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 24.26265001296997
        },
        "re2_test_386_if_there_is_d_replace_that_with_e_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_386_if_there_is_d_replace_that_with_e_p ((lambda (_rflatten (map (lambda (if (_rmatch _d $0) (_rconcat _e _p) $0)) (_rsplit _d $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _p) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _e _p) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _p) _d))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _p) _d) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _p) _d) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 75.76758098602295
        },
        "re2_test_387_if_there_is_consonant_any_letter_replace_that_with_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_387_if_there_is_consonant_any_letter_replace_that_with_b ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0) _b $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_388_if_there_is_consonant_i_replace_that_with_d_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_388_if_there_is_consonant_i_replace_that_with_d_f ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _i) $0) (_rconcat _d _f) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _i) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_389_if_the_word_ends_with_any_letter_replace_that_with_d_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_389_if_the_word_ends_with_any_letter_replace_that_with_d_m ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _d _m) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _d _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _d _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _d _m)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r) (_rconcat _d _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _m) (_rconcat _d _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 32.08821511268616
        },
        "re2_test_390_if_there_is_i_replace_that_with_j_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_390_if_there_is_i_replace_that_with_j_j ((lambda (_rflatten (map (lambda (if (_rmatch _i $0) (_rconcat _j _j) $0)) (_rsplit _i $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _j _j) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _j _j) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _j _j) _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _j) _j) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _j _j)) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 39.979604721069336
        },
        "re2_test_391_if_the_word_ends_with_consonant_any_letter_add_u_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_391_if_the_word_ends_with_consonant_any_letter_add_u_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _u (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_392_if_the_word_starts_with_any_letter_replace_that_with_h_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_392_if_the_word_starts_with_any_letter_replace_that_with_h_y ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _h _y) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _y _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _h) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _h) $0 _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _h) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 39.99127817153931
        },
        "re2_test_393_if_there_is_p_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_393_if_there_is_p_replace_that_with_j ((lambda (_rflatten (map (lambda (if (_rmatch _p $0) _j $0)) (_rsplit _p $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _j _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _j _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _j _p))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _j _p) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _j _p) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 39.889528036117554
        },
        "re2_test_394_if_the_word_starts_with_consonant_replace_that_with_v_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_394_if_the_word_starts_with_consonant_replace_that_with_v_o ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _v _o) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _v) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _v) $0 _a) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _v) $0 _e) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _v) $0 _e) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _v) $0 _e) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.913726568222046
        },
        "re2_test_395_if_there_is_any_letter_any_letter_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_395_if_there_is_any_letter_any_letter_replace_that_with_q ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _rdot) $0) _q $0)) (_rsplit (_rconcat _rdot _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_396_if_there_is_vowel_vowel_add_v_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_396_if_there_is_vowel_vowel_add_v_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _v $0) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_397_if_the_word_starts_with_any_letter_replace_that_with_c_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_397_if_the_word_starts_with_any_letter_replace_that_with_c_j ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _c _j) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _j _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j _c))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j _c) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j _c) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.83429288864136
        },
        "re2_test_398_if_there_is_consonant_e_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_398_if_there_is_consonant_e_replace_that_with_x ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0) _x $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_399_if_there_is_any_letter_l_add_r_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_399_if_there_is_any_letter_l_add_r_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _l) $0) (_rconcat $0 _r) $0)) (_rsplit (_rconcat _rdot _l) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_400_if_there_is_vowel_vowel_replace_that_with_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_400_if_there_is_vowel_vowel_replace_that_with_c ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _c $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_401_if_there_is_consonant_replace_that_with_d_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_401_if_there_is_consonant_replace_that_with_d_c ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _d _c) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_402_if_there_is_vowel_replace_that_with_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_402_if_there_is_vowel_replace_that_with_k ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) _k $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_403_if_there_is_consonant_replace_that_with_d_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_403_if_there_is_consonant_replace_that_with_d_y ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _d _y) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_404_if_there_is_any_letter_t_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_404_if_there_is_any_letter_t_replace_that_with_x ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _t) $0) _x $0)) (_rsplit (_rconcat _rdot _t) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_405_if_there_is_u_any_letter_replace_that_with_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_405_if_there_is_u_any_letter_replace_that_with_m ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _u _rdot) $0) _m $0)) (_rsplit (_rconcat _u _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_406_if_there_is_any_letter_c_replace_that_with_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_406_if_there_is_any_letter_c_replace_that_with_o ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _c) $0) _o $0)) (_rsplit (_rconcat _rdot _c) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_407_if_the_word_ends_with_any_letter_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_407_if_the_word_ends_with_any_letter_replace_that_with_w ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) _w (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _w))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _w (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _w (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _rempty)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 24.014111518859863
        },
        "re2_test_408_if_there_is_a_replace_that_with_i_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_408_if_there_is_a_replace_that_with_i_e ((lambda (_rflatten (map (lambda (if (_rmatch _a $0) (_rconcat _i _e) $0)) (_rsplit _a $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _e) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _i _e) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _e) _a))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i (_rconcat _rempty _e)) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _i _e)) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.681889295578
        },
        "re2_test_409_if_there_is_consonant_add_o_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_409_if_there_is_consonant_add_o_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat $0 _o) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_410_if_the_word_ends_with_consonant_add_v_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_410_if_the_word_ends_with_consonant_add_v_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _v (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 (_rtail (#(lambda (_rsplit _rdot $0)) $0)) _v))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _v (_rtail (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _v)) (_rtail (#(lambda (_rsplit _rdot $0)) $0)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _v (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) (_rtail (#(lambda (_rsplit _rdot $0)) $0)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _v))) (_rtail (#(lambda (_rsplit _rdot $0)) $0)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 78.11383938789368
        },
        "re2_test_411_if_the_word_starts_with_consonant_replace_that_with_p_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_411_if_the_word_starts_with_consonant_replace_that_with_p_u ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _p _u) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _u _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _u _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _u _p))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _p _u) (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _u _p) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.69474768638611
        },
        "re2_test_412_if_there_is_vowel_add_b_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_412_if_there_is_vowel_add_b_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _b $0) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_413_if_the_word_starts_with_consonant_replace_that_with_v_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_413_if_the_word_starts_with_consonant_replace_that_with_v_n ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _v _n) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_414_if_there_is_consonant_replace_that_with_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_414_if_there_is_consonant_replace_that_with_e ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) _e $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_415_if_there_is_consonant_replace_that_with_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_415_if_there_is_consonant_replace_that_with_r ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) _r $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_416_if_there_is_vowel_t_replace_that_with_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_416_if_there_is_vowel_t_replace_that_with_g ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _t) $0) _g $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _t) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_417_if_there_is_g_add_r_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_417_if_there_is_g_add_r_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _g $0) (_rconcat $0 _r) $0)) (_rsplit _g $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _g _r) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _g _r) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _g _r) _g))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _g) _r) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _g _r) (_rconcat _rempty _g)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.21021246910095
        },
        "re2_test_418_if_the_word_ends_with_consonant_consonant_add_k_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_418_if_the_word_ends_with_consonant_consonant_add_k_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _k) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _n (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (_rflatten (_rappend _k (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _n (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _k $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _o (_rtail (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) $0 (_rflatten (_rappend _k (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _o (_rtail (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _k $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _n (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) (_rtail (_rappend _k (#(lambda (_rsplit _rdot $0)) $0))) $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 66.14644026756287
        },
        "re2_test_419_if_the_word_starts_with_any_letter_replace_that_with_i_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_419_if_the_word_starts_with_any_letter_replace_that_with_i_t ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _i _t) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _t _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _t _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _t _i) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _t _i) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _t _i) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 31.811518669128418
        },
        "re2_test_420_if_the_word_starts_with_any_letter_any_letter_replace_that_with_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_420_if_the_word_starts_with_any_letter_any_letter_replace_that_with_p ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) _p (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _p (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _p (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _p (cdr (#(lambda (_rsplit _rdot $0)) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _p (cdr (cdr (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (cons _p (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.16823387145996
        },
        "re2_test_421_if_there_is_any_letter_t_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_421_if_there_is_any_letter_t_replace_that_with_w ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _t) $0) _w $0)) (_rsplit (_rconcat _rdot _t) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_422_if_the_word_starts_with_vowel_consonant_add_b_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_422_if_the_word_starts_with_vowel_consonant_add_b_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _b (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _rempty (_rflatten (cons _b (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _rempty (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _b)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _rempty (_rflatten (cons _b (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) (_rtail (#(lambda (_rsplit _rdot $0)) $0)) (_rflatten (cons _b (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 192.9992823600769
        },
        "re2_test_423_if_there_is_r_replace_that_with_a_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_423_if_there_is_r_replace_that_with_a_s ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) (_rconcat _a _s) $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _a _s) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _a _s) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _a _s) _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _a (_rconcat _rempty _s)) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _a _s)) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 48.3056378364563
        },
        "re2_test_424_if_the_word_starts_with_consonant_add_s_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_424_if_the_word_starts_with_consonant_add_s_after_that ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)) _s) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s (car (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _s (car (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s (car (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s (car (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s (car (#(lambda (_rsplit _rdot $0)) $0))) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.47230839729309
        },
        "re2_test_425_if_the_word_starts_with_consonant_replace_that_with_l_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_425_if_the_word_starts_with_consonant_replace_that_with_l_n ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _l _n) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _l) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _l) $0 _a))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _l) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _l) $0 _a) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _l) $0 _u) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 76.84028315544128
        },
        "re2_test_426_if_the_word_ends_with_consonant_replace_that_with_g_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_426_if_the_word_ends_with_consonant_replace_that_with_g_e ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _g _e) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _e _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _g _e)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _e _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 (_rconcat _rempty _e) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 (_rconcat _g _e) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 39.74505305290222
        },
        "re2_test_427_if_there_is_s_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_427_if_there_is_s_replace_that_with_t ((lambda (_rflatten (map (lambda (if (_rmatch _s $0) _t $0)) (_rsplit _s $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _t _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _t _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _t _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _t) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t _rempty) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 48.38874793052673
        },
        "re2_test_428_if_the_word_starts_with_consonant_replace_that_with_u_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_428_if_the_word_starts_with_consonant_replace_that_with_u_x ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _u _x) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _u) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 299.7110300064087
        },
        "re2_test_429_if_there_is_any_letter_g_add_w_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_429_if_there_is_any_letter_g_add_w_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _g) $0) (_rconcat $0 _w) $0)) (_rsplit (_rconcat _rdot _g) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_430_if_the_word_ends_with_consonant_any_letter_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_430_if_the_word_ends_with_consonant_any_letter_replace_that_with_w ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) _w (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _w _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _rempty _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _rempty) _rempty _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 39.756983280181885
        },
        "re2_test_431_if_the_word_starts_with_any_letter_consonant_replace_that_with_x_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_431_if_the_word_starts_with_any_letter_consonant_replace_that_with_x_u ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _x _u) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_432_if_the_word_starts_with_consonant_consonant_replace_that_with_i_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_432_if_the_word_starts_with_consonant_consonant_replace_that_with_i_i ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _i _i) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_433_if_there_is_vowel_replace_that_with_l_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_433_if_there_is_vowel_replace_that_with_l_s ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _l _s) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_434_if_the_word_starts_with_any_letter_replace_that_with_j_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_434_if_the_word_starts_with_any_letter_replace_that_with_j_s ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _j _s) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _s _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _j) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _j) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _j) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 39.693965911865234
        },
        "re2_test_435_if_there_is_y_replace_that_with_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_435_if_there_is_y_replace_that_with_c ((lambda (_rflatten (map (lambda (if (_rmatch _y $0) _c $0)) (_rsplit _y $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _c _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _c _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _c _y))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _rempty) _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _c) _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 48.20624399185181
        },
        "re2_test_436_if_there_is_consonant_replace_that_with_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_436_if_there_is_consonant_replace_that_with_k ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) _k $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_437_if_there_is_u_replace_that_with_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_437_if_there_is_u_replace_that_with_s ((lambda (_rflatten (map (lambda (if (_rmatch _u $0) _s $0)) (_rsplit _u $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _s _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _s _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _s _u))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _s) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _s _u) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.530219078063965
        },
        "re2_test_438_if_there_is_any_letter_any_letter_replace_that_with_o_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_438_if_there_is_any_letter_any_letter_replace_that_with_o_b ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _rdot) $0) (_rconcat _o _b) $0)) (_rsplit (_rconcat _rdot _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_439_if_there_is_s_vowel_add_p_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_439_if_there_is_s_vowel_add_p_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _s (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat $0 _p) $0)) (_rsplit (_rconcat _s (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_440_if_there_is_t_any_letter_double_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_440_if_there_is_t_any_letter_double_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _t _rdot) $0) (_rconcat $0 $0) $0)) (_rsplit (_rconcat _t _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_441_if_there_is_any_letter_consonant_add_w_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_441_if_there_is_any_letter_consonant_add_w_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _w $0) $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_442_if_the_word_starts_with_any_letter_vowel_replace_that_with_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_442_if_the_word_starts_with_any_letter_vowel_replace_that_with_m ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _m (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _m _rempty) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _rempty _m) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _m _rempty) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _rempty _m) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _rempty _m) $0 _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 101.93876814842224
        },
        "re2_test_443_if_the_word_ends_with_vowel_any_letter_add_p_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_443_if_the_word_ends_with_vowel_any_letter_add_p_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat _p (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_444_if_there_is_consonant_replace_that_with_y_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_444_if_there_is_consonant_replace_that_with_y_f ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _y _f) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_445_if_the_word_starts_with_any_letter_vowel_replace_that_with_b_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_445_if_the_word_starts_with_any_letter_vowel_replace_that_with_b_u ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _b _u) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_446_if_the_word_starts_with_consonant_consonant_replace_that_with_o_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_446_if_the_word_starts_with_consonant_consonant_replace_that_with_o_x ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _o _x) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_447_if_there_is_vowel_replace_that_with_r_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_447_if_there_is_vowel_replace_that_with_r_d ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _r _d) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_448_if_there_is_vowel_replace_that_with_b_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_448_if_there_is_vowel_replace_that_with_b_x ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _b _x) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_449_if_the_word_ends_with_any_letter_replace_that_with_n_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_449_if_the_word_ends_with_any_letter_replace_that_with_n_l ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _n _l) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _l _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _a _n) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _i _n) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _w _n) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _c _n) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.548309326171875
        },
        "re2_test_450_if_there_is_vowel_add_o_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_450_if_there_is_vowel_add_o_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat $0 _o) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_451_if_the_word_starts_with_any_letter_consonant_replace_that_with_k_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_451_if_the_word_starts_with_any_letter_consonant_replace_that_with_k_r ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _k _r) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_452_if_the_word_ends_with_consonant_any_letter_add_d_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_452_if_the_word_ends_with_consonant_any_letter_add_d_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _d (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_453_if_the_word_starts_with_any_letter_consonant_add_v_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_453_if_the_word_starts_with_any_letter_consonant_add_v_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _v (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_454_if_there_is_vowel_add_a_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_454_if_there_is_vowel_add_a_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat $0 _a) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_455_if_there_is_s_replace_that_with_i_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_455_if_there_is_s_replace_that_with_i_y ((lambda (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat _i _y) $0)) (_rsplit _s $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _y) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _i _y) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _y) _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _y) _s) _y _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (_rtail (#(lambda (_rsplit _rdot $0)) $2))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $2 $1) $2)))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _y) _s) _y (_ror _e _i)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 40.02820301055908
        },
        "re2_test_456_if_there_is_a_any_letter_replace_that_with_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_456_if_there_is_a_any_letter_replace_that_with_c ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _a _rdot) $0) _c $0)) (_rsplit (_rconcat _a _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_457_if_the_word_starts_with_consonant_any_letter_replace_that_with_b_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_457_if_the_word_starts_with_consonant_any_letter_replace_that_with_b_e ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _b _e) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _e _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))))) _e _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))) _e _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cons _e (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _e _b) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 66.11837267875671
        },
        "re2_test_458_if_there_is_c_any_letter_replace_that_with_g_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_458_if_there_is_c_any_letter_replace_that_with_g_w ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _c _rdot) $0) (_rconcat _g _w) $0)) (_rsplit (_rconcat _c _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_459_if_the_word_ends_with_any_letter_replace_that_with_o_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_459_if_the_word_ends_with_any_letter_replace_that_with_o_o ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _o _o) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _o _o)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _o _o)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _o (_rconcat _o _rempty))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _o) _o _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _o _o)) _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 31.951685905456543
        },
        "re2_test_460_if_the_word_starts_with_any_letter_any_letter_replace_that_with_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_460_if_the_word_starts_with_any_letter_any_letter_replace_that_with_g ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) _g (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _g (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _g _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _rempty _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _g (#(lambda (_rsplit _rdot $0)) (_rflatten (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _g (cdr (#(lambda (_rsplit _rdot $0)) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 66.11329674720764
        },
        "re2_test_461_if_the_word_ends_with_any_letter_s_replace_that_with_p_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_461_if_the_word_ends_with_any_letter_s_replace_that_with_p_u ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _s) (_rtail (_rsplit (_rconcat _rdot _s) $0))) (_rconcat _p _u) (_rtail (_rsplit (_rconcat _rdot _s) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _s) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _p _u) $0 _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _p _u) $0 _p))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 257.1993336677551
        },
        "re2_test_462_if_there_is_vowel_replace_that_with_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_462_if_there_is_vowel_replace_that_with_i ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) _i $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _i _a) _i _e) _i _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _i _a) _i _o) _i _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _i _e) _i _a) _i _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _i _e) _i _o) _i _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _i _o) _i _a) _i _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 550.6155500411987
        },
        "re2_test_463_if_the_word_starts_with_consonant_replace_that_with_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_463_if_the_word_starts_with_consonant_replace_that_with_m ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) _m (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _m _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _m (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _m _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _rempty _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 39.63850784301758
        },
        "re2_test_464_if_the_word_starts_with_vowel_replace_that_with_u_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_464_if_the_word_starts_with_vowel_replace_that_with_u_l ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _u _l) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _l _u) $0 _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 654.1851189136505
        },
        "re2_test_465_if_there_is_t_any_letter_replace_that_with_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_465_if_there_is_t_any_letter_replace_that_with_f ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _t _rdot) $0) _f $0)) (_rsplit (_rconcat _t _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_466_if_there_is_consonant_any_letter_replace_that_with_n_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_466_if_there_is_consonant_any_letter_replace_that_with_n_u ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0) (_rconcat _n _u) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_467_if_the_word_starts_with_consonant_replace_that_with_s_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_467_if_the_word_starts_with_consonant_replace_that_with_s_a ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _s _a) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _s) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _s) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _a _s) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _s) $0 _e) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _s) $0 _u) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 65.82002687454224
        },
        "re2_test_468_if_the_word_starts_with_consonant_any_letter_replace_that_with_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_468_if_the_word_starts_with_consonant_any_letter_replace_that_with_o ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) _o (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _o (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _o _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _rempty _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _o _rempty) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _o _rempty) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 65.58608174324036
        },
        "re2_test_469_if_the_word_starts_with_any_letter_consonant_add_f_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_469_if_the_word_starts_with_any_letter_consonant_add_f_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _f (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_470_if_the_word_ends_with_vowel_consonant_add_s_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_470_if_the_word_ends_with_vowel_consonant_add_s_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _s (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_471_if_the_word_starts_with_consonant_replace_that_with_s_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_471_if_the_word_starts_with_consonant_replace_that_with_s_s ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _s _s) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _s) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _s) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _s) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _s) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 39.615296840667725
        },
        "re2_test_472_if_the_word_starts_with_vowel_replace_that_with_y_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_472_if_the_word_starts_with_vowel_replace_that_with_y_k ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _y _k) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_473_if_the_word_starts_with_any_letter_replace_that_with_n_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_473_if_the_word_starts_with_any_letter_replace_that_with_n_i ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _n _i) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _i _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _n))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _n) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _n) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 31.75804615020752
        },
        "re2_test_474_if_the_word_ends_with_any_letter_replace_that_with_y_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_474_if_the_word_ends_with_any_letter_replace_that_with_y_r ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _y _r) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _r _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _y _r)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _y _r)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _rempty (_rconcat _y _r)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _y _y) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 39.72315263748169
        },
        "re2_test_475_if_there_is_n_any_letter_replace_that_with_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_475_if_there_is_n_any_letter_replace_that_with_s ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _n _rdot) $0) _s $0)) (_rsplit (_rconcat _n _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_476_if_there_is_p_vowel_replace_that_with_m_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_476_if_there_is_p_vowel_replace_that_with_m_e ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _p (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _m _e) $0)) (_rsplit (_rconcat _p (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_477_if_there_is_vowel_replace_that_with_v_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_477_if_there_is_vowel_replace_that_with_v_r ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _v _r) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_478_if_there_is_t_replace_that_with_g_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_478_if_there_is_t_replace_that_with_g_j ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _g _j) $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _g _j) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _g _j) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _g _j) _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _g) _j) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _g _j)) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 47.89308023452759
        },
        "re2_test_479_if_the_word_starts_with_consonant_any_letter_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_479_if_the_word_starts_with_consonant_any_letter_replace_that_with_x ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) _x (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _x (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _rempty _x))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _x _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _rempty) _rempty _x))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _x (cdr (#(lambda (_rsplit _rdot $0)) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 75.3178493976593
        },
        "re2_test_480_if_there_is_consonant_any_letter_replace_that_with_w_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_480_if_there_is_consonant_any_letter_replace_that_with_w_q ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0) (_rconcat _w _q) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_481_if_there_is_vowel_add_j_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_481_if_there_is_vowel_add_j_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat $0 _j) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_482_if_the_word_starts_with_consonant_vowel_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_482_if_the_word_starts_with_consonant_vowel_replace_that_with_w ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _w (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_483_if_the_word_ends_with_vowel_any_letter_replace_that_with_i_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_483_if_the_word_ends_with_vowel_any_letter_replace_that_with_i_s ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat _i _s) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_484_if_the_word_starts_with_c_replace_that_with_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_484_if_the_word_starts_with_c_replace_that_with_b ((lambda (_rflatten (cons (if (_rmatch _c (car (_rsplit _c $0))) _b (car (_rsplit _c $0))) (cdr (_rsplit _c $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_485_if_there_is_s_replace_that_with_v_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_485_if_there_is_s_replace_that_with_v_p ((lambda (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat _v _p) $0)) (_rsplit _s $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _v _p) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _v _p) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _v _p) _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _v) _p) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _v _p) (_rconcat _s _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 66.05535125732422
        },
        "re2_test_486_if_there_is_vowel_consonant_replace_that_with_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_486_if_there_is_vowel_consonant_replace_that_with_y ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _y $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_487_if_there_is_t_consonant_replace_that_with_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_487_if_there_is_t_consonant_replace_that_with_h ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _t (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _h $0)) (_rsplit (_rconcat _t (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_488_if_the_word_ends_with_consonant_replace_that_with_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_488_if_the_word_ends_with_consonant_replace_that_with_l ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) _l (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _l _rempty) $0 _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _rempty _l) $0 _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _l $0) $0 _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _l $0) $0 _p))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _l $0) $0 _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 128.1100468635559
        },
        "re2_test_489_if_there_is_consonant_any_letter_add_l_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_489_if_there_is_consonant_any_letter_add_l_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0) (_rconcat $0 _l) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_490_if_the_word_starts_with_consonant_e_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_490_if_the_word_starts_with_consonant_e_replace_that_with_j ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0))) _j (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_491_if_the_word_starts_with_any_letter_vowel_replace_that_with_c_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_491_if_the_word_starts_with_any_letter_vowel_replace_that_with_c_m ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _c _m) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_492_if_there_is_consonant_replace_that_with_r_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_492_if_there_is_consonant_replace_that_with_r_o ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _r _o) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_493_if_the_word_ends_with_any_letter_add_n_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_493_if_the_word_ends_with_any_letter_add_n_before_that ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _n (_rtail (_rsplit _rdot $0))) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _n (_rtail (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rtail (#(lambda (_rsplit _rdot $0)) $0)) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _n)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _n _b)) (_rtail (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 290.74285364151
        },
        "re2_test_494_if_the_word_starts_with_vowel_replace_that_with_c_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_494_if_the_word_starts_with_vowel_replace_that_with_c_u ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _c _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_495_if_there_is_vowel_n_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_495_if_there_is_vowel_n_replace_that_with_q ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _n) $0) _q $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _n) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_496_if_the_word_ends_with_any_letter_consonant_add_h_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_496_if_the_word_ends_with_any_letter_consonant_add_h_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _h) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _h $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _h (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))) _h $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _e $0) _h $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (#(lambda (_rsplit _rdot $0)) $0)) _h $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 31.65963053703308
        },
        "re2_test_497_if_the_word_starts_with_any_letter_replace_that_with_l_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_497_if_the_word_starts_with_any_letter_replace_that_with_l_g ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _l _g) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _g _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _g _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _g _l))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _l (cons _g (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch $0 (car (_rsplit _rdot $1))) $1 $2)))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _g _l) $0 _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.086517333984375
        },
        "re2_test_498_if_there_is_vowel_r_add_u_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_498_if_there_is_vowel_r_add_u_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _r) $0) (_rconcat _u $0) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _r) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_499_if_there_is_consonant_replace_that_with_q_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_499_if_there_is_consonant_replace_that_with_q_f ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _q _f) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        }
    }
}