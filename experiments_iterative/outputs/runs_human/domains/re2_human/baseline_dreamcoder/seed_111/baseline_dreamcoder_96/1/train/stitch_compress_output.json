{
    "cmd": "python run_iterative_experiment.py --experiment_name runs_human --experiment_type baseline_dreamcoder --domain re2_human --encoder re2 --iterations 16 --global_batch_sizes 96 --enumeration_timeout 1000 --stitch_params {\"iterations\": 10, \"max_arity\": 3} --random_seeds 111 222 333",
    "args": {
        "iterations": 10,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 3,
            "threads": 1,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": true,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": true,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": true,
            "rewrite_check": false,
            "utility_by_rewrite": true,
            "dreamcoder_comparison": false,
            "quiet": true
        }
    },
    "original_cost": 27881,
    "final_cost": 13638,
    "compression_ratio": 2.04436134330547,
    "num_abstractions": 10,
    "original": [
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _n (cdr (_rsplit _rdot (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (map (lam _o) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (map (lam _k) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (_rsplit _e $0))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _o (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _u (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (_rappend _d (_rsplit _k $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rtail (map (lam (_rconcat $1 _v)) (_rsplit _rdot $1)))) (_rsplit _rdot $0))))",
        "(lam (car (map (lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $1)))) (_rsplit _rdot $0))))",
        "(lam (car (cdr (map (lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $1)))) (_rsplit _rdot $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _k $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _rdot $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _o $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _f $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _s $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit (_rnot _r) $0)))))",
        "(lam (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _q (cdr (_rsplit _rdot (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _b _r) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _b (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _v (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _q (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (_rappend (_rconcat _d _t) (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _t (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _w _w) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _i _w) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _f (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (map (lam (_rconcat _w _t)) (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _x (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _b _e) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _x (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _w _e) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _j (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _b _o) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _j (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _u _o) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _m (_rsplit _k (_rflatten (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _m (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _a (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _i _rempty) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rdot (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rsplit _v (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (map (lam $0) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _e (cons _a (cons _rempty (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _k $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _k (_rflatten (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _k (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _k (_rflatten (_rsplit _a $0))))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rdot (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rappend _b (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rappend _j (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _k (_rsplit _k $0))))",
        "(lam (_rflatten (_rappend _k (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _d (_rsplit _k $0))))))))",
        "(lam (_rflatten (_rappend _k (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _q (_rsplit _k $0))))))))",
        "(lam (_rflatten (_rappend _k (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _c (_rsplit _k $0))))))))",
        "(lam (_rflatten (_rappend _k (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _l (_rsplit _k $0))))))))",
        "(lam (_rflatten (_rappend _a (_rsplit _k $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _a (_rsplit _k $0))))))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _r (_rsplit _k $0))))))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _h (_rsplit _k $0))))))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _v (_rsplit _b $0))))",
        "(lam (_rflatten (cons _v (_rsplit _e $0))))",
        "(lam (_rflatten (cons _v (_rsplit _a $0))))",
        "(lam (_rflatten (cons _v (_rsplit _f $0))))",
        "(lam (_rflatten (cons _v (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _o $0) _l $0)) (_rsplit _rdot $0))))"
    ],
    "rewritten": [
        "(lam (fn_0 $0 _a _n))",
        "(lam (fn_6 (_rsplit _rdot $0) _n))",
        "(lam (fn_6 (_rsplit _rempty $0) _n))",
        "(lam (fn_5 $0 (_rconcat _n _a)))",
        "(lam (fn_5 (fn_6 (_rsplit _rdot $0) _a) _n))",
        "(lam (fn_3 $0 (lam _k)))",
        "(lam (fn_3 (_rflatten (_rsplit _rdot $0)) (lam _k)))",
        "(lam (fn_3 (fn_3 $0 (lam _o)) (lam _k)))",
        "(lam (fn_3 (fn_3 $0 (lam _k)) (lam _k)))",
        "(lam (fn_3 (_rflatten (_rsplit _e $0)) (lam _k)))",
        "(lam (fn_1 $0 _r))",
        "(lam (fn_1 (_rflatten (_rsplit _rdot $0)) _r))",
        "(lam (fn_1 (fn_1 $0 _o) _r))",
        "(lam (fn_1 (fn_1 $0 _f) _r))",
        "(lam (fn_1 (fn_1 $0 _r) _r))",
        "(lam (fn_2 $0 _o _u))",
        "(lam (fn_9 (fn_1 $0 _rempty) _o _u))",
        "(lam (fn_2 (fn_1 $0 _i) _o _u))",
        "(lam (fn_2 (fn_1 $0 _f) _o _u))",
        "(lam (fn_2 (fn_1 $0 _u) _o _u))",
        "(lam (fn_4 $0 _d))",
        "(lam (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lam (fn_3 $0 (lam (_rconcat $0 _v))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lam (fn_3 $0 (lam (_rtail (map (lam (_rconcat $1 _v)) (_rsplit _rdot $1))))))",
        "(lam (car (map (lam (fn_3 $1 (lam (_rconcat $0 _v)))) (_rsplit _rdot $0))))",
        "(lam (car (cdr (map (lam (fn_3 $1 (lam (_rconcat $0 _v)))) (_rsplit _rdot $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (fn_4 $0 _o)))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _rdot $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _o $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _f $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _s $0)))))",
        "(lam (fn_1 $0 _f))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (fn_0 $0 _i _w))",
        "(lam (fn_5 $0 (_rconcat _w _i)))",
        "(lam (_rflatten (cons _w (cons _i (fn_8 $0)))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit (_rnot _r) $0)))))",
        "(lam (fn_0 $0 _a _q))",
        "(lam (fn_6 (_rsplit _rdot $0) _q))",
        "(lam (fn_6 (_rsplit _rempty $0) _q))",
        "(lam (fn_5 $0 (_rconcat _q _a)))",
        "(lam (fn_5 (fn_6 (_rsplit _rdot $0) _a) _q))",
        "(lam (fn_0 $0 _r _i))",
        "(lam (fn_5 $0 (_rconcat _i _r)))",
        "(lam (fn_0 (_rflatten (_rsplit _rdot $0)) _r _i))",
        "(lam (_rflatten (_rsplit _rdot (fn_0 $0 _r _i))))",
        "(lam (fn_5 (fn_0 $0 _r _b) _i))",
        "(lam (fn_7 $0 _v _r))",
        "(lam (fn_3 $0 (lam (_rconcat _r _v))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _b (fn_8 $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _v (fn_8 $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _q (fn_8 $0)))))",
        "(lam (fn_2 $0 _d _t))",
        "(lam (fn_9 (_rflatten (_rrevcdr (_rsplit _rdot $0))) _d _t))",
        "(lam (fn_9 (fn_1 $0 _rempty) _d _t))",
        "(lam (fn_1 (_rflatten (_rrevcdr (_rsplit _rdot $0))) (_rconcat _d _t)))",
        "(lam (fn_2 (fn_1 $0 _t) _d _t))",
        "(lam (fn_5 $0 _b))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (fn_0 $0 _w _b))",
        "(lam (fn_5 (fn_0 $0 _w _b) _b))",
        "(lam (fn_0 (fn_5 $0 _b) _w _b))",
        "(lam (fn_5 (fn_0 $0 _w _w) _b))",
        "(lam (fn_5 (fn_0 $0 _w _i) _b))",
        "(lam (fn_9 $0 _a _o))",
        "(lam (fn_1 $0 (_rconcat _a _o)))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (fn_9 (fn_1 $0 _o) _a _o))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (fn_7 $0 _t _w))",
        "(lam (fn_3 $0 (lam (_rconcat _w _t))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _f (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (map (lam (_rconcat _w _t)) (_rsplit _rdot $0)))))",
        "(lam (fn_0 $0 _e _x))",
        "(lam (fn_5 $0 (_rconcat _x _e)))",
        "(lam (fn_0 (_rflatten (_rsplit _rdot $0)) _e _x))",
        "(lam (fn_5 (fn_0 $0 _e _b) _x))",
        "(lam (fn_5 (fn_0 $0 _e _w) _x))",
        "(lam (fn_0 $0 _o _j))",
        "(lam (fn_5 $0 (_rconcat _j _o)))",
        "(lam (fn_0 (_rflatten (_rsplit _rdot $0)) _o _j))",
        "(lam (fn_5 (fn_0 $0 _o _b) _j))",
        "(lam (fn_5 (fn_0 $0 _o _u) _j))",
        "(lam (fn_9 $0 _o _m))",
        "(lam (fn_4 (fn_1 $0 _o) _m))",
        "(lam (fn_1 $0 (_rconcat _o _m)))",
        "(lam (fn_1 (fn_9 $0 _o _a) _m))",
        "(lam (fn_9 (fn_1 $0 _i) _o _m))",
        "(lam (fn_5 $0 _i))",
        "(lam (fn_0 $0 _i _rempty))",
        "(lam (fn_0 $0 _rempty _i))",
        "(lam (fn_5 (_rflatten (_rsplit _rdot $0)) _i))",
        "(lam (_rflatten (_rsplit _v (fn_5 $0 _i))))",
        "(lam (fn_6 (fn_8 $0) _e))",
        "(lam (fn_6 (cdr (_rsplit _rempty $0)) _e))",
        "(lam (fn_6 (cdr (map (lam $0) (_rsplit _rdot $0))) _e))",
        "(lam (_rflatten (cons _e (cons _a (cons _rempty (cdr (fn_8 $0)))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cons _a (cdr (fn_8 $0)))))))",
        "(lam (fn_4 $0 _q))",
        "(lam (_rflatten (_rappend _q (_rsplit _rdot $0))))",
        "(lam (fn_4 (_rflatten (_rsplit _rdot $0)) _q))",
        "(lam (fn_4 (fn_3 $0 (lam $0)) _q))",
        "(lam (fn_4 (_rflatten (_rsplit _a $0)) _q))",
        "(lam (fn_0 $0 _w _a))",
        "(lam (fn_5 $0 (_rconcat _a _w)))",
        "(lam (fn_0 (_rflatten (_rsplit _rdot $0)) _w _a))",
        "(lam (fn_0 (fn_0 $0 _w _a) _a _rempty))",
        "(lam (fn_0 (fn_0 $0 _w _y) _a _rempty))",
        "(lam (fn_1 (_rflatten (_rrevcdr (_rsplit _rdot $0))) _j))",
        "(lam (fn_2 $0 _j _rempty))",
        "(lam (fn_2 $0 _rempty _j))",
        "(lam (fn_2 (fn_1 $0 _j) _rempty _j))",
        "(lam (fn_2 (fn_2 $0 _b _j) _rempty _j))",
        "(lam (fn_1 $0 _i))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (fn_0 $0 _s _e))",
        "(lam (fn_5 $0 (_rconcat _e _s)))",
        "(lam (_rflatten (cons _e (cons _s (fn_8 $0)))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_5 (_rflatten (cons _e (cons _s (fn_8 $0)))) _e))",
        "(lam (fn_2 $0 _b _j))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rappend _b (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rappend _j (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (fn_4 $0 _k))",
        "(lam (fn_1 (fn_4 $0 _d) _k))",
        "(lam (fn_1 (fn_4 $0 _q) _k))",
        "(lam (fn_1 (fn_4 $0 _c) _k))",
        "(lam (fn_1 (fn_4 $0 _l) _k))",
        "(lam (fn_4 $0 _a))",
        "(lam (_rflatten (_rappend _a (_rsplit _rdot $0))))",
        "(lam (fn_1 (fn_4 $0 _a) _a))",
        "(lam (fn_1 (fn_4 $0 _r) _a))",
        "(lam (fn_1 (fn_4 $0 _h) _a))",
        "(lam (fn_5 $0 _a))",
        "(lam (fn_0 $0 _a _rempty))",
        "(lam (fn_6 (_rsplit _rdot $0) _rempty))",
        "(lam (fn_5 (_rflatten (_rsplit _rdot $0)) _a))",
        "(lam (fn_0 (_rflatten (_rsplit _rdot $0)) _a _rempty))",
        "(lam (_rflatten (cons _v (_rsplit _b $0))))",
        "(lam (_rflatten (cons _v (_rsplit _e $0))))",
        "(lam (_rflatten (cons _v (_rsplit _a $0))))",
        "(lam (_rflatten (cons _v (_rsplit _f $0))))",
        "(lam (_rflatten (cons _v (_rsplit _c $0))))",
        "(lam (fn_3 $0 (lam (if (_rmatch _o $0) _l $0))))"
    ],
    "rewritten_dreamcoder": [
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _a _n))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr $1)))))) (_rsplit _rdot $0) _n))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr $1)))))) (_rsplit _rempty $0) _n))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _n _a)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr $1)))))) (_rsplit _rdot $0) _a) _n))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (_rflatten (_rsplit _rdot $0)) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _o)) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _k)) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (_rflatten (_rsplit _e $0)) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _r))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (_rflatten (_rsplit _rdot $0)) _r))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _o) _r))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _f) _r))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _r) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _o _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _rempty) _o _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i) _o _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _f) _o _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _u) _o _u))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) $0 _d))",
        "(lambda (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $0 _v))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rtail (map (lambda (_rconcat $1 _v)) (_rsplit _rdot $1))))))",
        "(lambda (car (map (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $1 (lambda (_rconcat $0 _v)))) (_rsplit _rdot $0))))",
        "(lambda (car (cdr (map (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $1 (lambda (_rconcat $0 _v)))) (_rsplit _rdot $0)))))",
        "(lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) $0 _o)))",
        "(lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _rdot $0)))))",
        "(lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _o $0)))))",
        "(lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _f $0)))))",
        "(lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _s $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _f))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i _w))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _w _i)))",
        "(lambda (_rflatten (cons _w (cons _i (#(lambda (cdr (_rsplit _rdot $0))) $0)))))",
        "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit (_rnot _r) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _a _q))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr $1)))))) (_rsplit _rdot $0) _q))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr $1)))))) (_rsplit _rempty $0) _q))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _q _a)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr $1)))))) (_rsplit _rdot $0) _a) _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _r _i))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _i _r)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (_rsplit _rdot $0)) _r _i))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _r _i))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _r _b) _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _v _r))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _r _v))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (cons _b (#(lambda (cdr (_rsplit _rdot $0))) $0)))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (cons _v (#(lambda (cdr (_rsplit _rdot $0))) $0)))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (cons _q (#(lambda (cdr (_rsplit _rdot $0))) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _d _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) (_rflatten (_rrevcdr (_rsplit _rdot $0))) _d _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _rempty) _d _t))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (_rflatten (_rrevcdr (_rsplit _rdot $0))) (_rconcat _d _t)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _t) _d _t))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _b))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _b) _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _b) _w _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _w) _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _i) _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _a _o))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _a _o)))",
        "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _o) _a _o))",
        "(lambda (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _t _w))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _w _t))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rappend _f (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (map (lambda (_rconcat _w _t)) (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _e _x))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _x _e)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (_rsplit _rdot $0)) _e _x))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _e _b) _x))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _e _w) _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _j _o)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (_rsplit _rdot $0)) _o _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o _b) _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o _u) _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _o _m))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _o) _m))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _o _m)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) $0 _o _a) _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i) _o _m))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _rempty _i))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (_rflatten (_rsplit _rdot $0)) _i))",
        "(lambda (_rflatten (_rsplit _v (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _i))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr $1)))))) (#(lambda (cdr (_rsplit _rdot $0))) $0) _e))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr $1)))))) (cdr (_rsplit _rempty $0)) _e))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr $1)))))) (cdr (map (lambda $0) (_rsplit _rdot $0))) _e))",
        "(lambda (_rflatten (cons _e (cons _a (cons _rempty (cdr (#(lambda (cdr (_rsplit _rdot $0))) $0)))))))",
        "(lambda (_rflatten (cons _rempty (cons _e (cons _a (cdr (#(lambda (cdr (_rsplit _rdot $0))) $0)))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) $0 _q))",
        "(lambda (_rflatten (_rappend _q (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) (_rflatten (_rsplit _rdot $0)) _q))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) _q))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) (_rflatten (_rsplit _a $0)) _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _a _w)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (_rsplit _rdot $0)) _w _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _a) _a _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _y) _a _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (_rflatten (_rrevcdr (_rsplit _rdot $0))) _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _j _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _rempty _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _j) _rempty _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _b _j) _rempty _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _s _e))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _e _s)))",
        "(lambda (_rflatten (cons _e (cons _s (#(lambda (cdr (_rsplit _rdot $0))) $0)))))",
        "(lambda (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (_rflatten (cons _e (cons _s (#(lambda (cdr (_rsplit _rdot $0))) $0)))) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _b _j))",
        "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rappend _b (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rappend _j (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) $0 _k))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) $0 _d) _k))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) $0 _q) _k))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) $0 _c) _k))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) $0 _l) _k))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) $0 _a))",
        "(lambda (_rflatten (_rappend _a (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) $0 _a) _a))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) $0 _r) _a))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) $0 _h) _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _a _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr $1)))))) (_rsplit _rdot $0) _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (_rflatten (_rsplit _rdot $0)) _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (_rsplit _rdot $0)) _a _rempty))",
        "(lambda (_rflatten (cons _v (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _e $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _f $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch _o $0) _l $0))))"
    ],
    "abstractions": [
        {
            "body": "(_rflatten (cons (_rconcat #2 #1) (cdr (_rsplit _rempty #0))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2)))))))",
            "arity": 3,
            "name": "fn_0",
            "utility": 5151,
            "final_cost": 22730,
            "compression_ratio": 1.226616805983282,
            "cumulative_compression_ratio": 1.226616805983282,
            "num_uses": 31,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_0 $0 _w _a": "(_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rdot $0)) _w _a": "(_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_0 $0 _e _b": "(_rflatten (cons (_rconcat _b _e) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o _b": "(_rflatten (cons (_rconcat _b _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _r _b": "(_rflatten (cons (_rconcat _b _r) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _w _b": "(_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (cons _b (cdr (_rsplit _rdot $0)))) _w _b": "(_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 $0 _s _e": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _r _i": "(_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rdot $0)) _r _i": "(_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_0 $0 _rempty _i": "(_rflatten (cons (_rconcat _i _rempty) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _w _i": "(_rflatten (cons (_rconcat _i _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o _j": "(_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rdot $0)) _o _j": "(_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_0 $0 _a _n": "(_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _a _q": "(_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _a _rempty": "(_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rdot $0)) _a _rempty": "(_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_0 (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))) _a _rempty": "(_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_0 (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rempty $0)))) _a _rempty": "(_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_0 $0 _i _rempty": "(_rflatten (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o _u": "(_rflatten (cons (_rconcat _u _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _e _w": "(_rflatten (cons (_rconcat _w _e) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _i _w": "(_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _w _w": "(_rflatten (cons (_rconcat _w _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _e _x": "(_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rdot $0)) _e _x": "(_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_0 $0 _w _y": "(_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rempty $0))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rrevcdr (_rsplit _rdot #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1))))))",
            "arity": 2,
            "name": "fn_1",
            "utility": 2424,
            "final_cost": 20306,
            "compression_ratio": 1.1193735841623165,
            "cumulative_compression_ratio": 1.3730424505072392,
            "num_uses": 32,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_1 $0 (_rconcat _a _o)": "(_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 (_rflatten (_rrevcdr (_rsplit _rdot $0))) (_rconcat _d _t)": "(_rflatten (_rappend (_rconcat _d _t) (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_1 $0 (_rconcat _o _m)": "(_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _a (_rsplit _k $0))) _a": "(_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _a (_rsplit _k $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _h (_rsplit _k $0))) _a": "(_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _h (_rsplit _k $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _r (_rsplit _k $0))) _a": "(_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _r (_rsplit _k $0)))))))"
                },
                {
                    "fn_1 $0 _f": "(_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _i": "(_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 (_rflatten (_rrevcdr (_rsplit _rdot $0))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _c (_rsplit _k $0))) _k": "(_rflatten (_rappend _k (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _c (_rsplit _k $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _d (_rsplit _k $0))) _k": "(_rflatten (_rappend _k (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _d (_rsplit _k $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _l (_rsplit _k $0))) _k": "(_rflatten (_rappend _k (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _l (_rsplit _k $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _q (_rsplit _k $0))) _k": "(_rflatten (_rappend _k (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _q (_rsplit _k $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _a (_rappend _o (_rrevcdr (_rsplit _rdot $0))))) _m": "(_rflatten (_rappend _m (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _a (_rappend _o (_rrevcdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_1 $0 _o": "(_rflatten (_rappend _o (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))) _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _o (_rrevcdr (_rsplit _rdot $0)))) _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))) _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rdot $0)) _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 _rempty": "(_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _t": "(_rflatten (_rappend _t (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _u": "(_rflatten (_rappend _u (_rrevcdr (_rsplit _rdot $0))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #2 (_rappend #1 (_rrevcdr (_rrevcdr (_rsplit _rdot #0))))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2)))))))))",
            "arity": 3,
            "name": "fn_2",
            "utility": 2020,
            "final_cost": 18286,
            "compression_ratio": 1.1104670239527508,
            "cumulative_compression_ratio": 1.524718363775566,
            "num_uses": 12,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_2 $0 _b _j": "(_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_2 $0 _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))) _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))))))))"
                },
                {
                    "fn_2 (fn_1 $0 _j) _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot (fn_1 $0 _j)))))))"
                },
                {
                    "fn_2 $0 _j _rempty": "(_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_2 $0 _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_2 (fn_1 $0 _t) _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot (fn_1 $0 _t)))))))"
                },
                {
                    "fn_2 $0 _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_2 (fn_1 $0 _f) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot (fn_1 $0 _f)))))))"
                },
                {
                    "fn_2 (fn_1 $0 _i) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot (fn_1 $0 _i)))))))"
                },
                {
                    "fn_2 (fn_1 $0 _u) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot (fn_1 $0 _u)))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map #1 (_rsplit _rdot #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1)))))",
            "arity": 2,
            "name": "fn_3",
            "utility": 1515,
            "final_cost": 16771,
            "compression_ratio": 1.090334505992487,
            "cumulative_compression_ratio": 1.6624530439449048,
            "num_uses": 15,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_3 $0 (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $1 (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $1)))"
                },
                {
                    "fn_3 $0 (lam (_rconcat _r _v))": "(_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 (lam (_rconcat _w _t))": "(_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 (lam (_rtail (map (lam (_rconcat $1 _v)) (_rsplit _rdot $1))))": "(_rflatten (map (lam (_rtail (map (lam (_rconcat $1 _v)) (_rsplit _rdot $1)))) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch _o $0) _l $0))": "(_rflatten (map (lam (if (_rmatch _o $0) _l $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 $0 (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot $0)))"
                },
                {
                    "fn_3 (_rflatten (_rsplit _e $0)) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (_rsplit _e $0)))))"
                },
                {
                    "fn_3 (_rflatten (_rsplit _rdot $0)) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (_rsplit _rdot $0)))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _k) (_rsplit _rdot $0))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (map (lam _k) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _o) (_rsplit _rdot $0))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (map (lam _o) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 $0 (lam _o)": "(_rflatten (map (lam _o) (_rsplit _rdot $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rsplit _k #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1)))))",
            "arity": 2,
            "name": "fn_4",
            "utility": 1515,
            "final_cost": 15256,
            "compression_ratio": 1.0993051914001049,
            "cumulative_compression_ratio": 1.8275432616675407,
            "num_uses": 16,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_4 $0 _a": "(_rflatten (_rappend _a (_rsplit _k $0)))"
                },
                {
                    "fn_4 $0 _c": "(_rflatten (_rappend _c (_rsplit _k $0)))"
                },
                {
                    "fn_4 $0 _d": "(_rflatten (_rappend _d (_rsplit _k $0)))"
                },
                {
                    "fn_4 $0 _h": "(_rflatten (_rappend _h (_rsplit _k $0)))"
                },
                {
                    "fn_4 $0 _k": "(_rflatten (_rappend _k (_rsplit _k $0)))"
                },
                {
                    "fn_4 $0 _l": "(_rflatten (_rappend _l (_rsplit _k $0)))"
                },
                {
                    "fn_4 (fn_1 $0 _o) _m": "(_rflatten (_rappend _m (_rsplit _k (fn_1 $0 _o))))"
                },
                {
                    "fn_4 $0 _o": "(_rflatten (_rappend _o (_rsplit _k $0)))"
                },
                {
                    "fn_4 $0 _q": "(_rflatten (_rappend _q (_rsplit _k $0)))"
                },
                {
                    "fn_4 (_rflatten (_rsplit _a $0)) _q": "(_rflatten (_rappend _q (_rsplit _k (_rflatten (_rsplit _a $0)))))"
                },
                {
                    "fn_4 (_rflatten (_rsplit _rdot $0)) _q": "(_rflatten (_rappend _q (_rsplit _k (_rflatten (_rsplit _rdot $0)))))"
                },
                {
                    "fn_4 (fn_3 $0 (lam $0)) _q": "(_rflatten (_rappend _q (_rsplit _k (fn_3 $0 (lam $0)))))"
                },
                {
                    "fn_4 $0 _r": "(_rflatten (_rappend _r (_rsplit _k $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (cdr (_rsplit _rdot #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1))))))",
            "arity": 2,
            "name": "fn_5",
            "utility": 606,
            "final_cost": 14650,
            "compression_ratio": 1.0413651877133105,
            "cumulative_compression_ratio": 1.9031399317406144,
            "num_uses": 26,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_5 $0 (_rconcat _a _w)": "(_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 $0 (_rconcat _e _s)": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 $0 (_rconcat _i _r)": "(_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 $0 (_rconcat _j _o)": "(_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 $0 (_rconcat _n _a)": "(_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 $0 (_rconcat _q _a)": "(_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 $0 (_rconcat _w _i)": "(_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 $0 (_rconcat _x _e)": "(_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 $0 _a": "(_rflatten (cons _a (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 (_rflatten (_rsplit _rdot $0)) _a": "(_rflatten (cons _a (cdr (_rsplit _rdot (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_5 $0 _b": "(_rflatten (cons _b (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 (fn_0 $0 _w _b) _b": "(_rflatten (cons _b (cdr (_rsplit _rdot (fn_0 $0 _w _b)))))"
                },
                {
                    "fn_5 (fn_0 $0 _w _i) _b": "(_rflatten (cons _b (cdr (_rsplit _rdot (fn_0 $0 _w _i)))))"
                },
                {
                    "fn_5 (fn_0 $0 _w _w) _b": "(_rflatten (cons _b (cdr (_rsplit _rdot (fn_0 $0 _w _w)))))"
                },
                {
                    "fn_5 (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))) _e": "(_rflatten (cons _e (cdr (_rsplit _rdot (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_5 $0 _i": "(_rflatten (cons _i (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_5 (_rflatten (_rsplit _rdot $0)) _i": "(_rflatten (cons _i (cdr (_rsplit _rdot (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_5 (fn_0 $0 _r _b) _i": "(_rflatten (cons _i (cdr (_rsplit _rdot (fn_0 $0 _r _b)))))"
                },
                {
                    "fn_5 (fn_0 $0 _o _b) _j": "(_rflatten (cons _j (cdr (_rsplit _rdot (fn_0 $0 _o _b)))))"
                },
                {
                    "fn_5 (fn_0 $0 _o _u) _j": "(_rflatten (cons _j (cdr (_rsplit _rdot (fn_0 $0 _o _u)))))"
                },
                {
                    "fn_5 (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0))))) _n": "(_rflatten (cons _n (cdr (_rsplit _rdot (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_5 (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0))))) _q": "(_rflatten (cons _q (cdr (_rsplit _rdot (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_5 (fn_0 $0 _e _b) _x": "(_rflatten (cons _x (cdr (_rsplit _rdot (fn_0 $0 _e _b)))))"
                },
                {
                    "fn_5 (fn_0 $0 _e _w) _x": "(_rflatten (cons _x (cdr (_rsplit _rdot (fn_0 $0 _e _w)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (cons _a (cdr #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (cons _a (cdr $1))))))",
            "arity": 2,
            "name": "fn_6",
            "utility": 404,
            "final_cost": 14246,
            "compression_ratio": 1.0283588375684403,
            "cumulative_compression_ratio": 1.957110767934859,
            "num_uses": 10,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_6 (_rsplit _rdot $0) _a": "(_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_6 (cdr (_rsplit _rdot $0)) _e": "(_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_6 (cdr (_rsplit _rempty $0)) _e": "(_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0))))))"
                },
                {
                    "fn_6 (cdr (map (lam $0) (_rsplit _rdot $0))) _e": "(_rflatten (cons _e (cons _a (cdr (cdr (map (lam $0) (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_6 (_rsplit _rdot $0) _n": "(_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_6 (_rsplit _rempty $0) _n": "(_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_6 (_rsplit _rdot $0) _q": "(_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_6 (_rsplit _rempty $0) _q": "(_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0)))))"
                },
                {
                    "fn_6 (_rsplit _rdot $0) _rempty": "(_rflatten (cons _rempty (cons _a (cdr (_rsplit _rdot $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map (lam (_rconcat #2 #1)) (_rsplit _rempty #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2))))))",
            "arity": 3,
            "name": "fn_7",
            "utility": 204,
            "final_cost": 14042,
            "compression_ratio": 1.0145278450363195,
            "cumulative_compression_ratio": 1.985543369890329,
            "num_uses": 3,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_7 $0 _v #0": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 $0 _v _r": "(_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 $0 _t _w": "(_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(cdr (_rsplit _rdot #0))",
            "dreamcoder": "#(lambda (cdr (_rsplit _rdot $0)))",
            "arity": 1,
            "name": "fn_8",
            "utility": 202,
            "final_cost": 13840,
            "compression_ratio": 1.0145953757225434,
            "cumulative_compression_ratio": 2.0145231213872834,
            "num_uses": 9,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_8 $0": "(cdr (_rsplit _rdot $0))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #2 (_rappend #1 (_rrevcdr (_rsplit _rdot #0)))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rsplit _rdot $2))))))))",
            "arity": 3,
            "name": "fn_9",
            "utility": 202,
            "final_cost": 13638,
            "compression_ratio": 1.0148115559466198,
            "cumulative_compression_ratio": 2.04436134330547,
            "num_uses": 8,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_9 $0 _o _a": "(_rflatten (_rappend _a (_rappend _o (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_9 $0 _o _m": "(_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_9 (fn_1 $0 _i) _o _m": "(_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot (fn_1 $0 _i))))))"
                },
                {
                    "fn_9 $0 _a _o": "(_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_9 (fn_1 $0 _o) _a _o": "(_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot (fn_1 $0 _o))))))"
                },
                {
                    "fn_9 (_rflatten (_rrevcdr (_rsplit _rdot $0))) _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_9 (fn_1 $0 _rempty) _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rsplit _rdot (fn_1 $0 _rempty))))))"
                },
                {
                    "fn_9 (fn_1 $0 _rempty) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rdot (fn_1 $0 _rempty))))))"
                }
            ],
            "dc_comparison_millis": null
        }
    ]
}