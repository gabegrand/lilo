{
    "_summary": {
        "n_tasks_solved": {
            "train": 174,
            "test": 229
        }
    },
    "train": {
        "re2_train_0_if_the_word_ends_with_any_letter_add_w_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_0_if_the_word_ends_with_any_letter_add_w_after_that ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat (_rtail (_rsplit _rdot $0)) _w) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _w (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _w (_rsplit _j $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _w (_rsplit _b $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _w (_rsplit _f $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 11.625524520874023
        },
        "re2_train_1_if_there_is_consonant_replace_that_with_j_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_1_if_there_is_consonant_replace_that_with_j_p ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _j _p) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_2_if_the_word_ends_with_consonant_s_replace_that_with_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_2_if_the_word_ends_with_consonant_s_replace_that_with_b ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _s) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _s) $0))) _b (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _s) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _s) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_3_if_there_is_d_replace_that_with_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_3_if_there_is_d_replace_that_with_y ((lambda (_rflatten (map (lambda (if (_rmatch _d $0) _y $0)) (_rsplit _d $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _y _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _y _d))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _y) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) _y _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _y _d)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 31.555888891220093
        },
        "re2_train_4_if_there_is_b_add_k_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_4_if_there_is_b_add_k_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _b $0) (_rconcat _k $0) $0)) (_rsplit _b $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _b) _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 339.61862802505493
        },
        "re2_train_5_if_the_word_ends_with_consonant_consonant_double_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_5_if_the_word_ends_with_consonant_consonant_double_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_6_if_the_word_starts_with_any_letter_any_letter_add_f_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_6_if_the_word_starts_with_any_letter_any_letter_add_f_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat (car (_rsplit (_rconcat _rdot _rdot) $0)) _f) (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_7_if_the_word_starts_with_consonant_replace_that_with_j_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_7_if_the_word_starts_with_consonant_replace_that_with_j_e ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _j _e) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_8_if_the_word_starts_with_any_letter_consonant_replace_that_with_c_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_8_if_the_word_starts_with_any_letter_consonant_replace_that_with_c_t ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _c _t) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_9_if_the_word_starts_with_any_letter_vowel_add_j_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_9_if_the_word_starts_with_any_letter_vowel_add_j_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _j (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_10_if_there_is_any_letter_any_letter_replace_that_with_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_10_if_there_is_any_letter_any_letter_replace_that_with_i ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _rdot) $0) _i $0)) (_rsplit (_rconcat _rdot _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_11_if_the_word_starts_with_any_letter_replace_that_with_r_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_11_if_the_word_starts_with_any_letter_replace_that_with_r_u ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _r _u) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _u _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) _u _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _u _r)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _u _r) _b _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _r (_rsplit _a (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _u _rempty)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 46.7351815700531
        },
        "re2_train_13_if_the_word_starts_with_vowel_any_letter_replace_that_with_q_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_13_if_the_word_starts_with_vowel_any_letter_replace_that_with_q_v ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat _q _v) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_14_if_there_is_t_replace_that_with_a_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_14_if_there_is_t_replace_that_with_a_x ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _a _x) $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _a _x) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _a _x) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _a _x)) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _a _rempty) _x) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _a _x) _rempty) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.818737030029297
        },
        "re2_train_15_if_there_is_vowel_replace_that_with_n_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_15_if_there_is_vowel_replace_that_with_n_n ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _n _n) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_16_if_there_is_a_consonant_replace_that_with_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_16_if_there_is_a_consonant_replace_that_with_f ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _a (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _f $0)) (_rsplit (_rconcat _a (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_17_if_the_word_starts_with_any_letter_any_letter_replace_that_with_l_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_17_if_the_word_starts_with_any_letter_any_letter_replace_that_with_l_n ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat _l _n) (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _n _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _l _n) (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _l (cons _n (cdr (cdr (_rsplit _rempty $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _l _n) (cdr (cdr (_rsplit _rempty $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _l (_rsplit _a (_rflatten (cons _n (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0)))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 68.49966096878052
        },
        "re2_train_18_if_the_word_starts_with_any_letter_consonant_add_p_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_18_if_the_word_starts_with_any_letter_consonant_add_p_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _p) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_19_if_the_word_ends_with_any_letter_consonant_replace_that_with_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_19_if_the_word_ends_with_any_letter_consonant_replace_that_with_v ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _v (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _v (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) _rempty $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) _v $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _v)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _v _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _v))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 81.37012028694153
        },
        "re2_train_20_if_there_is_e_add_e_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_20_if_there_is_e_add_e_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _e $0) (_rconcat _e $0) $0)) (_rsplit _e $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _e) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _e _e) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _e) _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _e) _e) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _e) (_rconcat _rempty _e)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 47.35328388214111
        },
        "re2_train_21_if_the_word_starts_with_any_letter_replace_that_with_n_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_21_if_the_word_starts_with_any_letter_replace_that_with_n_a ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _n _a) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _a _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _n))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _n _a) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _n))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 17.68575143814087
        },
        "re2_train_22_if_the_word_ends_with_consonant_any_letter_replace_that_with_j_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_22_if_the_word_ends_with_consonant_any_letter_replace_that_with_j_g ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _j _g) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_23_if_there_is_any_letter_replace_that_with_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_23_if_there_is_any_letter_replace_that_with_k ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) _k $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _k _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _k) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _k) (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda _k) (#(lambda (_rsplit _rdot $0)) $0))) _v _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _k) (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda _k) (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0008990764617919922
        },
        "re2_train_24_if_the_word_starts_with_any_letter_any_letter_add_b_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_24_if_the_word_starts_with_any_letter_any_letter_add_b_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat (car (_rsplit (_rconcat _rdot _rdot) $0)) _b) (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_25_if_there_is_vowel_vowel_replace_that_with_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_25_if_there_is_vowel_vowel_replace_that_with_d ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _d $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_26_if_the_word_ends_with_any_letter_replace_that_with_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_26_if_the_word_ends_with_any_letter_replace_that_with_r ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) _r (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0008711814880371094
        },
        "re2_train_27_if_there_is_consonant_replace_that_with_v_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_27_if_there_is_consonant_replace_that_with_v_i ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _v _i) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_28_if_the_word_starts_with_any_letter_consonant_replace_that_with_w_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_28_if_the_word_starts_with_any_letter_consonant_replace_that_with_w_t ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _w _t) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_29_if_the_word_ends_with_any_letter_any_letter_replace_that_with_o_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_29_if_the_word_ends_with_any_letter_any_letter_replace_that_with_o_u ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _rdot) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat _o _u) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _o _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _o _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i) _o _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (_rflatten (_rsplit _rempty $0)) _o _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _o _u) _o _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0009527206420898438
        },
        "re2_train_30_if_the_word_ends_with_n_any_letter_replace_that_with_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_30_if_the_word_ends_with_n_any_letter_replace_that_with_v ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _n _rdot) (_rtail (_rsplit (_rconcat _n _rdot) $0))) _v (_rtail (_rsplit (_rconcat _n _rdot) $0))) (_rrevcdr (_rsplit (_rconcat _n _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_31_if_there_is_consonant_o_replace_that_with_p_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_31_if_there_is_consonant_o_replace_that_with_p_g ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _o) $0) (_rconcat _p _g) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _o) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_32_if_there_is_p_replace_that_with_f_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_32_if_there_is_p_replace_that_with_f_w ((lambda (_rflatten (map (lambda (if (_rmatch _p $0) (_rconcat _f _w) $0)) (_rsplit _p $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f _w) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _f _w) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _f _rempty) _w) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _f _w) _rempty) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f _w) _p))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.885518074035645
        },
        "re2_train_33_if_there_is_e_s_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_33_if_there_is_e_s_remove_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _e _s) $0) _rempty $0)) (_rsplit (_rconcat _e _s) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_34_if_the_word_ends_with_any_letter_add_d_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_34_if_the_word_ends_with_any_letter_add_d_after_that ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat (_rtail (_rsplit _rdot $0)) _d) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _d (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _d))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _d (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0006914138793945312
        },
        "re2_train_35_if_there_is_any_letter_replace_that_with_q_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_35_if_there_is_any_letter_replace_that_with_q_j ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _q _j) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _j _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda _a) (#(lambda (_rsplit _rdot $0)) $0))) _j _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda _i) (#(lambda (_rsplit _rdot $0)) $0))) _j _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda _j) (#(lambda (_rsplit _rdot $0)) $0))) _j _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda _q) (#(lambda (_rsplit _rdot $0)) $0))) _j _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 11.523308753967285
        },
        "re2_train_36_if_the_word_starts_with_consonant_replace_that_with_p_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_36_if_the_word_starts_with_consonant_replace_that_with_p_i ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _p _i) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_37_if_there_is_g_add_q_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_37_if_there_is_g_add_q_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _g $0) (_rconcat _q $0) $0)) (_rsplit _g $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _q _g) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _q) _g) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _q _rempty) _g) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _q _g) (_rconcat _g _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _q _g) (_rconcat _rempty _g)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.9723756313324
        },
        "re2_train_38_if_there_is_vowel_any_letter_replace_that_with_v_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_38_if_there_is_vowel_any_letter_replace_that_with_v_g ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) (_rconcat _v _g) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_39_if_there_is_c_add_d_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_39_if_there_is_c_add_d_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _c $0) (_rconcat _d $0) $0)) (_rsplit _c $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_40_if_the_word_starts_with_vowel_replace_that_with_e_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_40_if_the_word_starts_with_vowel_replace_that_with_e_s ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _e _s) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_41_if_there_is_any_letter_add_v_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_41_if_there_is_any_letter_add_v_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat $0 _v) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _rempty (map (lambda (_rconcat $0 _v)) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (map (lambda (_rconcat $0 _v)) (#(lambda (_rsplit _rdot $0)) $0))) _v))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0009038448333740234
        },
        "re2_train_42_if_the_word_starts_with_consonant_vowel_add_g_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_42_if_the_word_starts_with_consonant_vowel_add_g_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _g (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_43_if_there_is_i_replace_that_with_k_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_43_if_there_is_i_replace_that_with_k_t ((lambda (_rflatten (map (lambda (if (_rmatch _i $0) (_rconcat _k _t) $0)) (_rsplit _i $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _t) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _k _t) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _t) _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _k _rempty) _t) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _k _t) _rempty) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.842835903167725
        },
        "re2_train_44_if_there_is_consonant_replace_that_with_p_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_44_if_there_is_consonant_replace_that_with_p_x ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _p _x) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_45_if_there_is_vowel_add_n_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_45_if_there_is_vowel_add_n_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat $0 _n) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_46_if_the_word_ends_with_any_letter_consonant_add_a_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_46_if_the_word_ends_with_any_letter_consonant_add_a_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _a (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_47_if_there_is_u_replace_that_with_l_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_47_if_there_is_u_replace_that_with_l_q ((lambda (_rflatten (map (lambda (if (_rmatch _u $0) (_rconcat _l _q) $0)) (_rsplit _u $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _l _q) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _l _q) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _l _q) _rempty) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _l _rempty) _q) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _l) _q) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 36.33000707626343
        },
        "re2_train_48_if_there_is_vowel_add_c_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_48_if_there_is_vowel_add_c_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat $0 _c) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_49_if_the_word_starts_with_consonant_e_add_l_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_49_if_the_word_starts_with_consonant_e_add_l_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0))) (_rconcat _l (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_50_if_the_word_ends_with_consonant_add_o_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_50_if_the_word_ends_with_consonant_add_o_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)) _o) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _o $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _o (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))) _o $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _i $0) _o $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (#(lambda (_rsplit _rdot $0)) $0)) _o $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0013723373413085938
        },
        "re2_train_51_if_the_word_ends_with_vowel_any_letter_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_51_if_the_word_ends_with_vowel_any_letter_replace_that_with_w ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) _w (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_52_if_the_word_ends_with_any_letter_replace_that_with_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_52_if_the_word_ends_with_any_letter_replace_that_with_f ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) _f (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _f))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _f) _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0009708404541015625
        },
        "re2_train_53_if_the_word_ends_with_any_letter_replace_that_with_t_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_53_if_the_word_ends_with_any_letter_replace_that_with_t_m ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _t _m) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _t _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (_rsplit _rempty $0)) (_rconcat _t _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) (_rconcat _t _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _o _m)) _t _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (if (_rmatch _s (_rtail (_rsplit _s $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _f) $0) (_rconcat _t _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 15.883766651153564
        },
        "re2_train_54_if_the_word_starts_with_any_letter_consonant_replace_that_with_j_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_54_if_the_word_starts_with_any_letter_consonant_replace_that_with_j_h ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _j _h) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_55_if_the_word_starts_with_any_letter_vowel_add_w_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_55_if_the_word_starts_with_any_letter_vowel_add_w_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _w (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_56_if_there_is_vowel_replace_that_with_u_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_56_if_there_is_vowel_replace_that_with_u_b ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _u _b) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_57_if_there_is_vowel_t_replace_that_with_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_57_if_there_is_vowel_t_replace_that_with_n ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _t) $0) _n $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _t) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_59_if_the_word_ends_with_vowel_any_letter_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_59_if_the_word_ends_with_vowel_any_letter_replace_that_with_t ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) _t (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_60_if_the_word_starts_with_any_letter_replace_that_with_e_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_60_if_the_word_starts_with_any_letter_replace_that_with_e_e ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _e _e) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) _e _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _e)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 15.887401580810547
        },
        "re2_train_61_if_the_word_ends_with_any_letter_s_replace_that_with_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_61_if_the_word_ends_with_any_letter_s_replace_that_with_f ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _s) (_rtail (_rsplit (_rconcat _rdot _s) $0))) _f (_rtail (_rsplit (_rconcat _rdot _s) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _s) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_62_if_the_word_starts_with_consonant_consonant_replace_that_with_q_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_62_if_the_word_starts_with_consonant_consonant_replace_that_with_q_l ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _q _l) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_63_if_the_word_starts_with_vowel_any_letter_replace_that_with_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_63_if_the_word_starts_with_vowel_any_letter_replace_that_with_d ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) _d (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_64_if_there_is_o_any_letter_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_64_if_there_is_o_any_letter_replace_that_with_t ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _o _rdot) $0) _t $0)) (_rsplit (_rconcat _o _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_65_if_there_is_d_vowel_add_q_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_65_if_there_is_d_vowel_add_q_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _d (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat $0 _q) $0)) (_rsplit (_rconcat _d (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_66_if_the_word_starts_with_any_letter_any_letter_add_j_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_66_if_the_word_starts_with_any_letter_any_letter_add_j_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat _j (car (_rsplit (_rconcat _rdot _rdot) $0))) (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _a $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _j $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _t $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _j (cdr (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _v (_rsplit _a $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 11.544204235076904
        },
        "re2_train_67_if_there_is_any_letter_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_67_if_there_is_any_letter_replace_that_with_j ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) _j $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _j _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _rempty _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _j) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _j) (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda _j) (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _j) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _j _j)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 3.8647608757019043
        },
        "re2_train_68_if_there_is_any_letter_replace_that_with_h_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_68_if_there_is_any_letter_replace_that_with_h_s ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _h _s) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _s _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _s)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda _s) (#(lambda (_rsplit _rdot $0)) $0))) _s _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (_rsplit _a (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _s _h)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda _z) (#(lambda (_rsplit _rdot $0)) $0))) _s _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.3524227142334
        },
        "re2_train_69_if_the_word_ends_with_consonant_replace_that_with_i_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_69_if_the_word_ends_with_consonant_replace_that_with_i_h ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _i _h) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _h _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)) _h $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _rempty (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)) _h $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _i (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)) _h $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _e (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)) _h $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 29.995110988616943
        },
        "re2_train_70_if_the_word_starts_with_consonant_replace_that_with_a_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_70_if_the_word_starts_with_consonant_replace_that_with_a_g ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _a _g) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_71_if_the_word_starts_with_any_letter_replace_that_with_w_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_71_if_the_word_starts_with_any_letter_replace_that_with_w_i ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _w _i) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _i _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _rempty) _i _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 5.695099830627441
        },
        "re2_train_72_if_the_word_ends_with_d_replace_that_with_i_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_72_if_the_word_ends_with_d_replace_that_with_i_u ((lambda (_rflatten (_rappend (if (_rmatch _d (_rtail (_rsplit _d $0))) (_rconcat _i _u) (_rtail (_rsplit _d $0))) (_rrevcdr (_rsplit _d $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _d (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _i _u)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 491.04612827301025
        },
        "re2_train_73_if_there_is_consonant_t_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_73_if_there_is_consonant_t_replace_that_with_q ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _t) $0) _q $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _t) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_74_if_there_is_vowel_add_i_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_74_if_there_is_vowel_add_i_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat $0 _i) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_75_if_the_word_starts_with_consonant_vowel_replace_that_with_o_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_75_if_the_word_starts_with_consonant_vowel_replace_that_with_o_t ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _o _t) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_76_if_there_is_r_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_76_if_there_is_r_replace_that_with_j ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) _j $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _j _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 423.6846344470978
        },
        "re2_train_77_if_there_is_t_replace_that_with_t_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_77_if_there_is_t_replace_that_with_t_x ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _t _x) $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t _x) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _t _x)) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t (_rconcat _rempty _x)) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) (_rconcat _t _x) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (if (_rmatch _e (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 $0) (_rconcat _t _x) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 29.719417572021484
        },
        "re2_train_78_if_the_word_starts_with_any_letter_replace_that_with_y_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_78_if_the_word_starts_with_any_letter_replace_that_with_y_w ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _y _w) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w (_rconcat _rempty _y)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _y (cdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _a))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cons _j (cdr (#(lambda (_rsplit _rdot $0)) $0)))) _w _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _y (cdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _b))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 11.51899242401123
        },
        "re2_train_79_if_there_is_consonant_consonant_add_w_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_79_if_there_is_consonant_consonant_add_w_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat $0 _w) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_80_if_the_word_starts_with_consonant_consonant_replace_that_with_v_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_80_if_the_word_starts_with_consonant_consonant_replace_that_with_v_e ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _v _e) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_81_if_the_word_starts_with_any_letter_replace_that_with_c_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_81_if_the_word_starts_with_any_letter_replace_that_with_c_v ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _c _v) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _v _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _c _v) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _c _v)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _c _v) (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _c _v) (cdr (_rsplit _rempty $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 51.85935020446777
        },
        "re2_train_82_if_there_is_consonant_vowel_replace_that_with_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_82_if_there_is_consonant_vowel_replace_that_with_h ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _h $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_83_if_there_is_consonant_replace_that_with_c_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_83_if_there_is_consonant_replace_that_with_c_m ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _c _m) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_84_if_there_is_vowel_add_c_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_84_if_there_is_vowel_add_c_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _c $0) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_85_if_the_word_ends_with_vowel_consonant_add_g_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_85_if_the_word_ends_with_vowel_consonant_add_g_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _g) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_86_if_the_word_starts_with_vowel_consonant_replace_that_with_k_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_86_if_the_word_starts_with_vowel_consonant_replace_that_with_k_b ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _k _b) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_87_if_the_word_starts_with_vowel_add_p_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_87_if_the_word_starts_with_vowel_add_p_before_that ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _p (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_88_if_there_is_b_replace_that_with_y_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_88_if_there_is_b_replace_that_with_y_a ((lambda (_rflatten (map (lambda (if (_rmatch _b $0) (_rconcat _y _a) $0)) (_rsplit _b $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _y _a) _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _y _a) _b))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) (_rconcat _y _a) _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (if (_rmatch _e (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 $0) (_rconcat _y _a) _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (if (_rmatch _s (_rtail (_rsplit _s $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _s) $0) (_rconcat _y _a) _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.488887548446655
        },
        "re2_train_89_if_the_word_starts_with_consonant_vowel_replace_that_with_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_89_if_the_word_starts_with_consonant_vowel_replace_that_with_v ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _v (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_90_if_the_word_starts_with_vowel_replace_that_with_j_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_90_if_the_word_starts_with_vowel_replace_that_with_j_l ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _j _l) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_91_if_the_word_starts_with_consonant_vowel_add_t_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_91_if_the_word_starts_with_consonant_vowel_add_t_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _t (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_92_if_there_is_any_letter_consonant_add_k_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_92_if_there_is_any_letter_consonant_add_k_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat $0 _k) $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_93_if_the_word_starts_with_vowel_replace_that_with_u_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_93_if_the_word_starts_with_vowel_replace_that_with_u_c ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _u _c) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_94_if_the_word_starts_with_consonant_vowel_add_x_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_94_if_the_word_starts_with_consonant_vowel_add_x_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _x (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_95_if_the_word_starts_with_consonant_any_letter_replace_that_with_d_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_95_if_the_word_starts_with_consonant_any_letter_replace_that_with_d_i ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _d _i) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_96_if_there_is_vowel_vowel_replace_that_with_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_96_if_there_is_vowel_vowel_replace_that_with_y ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _y $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_97_if_there_is_any_letter_l_replace_that_with_j_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_97_if_there_is_any_letter_l_replace_that_with_j_b ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _l) $0) (_rconcat _j _b) $0)) (_rsplit (_rconcat _rdot _l) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_98_if_the_word_starts_with_consonant_replace_that_with_g_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_98_if_the_word_starts_with_consonant_replace_that_with_g_d ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _g _d) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_99_if_there_is_t_replace_that_with_d_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_99_if_there_is_t_replace_that_with_d_q ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _d _q) $0)) (_rsplit _t $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_100_if_the_word_starts_with_vowel_replace_that_with_e_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_100_if_the_word_starts_with_vowel_replace_that_with_e_i ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _e _i) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_101_if_the_word_starts_with_consonant_replace_that_with_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_101_if_the_word_starts_with_consonant_replace_that_with_n ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) _n (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_102_if_the_word_starts_with_any_letter_vowel_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_102_if_the_word_starts_with_any_letter_vowel_replace_that_with_t ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _t (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_103_if_the_word_starts_with_any_letter_replace_that_with_q_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_103_if_the_word_starts_with_any_letter_replace_that_with_q_a ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _q _a) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _a _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _a $0)) _a _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _q))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _q _a) (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 11.660393238067627
        },
        "re2_train_104_if_there_is_vowel_any_letter_replace_that_with_x_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_104_if_there_is_vowel_any_letter_replace_that_with_x_v ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) (_rconcat _x _v) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_105_if_there_is_vowel_any_letter_replace_that_with_j_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_105_if_there_is_vowel_any_letter_replace_that_with_j_r ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) (_rconcat _j _r) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_106_if_the_word_starts_with_vowel_consonant_add_j_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_106_if_the_word_starts_with_vowel_consonant_add_j_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _j (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_107_if_there_is_any_letter_consonant_add_n_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_107_if_there_is_any_letter_consonant_add_n_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat $0 _n) $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_108_if_the_word_starts_with_consonant_replace_that_with_j_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_108_if_the_word_starts_with_consonant_replace_that_with_j_b ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _j _b) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_109_if_there_is_d_replace_that_with_c_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_109_if_there_is_d_replace_that_with_c_t ((lambda (_rflatten (map (lambda (if (_rmatch _d $0) (_rconcat _c _t) $0)) (_rsplit _d $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _t) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _c _t) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _t) _d))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _t) (_rconcat _d _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (_rsplit _rempty $0)) (_rconcat _c _t) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.76182746887207
        },
        "re2_train_110_if_there_is_consonant_consonant_replace_that_with_l_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_110_if_there_is_consonant_consonant_replace_that_with_l_h ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _l _h) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_111_if_the_word_starts_with_any_letter_replace_that_with_g_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_111_if_the_word_starts_with_any_letter_replace_that_with_g_a ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _g _a) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _g _a) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a (_rconcat _g _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _g _a)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) _a _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 19.912253856658936
        },
        "re2_train_112_if_there_is_consonant_o_replace_that_with_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_112_if_there_is_consonant_o_replace_that_with_b ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _o) $0) _b $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _o) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_113_if_there_is_any_letter_replace_that_with_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_113_if_there_is_any_letter_replace_that_with_p ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) _p $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda _p) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _p) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _p) (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda _r) (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _p) (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda _n) (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _p) (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda _p) (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 11.580683946609497
        },
        "re2_train_114_if_there_is_any_letter_consonant_replace_that_with_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_114_if_there_is_any_letter_consonant_replace_that_with_g ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _g $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_115_if_the_word_starts_with_consonant_replace_that_with_g_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_115_if_the_word_starts_with_consonant_replace_that_with_g_n ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _g _n) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_116_if_the_word_starts_with_consonant_any_letter_replace_that_with_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_116_if_the_word_starts_with_consonant_any_letter_replace_that_with_f ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) _f (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_117_if_there_is_any_letter_consonant_replace_that_with_l_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_117_if_there_is_any_letter_consonant_replace_that_with_l_s ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _l _s) $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_118_if_there_is_l_replace_that_with_n_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_118_if_there_is_l_replace_that_with_n_k ((lambda (_rflatten (map (lambda (if (_rmatch _l $0) (_rconcat _n _k) $0)) (_rsplit _l $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _k) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _n _k) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _k) _l))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n (_rconcat _k _rempty)) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _k) (_rconcat _rempty _l)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 47.35733461380005
        },
        "re2_train_119_if_there_is_vowel_t_add_i_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_119_if_there_is_vowel_t_add_i_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _t) $0) (_rconcat _i $0) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _t) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_120_if_the_word_starts_with_consonant_add_l_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_120_if_the_word_starts_with_consonant_add_l_before_that ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _l (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_121_if_there_is_t_add_y_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_121_if_there_is_t_add_y_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat $0 _y) $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t _y) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t _y) _t)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 102.73159551620483
        },
        "re2_train_122_if_the_word_starts_with_vowel_replace_that_with_i_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_122_if_the_word_starts_with_vowel_replace_that_with_i_a ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _i _a) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_123_if_there_is_any_letter_i_replace_that_with_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_123_if_there_is_any_letter_i_replace_that_with_n ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _i) $0) _n $0)) (_rsplit (_rconcat _rdot _i) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_124_if_the_word_ends_with_any_letter_s_replace_that_with_x_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_124_if_the_word_ends_with_any_letter_s_replace_that_with_x_l ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _s) (_rtail (_rsplit (_rconcat _rdot _s) $0))) (_rconcat _x _l) (_rtail (_rsplit (_rconcat _rdot _s) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _s) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_125_if_there_is_b_any_letter_replace_that_with_n_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_125_if_there_is_b_any_letter_replace_that_with_n_c ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _b _rdot) $0) (_rconcat _n _c) $0)) (_rsplit (_rconcat _b _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_126_if_there_is_vowel_any_letter_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_126_if_there_is_vowel_any_letter_replace_that_with_q ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) _q $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_127_if_the_word_starts_with_any_letter_replace_that_with_i_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_127_if_the_word_starts_with_any_letter_replace_that_with_i_r ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _i _r) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _r _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _i _r) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r (_rconcat _i _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 18.27835440635681
        },
        "re2_train_128_if_there_is_consonant_r_replace_that_with_q_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_128_if_there_is_consonant_r_replace_that_with_q_u ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _r) $0) (_rconcat _q _u) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _r) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_129_if_there_is_any_letter_replace_that_with_r_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_129_if_there_is_any_letter_replace_that_with_r_v ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _r _v) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _v _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _v _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _v _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (_rsplit _a $0)) _v _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.000720977783203125
        },
        "re2_train_130_if_there_is_e_any_letter_replace_that_with_c_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_130_if_there_is_e_any_letter_replace_that_with_c_t ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _e _rdot) $0) (_rconcat _c _t) $0)) (_rsplit (_rconcat _e _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_131_if_there_is_vowel_replace_that_with_p_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_131_if_there_is_vowel_replace_that_with_p_q ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _p _q) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_132_if_the_word_ends_with_any_letter_consonant_replace_that_with_d_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_132_if_the_word_ends_with_any_letter_consonant_replace_that_with_d_t ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _d _t) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _d _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _d _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _t) _d _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) _d _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _d _t) _d _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0009348392486572266
        },
        "re2_train_133_if_there_is_p_add_p_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_133_if_there_is_p_add_p_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _p $0) (_rconcat $0 _p) $0)) (_rsplit _p $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _p _p) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 237.40314054489136
        },
        "re2_train_134_if_the_word_starts_with_any_letter_add_f_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_134_if_the_word_starts_with_any_letter_add_f_before_that ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _f (car (_rsplit _rdot $0))) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _f (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _f (_rsplit _a $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _f _rempty) (_rsplit _a $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _rempty _f) (_rsplit _a $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 19.546525716781616
        },
        "re2_train_135_if_there_is_any_letter_replace_that_with_f_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_135_if_there_is_any_letter_replace_that_with_f_n ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _f _n) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _n _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _f _n)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _v) _n _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _f) _n _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) _n _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 15.57982063293457
        },
        "re2_train_136_if_the_word_starts_with_any_letter_vowel_add_d_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_136_if_the_word_starts_with_any_letter_vowel_add_d_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _d (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_137_if_there_is_p_replace_that_with_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_137_if_there_is_p_replace_that_with_g ((lambda (_rflatten (map (lambda (if (_rmatch _p $0) _g $0)) (_rsplit _p $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _g _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _g _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _g _p))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _g _rempty) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _g) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 30.0470552444458
        },
        "re2_train_138_if_there_is_e_any_letter_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_138_if_there_is_e_any_letter_replace_that_with_j ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _e _rdot) $0) _j $0)) (_rsplit (_rconcat _e _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_139_if_there_is_u_any_letter_double_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_139_if_there_is_u_any_letter_double_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _u _rdot) $0) (_rconcat $0 $0) $0)) (_rsplit (_rconcat _u _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_140_if_the_word_ends_with_vowel_any_letter_replace_that_with_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_140_if_the_word_ends_with_vowel_any_letter_replace_that_with_y ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) _y (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_141_if_the_word_starts_with_any_letter_consonant_replace_that_with_x_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_141_if_the_word_starts_with_any_letter_consonant_replace_that_with_x_x ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _x _x) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_142_if_the_word_starts_with_consonant_replace_that_with_r_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_142_if_the_word_starts_with_consonant_replace_that_with_r_p ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _r _p) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_143_if_the_word_ends_with_consonant_replace_that_with_k_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_143_if_the_word_ends_with_consonant_replace_that_with_k_t ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _k _t) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_144_if_the_word_ends_with_any_letter_add_p_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_144_if_the_word_ends_with_any_letter_add_p_after_that ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat (_rtail (_rsplit _rdot $0)) _p) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rsplit _i $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rsplit _j $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rsplit _f $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 11.82416558265686
        },
        "re2_train_145_if_the_word_ends_with_vowel_consonant_replace_that_with_s_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_145_if_the_word_ends_with_vowel_consonant_replace_that_with_s_r ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _s _r) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_146_if_there_is_vowel_vowel_replace_that_with_p_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_146_if_there_is_vowel_vowel_replace_that_with_p_p ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _p _p) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_147_if_the_word_starts_with_consonant_replace_that_with_e_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_147_if_the_word_starts_with_consonant_replace_that_with_e_n ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _e _n) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_148_if_the_word_starts_with_consonant_replace_that_with_s_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_148_if_the_word_starts_with_consonant_replace_that_with_s_e ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _s _e) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_149_if_the_word_starts_with_consonant_vowel_replace_that_with_p_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_149_if_the_word_starts_with_consonant_vowel_replace_that_with_p_a ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _p _a) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_150_if_the_word_ends_with_s_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_150_if_the_word_ends_with_s_remove_that ((lambda (_rflatten (_rappend (if (_rmatch _s (_rtail (_rsplit _s $0))) _rempty (_rtail (_rsplit _s $0))) (_rrevcdr (_rsplit _s $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _rempty) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (_rsplit _rempty $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _rempty) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (_rsplit _s $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _rempty) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _rdot (_rtail (_rsplit _s $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _rempty) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 277.5176947116852
        },
        "re2_train_151_if_the_word_ends_with_vowel_consonant_replace_that_with_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_151_if_the_word_ends_with_vowel_consonant_replace_that_with_v ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _v (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_152_if_there_is_r_add_b_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_152_if_there_is_r_add_b_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) (_rconcat _b $0) $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _b _r) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _b) _r) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) (_rconcat _b _r) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.24522924423218
        },
        "re2_train_153_if_there_is_consonant_consonant_replace_that_with_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_153_if_there_is_consonant_consonant_replace_that_with_n ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _n $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_154_if_the_word_starts_with_consonant_vowel_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_154_if_the_word_starts_with_consonant_vowel_replace_that_with_t ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _t (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_155_if_there_is_t_replace_that_with_x_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_155_if_there_is_t_replace_that_with_x_w ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _x _w) $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _x _w) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _x _w) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _x) _w) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _x _rempty) _w) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _x _w) _t) (_rconcat _a _x) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.86705827713013
        },
        "re2_train_156_if_the_word_ends_with_vowel_any_letter_replace_that_with_n_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_156_if_the_word_ends_with_vowel_any_letter_replace_that_with_n_h ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat _n _h) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_157_if_the_word_starts_with_any_letter_vowel_replace_that_with_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_157_if_the_word_starts_with_any_letter_vowel_replace_that_with_o ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _o (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_158_if_the_word_ends_with_consonant_consonant_add_d_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_158_if_the_word_ends_with_consonant_consonant_add_d_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _d) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_159_if_there_is_t_replace_that_with_f_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_159_if_there_is_t_replace_that_with_f_v ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _f _v) $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f _v) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _f _v) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f _v) _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f (_rconcat _v _rempty)) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f _v) _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.234421730041504
        },
        "re2_train_160_if_the_word_starts_with_any_letter_vowel_replace_that_with_r_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_160_if_the_word_starts_with_any_letter_vowel_replace_that_with_r_x ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _r _x) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_161_if_there_is_o_replace_that_with_c_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_161_if_there_is_o_replace_that_with_c_g ((lambda (_rflatten (map (lambda (if (_rmatch _o $0) (_rconcat _c _g) $0)) (_rsplit _o $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _g) _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _g) _o))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 68.80766320228577
        },
        "re2_train_162_if_there_is_m_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_162_if_there_is_m_remove_that ((lambda (_rflatten (map (lambda (if (_rmatch _m $0) _rempty $0)) (_rsplit _m $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _rempty _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _rempty) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _rempty (_rconcat _rempty _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) _rempty _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _rempty _m)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 46.79876756668091
        },
        "re2_train_163_if_there_is_vowel_replace_that_with_n_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_163_if_there_is_vowel_replace_that_with_n_c ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _n _c) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_164_if_the_word_starts_with_consonant_replace_that_with_i_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_164_if_the_word_starts_with_consonant_replace_that_with_i_q ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _i _q) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_165_if_there_is_vowel_vowel_replace_that_with_d_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_165_if_there_is_vowel_vowel_replace_that_with_d_c ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _d _c) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_166_if_the_word_ends_with_any_letter_consonant_add_r_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_166_if_the_word_ends_with_any_letter_consonant_add_r_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _r (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_167_if_there_is_l_replace_that_with_v_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_167_if_there_is_l_replace_that_with_v_q ((lambda (_rflatten (map (lambda (if (_rmatch _l $0) (_rconcat _v _q) $0)) (_rsplit _l $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _v _q) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 366.78414130210876
        },
        "re2_train_168_if_the_word_ends_with_consonant_consonant_replace_that_with_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_168_if_the_word_ends_with_consonant_consonant_replace_that_with_r ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _r (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_169_if_the_word_starts_with_any_letter_replace_that_with_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_169_if_the_word_starts_with_any_letter_replace_that_with_b ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) _b (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (_rappend _rempty (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 5.776769161224365
        },
        "re2_train_170_if_there_is_consonant_replace_that_with_b_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_170_if_there_is_consonant_replace_that_with_b_q ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _b _q) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_171_if_there_is_vowel_add_g_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_171_if_there_is_vowel_add_g_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _g $0) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_172_if_there_is_c_replace_that_with_k_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_172_if_there_is_c_replace_that_with_k_b ((lambda (_rflatten (map (lambda (if (_rmatch _c $0) (_rconcat _k _b) $0)) (_rsplit _c $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _b) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _k _b) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _b) _c))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _b) (_rconcat _c _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _b) _c))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.809974670410156
        },
        "re2_train_173_if_the_word_starts_with_any_letter_vowel_replace_that_with_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_173_if_the_word_starts_with_any_letter_vowel_replace_that_with_y ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _y (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_174_if_the_word_ends_with_consonant_replace_that_with_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_174_if_the_word_ends_with_consonant_replace_that_with_y ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) _y (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_175_if_the_word_ends_with_vowel_consonant_replace_that_with_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_175_if_the_word_ends_with_vowel_consonant_replace_that_with_h ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _h (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_176_if_there_is_n_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_176_if_there_is_n_replace_that_with_q ((lambda (_rflatten (map (lambda (if (_rmatch _n $0) _q $0)) (_rsplit _n $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _q _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _q _rempty) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _q) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) _q _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (if (_rmatch _e (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 $0) _q _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.450496196746826
        },
        "re2_train_177_if_there_is_e_replace_that_with_t_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_177_if_there_is_e_replace_that_with_t_u ((lambda (_rflatten (map (lambda (if (_rmatch _e $0) (_rconcat _t _u) $0)) (_rsplit _e $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_178_if_there_is_vowel_replace_that_with_n_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_178_if_there_is_vowel_replace_that_with_n_p ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _n _p) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_179_if_there_is_vowel_add_h_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_179_if_there_is_vowel_add_h_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _h $0) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_180_if_there_is_any_letter_l_replace_that_with_k_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_180_if_there_is_any_letter_l_replace_that_with_k_t ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _l) $0) (_rconcat _k _t) $0)) (_rsplit (_rconcat _rdot _l) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_181_if_the_word_ends_with_consonant_replace_that_with_f_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_181_if_the_word_ends_with_consonant_replace_that_with_f_w ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _f _w) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _w _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _f _a)))) _w $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _f _v)))) _w $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _f _o)))) _w $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _f _m)))) _w $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.220425605773926
        },
        "re2_train_182_if_the_word_starts_with_consonant_vowel_replace_that_with_p_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_182_if_the_word_starts_with_consonant_vowel_replace_that_with_p_i ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _p _i) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_183_if_the_word_starts_with_any_letter_replace_that_with_r_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_183_if_the_word_starts_with_any_letter_replace_that_with_r_m ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _r _m) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _m _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _r _m) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _m _r) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _r _m) (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _r (cdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _m _i))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 30.907891988754272
        },
        "re2_train_184_if_the_word_starts_with_any_letter_replace_that_with_b_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_184_if_the_word_starts_with_any_letter_replace_that_with_b_w ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _b _w) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _w _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _b _w)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w (_rconcat _b _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w (_rconcat _rempty _b)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 12.177756547927856
        },
        "re2_train_185_if_the_word_ends_with_consonant_replace_that_with_a_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_185_if_the_word_ends_with_consonant_replace_that_with_a_o ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _a _o) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _a _o)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _a _o)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _a (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _o $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _a _o)) _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 6.009844541549683
        },
        "re2_train_187_if_there_is_consonant_replace_that_with_m_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_187_if_there_is_consonant_replace_that_with_m_b ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _m _b) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_188_if_there_is_consonant_replace_that_with_g_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_188_if_there_is_consonant_replace_that_with_g_o ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _g _o) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_189_if_there_is_consonant_e_replace_that_with_b_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_189_if_there_is_consonant_e_replace_that_with_b_l ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0) (_rconcat _b _l) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_190_if_the_word_ends_with_any_letter_any_letter_add_f_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_190_if_the_word_ends_with_any_letter_any_letter_add_f_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _rdot) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat (_rtail (_rsplit (_rconcat _rdot _rdot) $0)) _f) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _f (_rsplit _j $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (_rappend _r (#(lambda (_rsplit _rdot $0)) $0))) _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 17.797893047332764
        },
        "re2_train_191_if_the_word_starts_with_any_letter_add_d_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_191_if_the_word_starts_with_any_letter_add_d_after_that ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat (car (_rsplit _rdot $0)) _d) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _d (car (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _d (car (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _d (car (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _d (car (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _d (car (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 27.732081413269043
        },
        "re2_train_192_if_there_is_b_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_192_if_there_is_b_replace_that_with_q ((lambda (_rflatten (map (lambda (if (_rmatch _b $0) _q $0)) (_rsplit _b $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _q _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _q _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _q _rempty) _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _q) _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _q (_rconcat _b _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 30.506012439727783
        },
        "re2_train_193_if_the_word_starts_with_consonant_vowel_replace_that_with_g_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_193_if_the_word_starts_with_consonant_vowel_replace_that_with_g_h ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _g _h) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_194_if_the_word_starts_with_any_letter_vowel_replace_that_with_r_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_194_if_the_word_starts_with_any_letter_vowel_replace_that_with_r_r ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _r _r) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_195_if_there_is_m_any_letter_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_195_if_there_is_m_any_letter_replace_that_with_j ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _m _rdot) $0) _j $0)) (_rsplit (_rconcat _m _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_196_if_there_is_n_add_e_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_196_if_there_is_n_add_e_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _n $0) (_rconcat $0 _e) $0)) (_rsplit _n $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _e) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _e) _n))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _e) (_rconcat _n _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) (_rconcat _n _e) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (if (_rmatch _e (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 $0) (_rconcat _n _e) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 65.9596836566925
        },
        "re2_train_197_if_there_is_any_letter_c_add_k_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_197_if_there_is_any_letter_c_add_k_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _c) $0) (_rconcat $0 _k) $0)) (_rsplit (_rconcat _rdot _c) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_198_if_the_word_starts_with_vowel_replace_that_with_q_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_198_if_the_word_starts_with_vowel_replace_that_with_q_b ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _q _b) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_199_if_there_is_d_add_i_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_199_if_there_is_d_add_i_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _d $0) (_rconcat $0 _i) $0)) (_rsplit _d $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _i) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 66.9523355960846
        },
        "re2_train_200_if_the_word_starts_with_consonant_consonant_add_m_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_200_if_the_word_starts_with_consonant_consonant_add_m_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _m) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_201_if_there_is_any_letter_consonant_replace_that_with_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_201_if_there_is_any_letter_consonant_replace_that_with_y ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _y $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_202_if_the_word_starts_with_any_letter_o_add_y_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_202_if_the_word_starts_with_any_letter_o_add_y_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _o) (car (_rsplit (_rconcat _rdot _o) $0))) (_rconcat (car (_rsplit (_rconcat _rdot _o) $0)) _y) (car (_rsplit (_rconcat _rdot _o) $0))) (cdr (_rsplit (_rconcat _rdot _o) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_203_if_the_word_starts_with_any_letter_replace_that_with_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_203_if_the_word_starts_with_any_letter_replace_that_with_f ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) _f (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _f _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _f (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _rempty _f) (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _f (cdr (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 15.615760564804077
        },
        "re2_train_204_if_the_word_starts_with_consonant_consonant_replace_that_with_a_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_204_if_the_word_starts_with_consonant_consonant_replace_that_with_a_c ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _a _c) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_205_if_there_is_consonant_replace_that_with_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_205_if_there_is_consonant_replace_that_with_p ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) _p $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_206_if_the_word_starts_with_any_letter_vowel_replace_that_with_h_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_206_if_the_word_starts_with_any_letter_vowel_replace_that_with_h_i ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _h _i) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_208_if_the_word_starts_with_any_letter_any_letter_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_208_if_the_word_starts_with_any_letter_any_letter_replace_that_with_w ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) _w (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _w (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _w _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit _rempty $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _rempty) _w _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _w (_rsplit _a (_rflatten (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 31.471954822540283
        },
        "re2_train_209_if_there_is_vowel_consonant_add_d_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_209_if_there_is_vowel_consonant_add_d_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat $0 _d) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_210_if_the_word_starts_with_consonant_replace_that_with_p_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_210_if_the_word_starts_with_consonant_replace_that_with_p_b ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _p _b) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_211_if_there_is_vowel_vowel_replace_that_with_g_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_211_if_there_is_vowel_vowel_replace_that_with_g_k ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _g _k) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_212_if_there_is_t_any_letter_replace_that_with_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_212_if_there_is_t_any_letter_replace_that_with_v ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _t _rdot) $0) _v $0)) (_rsplit (_rconcat _t _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_213_if_there_is_consonant_t_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_213_if_there_is_consonant_t_replace_that_with_x ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _t) $0) _x $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _t) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_214_if_the_word_ends_with_consonant_any_letter_replace_that_with_b_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_214_if_the_word_ends_with_consonant_any_letter_replace_that_with_b_h ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _b _h) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_215_if_the_word_ends_with_any_letter_consonant_replace_that_with_g_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_215_if_the_word_ends_with_any_letter_consonant_replace_that_with_g_l ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _g _l) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _g _l))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (_rsplit _s (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) _l $0)))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) _l $0) _rempty) (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) _l $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (_rsplit _s (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) _l $0)))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) _l $0) _o) (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) _l $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (_rsplit _s (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) _l $0)))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) _l $0) _y) (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) _l $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 37.28670620918274
        },
        "re2_train_216_if_the_word_ends_with_consonant_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_216_if_the_word_ends_with_consonant_replace_that_with_w ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) _w (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _w $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))))) _w $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _w (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _w $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _w))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.82509469985962
        },
        "re2_train_217_if_the_word_starts_with_any_letter_replace_that_with_y_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_217_if_the_word_starts_with_any_letter_replace_that_with_y_c ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _y _c) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _c _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _c _rempty) _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _c) _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _y _c) (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.834638595581055
        },
        "re2_train_218_if_there_is_vowel_vowel_add_o_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_218_if_there_is_vowel_vowel_add_o_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat $0 _o) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_219_if_there_is_any_letter_replace_that_with_y_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_219_if_there_is_any_letter_replace_that_with_y_t ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _y _t) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _t _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _t (_rconcat _rempty _y)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _t _y) _j _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _t _y) _y _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (_rsplit _s (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _t _y)))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _t _y) _y) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _t _y)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 29.65503740310669
        },
        "re2_train_220_if_there_is_any_letter_any_letter_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_220_if_there_is_any_letter_any_letter_replace_that_with_w ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _rdot) $0) _w $0)) (_rsplit (_rconcat _rdot _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_221_if_the_word_starts_with_consonant_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_221_if_the_word_starts_with_consonant_replace_that_with_q ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) _q (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_222_if_there_is_o_consonant_add_l_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_222_if_there_is_o_consonant_add_l_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _o (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat $0 _l) $0)) (_rsplit (_rconcat _o (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_223_if_there_is_any_letter_replace_that_with_n_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_223_if_there_is_any_letter_replace_that_with_n_i ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _n _i) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i (_rconcat _n _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i (_rconcat _rempty _n)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i _n) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i) _i _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 15.965328693389893
        },
        "re2_train_224_if_there_is_vowel_l_replace_that_with_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_224_if_there_is_vowel_l_replace_that_with_a ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _l) $0) _a $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _l) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_225_if_there_is_consonant_consonant_replace_that_with_o_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_225_if_there_is_consonant_consonant_replace_that_with_o_w ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _o _w) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_226_if_the_word_ends_with_vowel_any_letter_replace_that_with_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_226_if_the_word_ends_with_vowel_any_letter_replace_that_with_f ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) _f (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_228_if_there_is_consonant_vowel_add_n_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_228_if_there_is_consonant_vowel_add_n_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat $0 _n) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_229_if_there_is_any_letter_replace_that_with_w_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_229_if_there_is_any_letter_replace_that_with_w_t ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _w _t) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _t _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _t _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (_rsplit _rempty $0)) _t _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _h _s) _t _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0007412433624267578
        },
        "re2_train_230_if_there_is_m_replace_that_with_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_230_if_there_is_m_replace_that_with_l ((lambda (_rflatten (map (lambda (if (_rmatch _m $0) _l $0)) (_rsplit _m $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _l _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _l _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _l _m))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _l _rempty) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _l) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 30.5432550907135
        },
        "re2_train_231_if_there_is_vowel_consonant_add_a_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_231_if_there_is_vowel_consonant_add_a_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _a $0) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_232_if_there_is_consonant_replace_that_with_v_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_232_if_there_is_consonant_replace_that_with_v_h ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _v _h) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_233_if_there_is_any_letter_any_letter_replace_that_with_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_233_if_there_is_any_letter_any_letter_replace_that_with_d ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _rdot) $0) _d $0)) (_rsplit (_rconcat _rdot _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_234_if_there_is_r_vowel_add_d_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_234_if_there_is_r_vowel_add_d_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _r (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _d $0) $0)) (_rsplit (_rconcat _r (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_235_if_the_word_starts_with_consonant_vowel_replace_that_with_v_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_235_if_the_word_starts_with_consonant_vowel_replace_that_with_v_j ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _v _j) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_236_if_the_word_starts_with_consonant_add_t_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_236_if_the_word_starts_with_consonant_add_t_after_that ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)) _t) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_237_if_the_word_ends_with_any_letter_replace_that_with_i_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_237_if_the_word_ends_with_any_letter_replace_that_with_i_y ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _i _y) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _i _y)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i) _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _a) _i _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _y (_rsplit _a (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _n) _i _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 27.289851427078247
        },
        "re2_train_238_if_there_is_consonant_any_letter_replace_that_with_w_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_238_if_there_is_consonant_any_letter_replace_that_with_w_e ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0) (_rconcat _w _e) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_239_if_the_word_starts_with_consonant_vowel_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_239_if_the_word_starts_with_consonant_vowel_replace_that_with_j ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _j (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_240_if_there_is_consonant_a_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_240_if_there_is_consonant_a_replace_that_with_x ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _a) $0) _x $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _a) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_241_if_the_word_starts_with_consonant_replace_that_with_g_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_241_if_the_word_starts_with_consonant_replace_that_with_g_u ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _g _u) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _u (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _u _g)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 963.0466856956482
        },
        "re2_train_242_if_there_is_consonant_replace_that_with_f_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_242_if_there_is_consonant_replace_that_with_f_r ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _f _r) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_243_if_there_is_c_add_u_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_243_if_there_is_c_add_u_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _c $0) (_rconcat _u $0) $0)) (_rsplit _c $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_244_if_there_is_any_letter_replace_that_with_u_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_244_if_there_is_any_letter_replace_that_with_u_e ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _u _e) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _e _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _u _e)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda _e) (#(lambda (_rsplit _rdot $0)) $0))) _e _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda _s) (#(lambda (_rsplit _rdot $0)) $0))) _e _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda _u) (#(lambda (_rsplit _rdot $0)) $0))) _e _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 27.4407057762146
        },
        "re2_train_245_if_there_is_any_letter_any_letter_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_245_if_there_is_any_letter_any_letter_replace_that_with_j ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _rdot) $0) _j $0)) (_rsplit (_rconcat _rdot _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_246_if_there_is_t_replace_that_with_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_246_if_there_is_t_replace_that_with_n ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) _n $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _n _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _n _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _n _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _rempty) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _n) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 30.1479332447052
        },
        "re2_train_247_if_the_word_ends_with_consonant_any_letter_replace_that_with_l_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_247_if_the_word_ends_with_consonant_any_letter_replace_that_with_l_g ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _l _g) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_248_if_the_word_starts_with_any_letter_vowel_replace_that_with_x_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_248_if_the_word_starts_with_any_letter_vowel_replace_that_with_x_g ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _x _g) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_249_if_there_is_vowel_s_add_m_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_249_if_there_is_vowel_s_add_m_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _s) $0) (_rconcat $0 _m) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _s) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_250_if_there_is_s_add_x_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_250_if_there_is_s_add_x_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat $0 _x) $0)) (_rsplit _s $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _s _x) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 592.1155686378479
        },
        "re2_train_251_if_there_is_consonant_add_m_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_251_if_there_is_consonant_add_m_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat $0 _m) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_252_if_there_is_e_replace_that_with_i_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_252_if_there_is_e_replace_that_with_i_m ((lambda (_rflatten (map (lambda (if (_rmatch _e $0) (_rconcat _i _m) $0)) (_rsplit _e $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _m) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _i) _m) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _m) (_rconcat _rempty _e)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) (_rconcat _i _m) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _m) _e)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 62.56547784805298
        },
        "re2_train_253_if_there_is_o_any_letter_replace_that_with_f_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_253_if_there_is_o_any_letter_replace_that_with_f_q ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _o _rdot) $0) (_rconcat _f _q) $0)) (_rsplit (_rconcat _o _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_254_if_the_word_starts_with_any_letter_vowel_replace_that_with_m_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_254_if_the_word_starts_with_any_letter_vowel_replace_that_with_m_d ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _m _d) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_255_if_the_word_ends_with_e_any_letter_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_255_if_the_word_ends_with_e_any_letter_replace_that_with_t ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _e _rdot) (_rtail (_rsplit (_rconcat _e _rdot) $0))) _t (_rtail (_rsplit (_rconcat _e _rdot) $0))) (_rrevcdr (_rsplit (_rconcat _e _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_256_if_the_word_ends_with_consonant_replace_that_with_w_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_256_if_the_word_ends_with_consonant_replace_that_with_w_i ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _w _i) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_257_if_there_is_vowel_replace_that_with_b_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_257_if_there_is_vowel_replace_that_with_b_y ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _b _y) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_258_if_there_is_consonant_add_s_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_258_if_there_is_consonant_add_s_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat $0 _s) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_259_if_the_word_starts_with_consonant_replace_that_with_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_259_if_the_word_starts_with_consonant_replace_that_with_o ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) _o (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_260_if_there_is_any_letter_vowel_add_i_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_260_if_there_is_any_letter_vowel_add_i_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _i $0) $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_261_if_the_word_starts_with_any_letter_any_letter_add_y_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_261_if_the_word_starts_with_any_letter_any_letter_add_y_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat _y (car (_rsplit (_rconcat _rdot _rdot) $0))) (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _y (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _y (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _y (_rsplit _a $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _y (_rsplit _a (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.853341341018677
        },
        "re2_train_262_if_there_is_consonant_consonant_replace_that_with_r_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_262_if_there_is_consonant_consonant_replace_that_with_r_y ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _r _y) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_263_if_there_is_vowel_replace_that_with_q_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_263_if_there_is_vowel_replace_that_with_q_f ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _q _f) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_264_if_the_word_starts_with_any_letter_replace_that_with_k_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_264_if_the_word_starts_with_any_letter_replace_that_with_k_e ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _k _e) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _k))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _k _e) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _k _e) (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _k (_rsplit _a (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _rempty)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _k (_rsplit _a (_rflatten (cons _e (cdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 30.95967960357666
        },
        "re2_train_265_if_the_word_starts_with_any_letter_replace_that_with_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_265_if_the_word_starts_with_any_letter_replace_that_with_h ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) _h (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _h (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _h (cdr (_rsplit _rempty $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _h (_rsplit _a (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _rempty)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.170363664627075
        },
        "re2_train_266_if_the_word_starts_with_consonant_replace_that_with_w_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_266_if_the_word_starts_with_consonant_replace_that_with_w_v ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _w _v) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_267_if_the_word_ends_with_consonant_consonant_add_e_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_267_if_the_word_ends_with_consonant_consonant_add_e_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _e) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_268_if_the_word_starts_with_any_letter_replace_that_with_x_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_268_if_the_word_starts_with_any_letter_replace_that_with_x_e ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _x _e) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _x))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _e _x))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _x))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e (_rconcat _rempty _x)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _a $0)) _e _x))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 12.208161354064941
        },
        "re2_train_269_if_there_is_r_replace_that_with_m_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_269_if_there_is_r_replace_that_with_m_l ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) (_rconcat _m _l) $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _l) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _m _l) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _l) _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m (_rconcat _rempty _l)) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _l) _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 24.54025650024414
        },
        "re2_train_270_if_there_is_r_replace_that_with_e_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_270_if_there_is_r_replace_that_with_e_d ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) (_rconcat _e _d) $0)) (_rsplit _r $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_271_if_there_is_c_add_e_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_271_if_there_is_c_add_e_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _c $0) (_rconcat $0 _e) $0)) (_rsplit _c $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _e) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 375.9079005718231
        },
        "re2_train_272_if_the_word_starts_with_consonant_replace_that_with_d_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_272_if_the_word_starts_with_consonant_replace_that_with_d_g ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _d _g) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_273_if_there_is_vowel_any_letter_add_i_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_273_if_there_is_vowel_any_letter_add_i_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) (_rconcat _i $0) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_274_if_there_is_consonant_vowel_add_x_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_274_if_there_is_consonant_vowel_add_x_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _x $0) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_275_if_the_word_ends_with_consonant_replace_that_with_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_275_if_the_word_ends_with_consonant_replace_that_with_r ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) _r (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _rempty _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _r $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _rempty)) _r $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _r (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _r $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 30.18467402458191
        },
        "re2_train_276_if_the_word_starts_with_any_letter_replace_that_with_m_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_276_if_the_word_starts_with_any_letter_replace_that_with_m_i ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _m _i) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i (_rconcat _m _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i (_rconcat _rempty _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _m (_rsplit _a (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _rempty)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _m (_rsplit _a (_rflatten (cons _i (cdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 15.671079158782959
        },
        "re2_train_277_if_there_is_i_any_letter_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_277_if_there_is_i_any_letter_replace_that_with_q ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _i _rdot) $0) _q $0)) (_rsplit (_rconcat _i _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_278_if_there_is_any_letter_consonant_replace_that_with_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_278_if_there_is_any_letter_consonant_replace_that_with_k ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _k $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_279_if_the_word_ends_with_consonant_replace_that_with_o_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_279_if_the_word_ends_with_consonant_replace_that_with_o_c ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _o _c) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _c _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _o)) _c $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _rempty (_rconcat _o _c)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _o (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _c $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.30141854286194
        },
        "re2_train_280_if_there_is_any_letter_add_q_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_280_if_there_is_any_letter_add_q_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _q $0) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _q (_rconcat $0 _rempty))) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda (_rconcat _q $0)) (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (_rsplit _a (_rflatten (map (lambda (_rconcat _q $0)) (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 27.348960876464844
        },
        "re2_train_281_if_there_is_consonant_vowel_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_281_if_there_is_consonant_vowel_replace_that_with_j ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _j $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_282_if_there_is_vowel_vowel_add_q_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_282_if_there_is_vowel_vowel_add_q_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _q $0) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_283_if_there_is_any_letter_consonant_replace_that_with_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_283_if_there_is_any_letter_consonant_replace_that_with_f ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _f $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_285_if_there_is_any_letter_consonant_replace_that_with_j_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_285_if_there_is_any_letter_consonant_replace_that_with_j_t ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _j _t) $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_286_if_the_word_starts_with_vowel_any_letter_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_286_if_the_word_starts_with_vowel_any_letter_replace_that_with_w ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) _w (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_287_if_the_word_ends_with_consonant_consonant_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_287_if_the_word_ends_with_consonant_consonant_replace_that_with_x ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _x (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_288_if_the_word_ends_with_consonant_consonant_replace_that_with_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_288_if_the_word_ends_with_consonant_consonant_replace_that_with_a ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _a (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_289_if_the_word_starts_with_any_letter_replace_that_with_j_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_289_if_the_word_starts_with_any_letter_replace_that_with_j_o ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _j _o) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _o _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o (_rconcat _j _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o (_rconcat _rempty _j)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _a $0)) _o _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 18.471016883850098
        },
        "re2_train_290_if_the_word_ends_with_consonant_any_letter_replace_that_with_e_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_290_if_the_word_ends_with_consonant_any_letter_replace_that_with_e_x ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _e _x) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_291_if_there_is_any_letter_t_add_g_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_291_if_there_is_any_letter_t_add_g_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _t) $0) (_rconcat _g $0) $0)) (_rsplit (_rconcat _rdot _t) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_292_if_the_word_ends_with_vowel_replace_that_with_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_292_if_the_word_ends_with_vowel_replace_that_with_y ((lambda (_rflatten (_rappend (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rtail (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) _y (_rtail (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rrevcdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_293_if_the_word_ends_with_consonant_add_j_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_293_if_the_word_ends_with_consonant_add_j_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)) _j) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _rempty $0) _j $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _a $0) _j $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _i $0) _j $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _r $0) _j $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _j $0) _j $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 27.737646341323853
        },
        "re2_train_294_if_the_word_starts_with_consonant_consonant_replace_that_with_e_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_294_if_the_word_starts_with_consonant_consonant_replace_that_with_e_i ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _e _i) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_295_if_the_word_starts_with_consonant_any_letter_replace_that_with_p_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_295_if_the_word_starts_with_consonant_any_letter_replace_that_with_p_y ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _p _y) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_296_if_there_is_s_replace_that_with_t_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_296_if_there_is_s_replace_that_with_t_q ((lambda (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat _t _q) $0)) (_rsplit _s $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t _q) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 295.076162815094
        },
        "re2_train_297_if_the_word_starts_with_consonant_replace_that_with_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_297_if_the_word_starts_with_consonant_replace_that_with_c ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) _c (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_298_if_the_word_ends_with_consonant_add_p_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_298_if_the_word_ends_with_consonant_add_p_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)) _p) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _p $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _rempty $0) _p $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _e $0) _p $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _v $0) _p $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _f $0) _p $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 30.19278383255005
        },
        "re2_train_299_if_there_is_any_letter_replace_that_with_g_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_299_if_there_is_any_letter_replace_that_with_g_i ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _g _i) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _g _i)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i _g) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i) _i _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda _i) (#(lambda (_rsplit _rdot $0)) $0))) _i _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.581117868423462
        },
        "re2_train_300_if_there_is_n_replace_that_with_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_300_if_there_is_n_replace_that_with_g ((lambda (_rflatten (map (lambda (if (_rmatch _n $0) _g $0)) (_rsplit _n $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _g _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _g _rempty) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _g) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _g (_rconcat _n _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _g (_rconcat _rempty _n)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 46.74954700469971
        },
        "re2_train_301_if_there_is_t_vowel_replace_that_with_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_301_if_there_is_t_vowel_replace_that_with_d ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _t (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _d $0)) (_rsplit (_rconcat _t (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_302_if_there_is_vowel_add_v_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_302_if_there_is_vowel_add_v_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat $0 _v) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_303_if_there_is_t_consonant_replace_that_with_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_303_if_there_is_t_consonant_replace_that_with_n ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _t (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _n $0)) (_rsplit (_rconcat _t (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_304_if_there_is_any_letter_a_add_y_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_304_if_there_is_any_letter_a_add_y_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _a) $0) (_rconcat _y $0) $0)) (_rsplit (_rconcat _rdot _a) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_305_if_there_is_any_letter_vowel_replace_that_with_e_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_305_if_there_is_any_letter_vowel_replace_that_with_e_s ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _e _s) $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_306_if_the_word_ends_with_vowel_any_letter_replace_that_with_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_306_if_the_word_ends_with_vowel_any_letter_replace_that_with_n ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) _n (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_307_if_the_word_ends_with_any_letter_replace_that_with_o_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_307_if_the_word_ends_with_any_letter_replace_that_with_o_m ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _o _m) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _o _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _o _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _o _m)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (_rsplit _rempty $0)) (_rconcat _o _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0009050369262695312
        },
        "re2_train_308_if_there_is_any_letter_vowel_replace_that_with_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_308_if_there_is_any_letter_vowel_replace_that_with_b ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _b $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_309_if_the_word_ends_with_consonant_replace_that_with_n_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_309_if_the_word_ends_with_consonant_replace_that_with_n_a ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _n _a) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _a _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _rempty (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _n)) _a $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _i (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _n)) _a $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _j (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _n)) _a $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _n (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) (_rflatten (_rappend _a (_rsplit _rempty $0))))))) _a $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 37.358054399490356
        },
        "re2_train_310_if_the_word_starts_with_consonant_add_x_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_310_if_the_word_starts_with_consonant_add_x_after_that ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)) _x) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_311_if_there_is_g_replace_that_with_k_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_311_if_there_is_g_replace_that_with_k_a ((lambda (_rflatten (map (lambda (if (_rmatch _g $0) (_rconcat _k _a) $0)) (_rsplit _g $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _a) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k (_rconcat _rempty _a)) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _k _a)) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) (_rconcat _k _a) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _a) _g)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 37.65274715423584
        },
        "re2_train_312_if_there_is_any_letter_replace_that_with_h_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_312_if_there_is_any_letter_replace_that_with_h_x ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _h _x) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _x _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _x)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _x) _x _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda _n) (#(lambda (_rsplit _rdot $0)) $0))) _x _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda _x) (#(lambda (_rsplit _rdot $0)) $0))) _x _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.581944704055786
        },
        "re2_train_314_if_the_word_starts_with_vowel_add_l_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_314_if_the_word_starts_with_vowel_add_l_after_that ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)) _l) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_315_if_there_is_h_replace_that_with_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_315_if_there_is_h_replace_that_with_y ((lambda (_rflatten (map (lambda (if (_rmatch _h $0) _y $0)) (_rsplit _h $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _y _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _y _h))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _y) _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _y _rempty) _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _y (_rconcat _h _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 46.82144522666931
        },
        "re2_train_316_if_the_word_starts_with_any_letter_replace_that_with_r_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_316_if_the_word_starts_with_any_letter_replace_that_with_r_r ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _r _r) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _r) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _r _r) (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _r (cdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _i))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _r (cdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _o))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 27.311420440673828
        },
        "re2_train_317_if_the_word_ends_with_vowel_consonant_replace_that_with_h_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_317_if_the_word_ends_with_vowel_consonant_replace_that_with_h_t ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _h _t) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_318_if_there_is_u_any_letter_replace_that_with_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_318_if_there_is_u_any_letter_replace_that_with_e ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _u _rdot) $0) _e $0)) (_rsplit (_rconcat _u _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_319_if_there_is_g_replace_that_with_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_319_if_there_is_g_replace_that_with_c ((lambda (_rflatten (map (lambda (if (_rmatch _g $0) _c $0)) (_rsplit _g $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _c _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 935.7391655445099
        },
        "re2_train_320_if_there_is_any_letter_vowel_add_s_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_320_if_there_is_any_letter_vowel_add_s_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _s $0) $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_321_if_the_word_ends_with_consonant_consonant_add_j_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_321_if_the_word_ends_with_consonant_consonant_add_j_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _j) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_322_if_the_word_starts_with_any_letter_replace_that_with_g_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_322_if_the_word_starts_with_any_letter_replace_that_with_g_b ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _g _b) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _b _rempty) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _b) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _g))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _g _b) (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 30.191354513168335
        },
        "re2_train_323_if_the_word_starts_with_any_letter_consonant_add_x_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_323_if_the_word_starts_with_any_letter_consonant_add_x_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _x) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_324_if_the_word_starts_with_vowel_any_letter_replace_that_with_i_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_324_if_the_word_starts_with_vowel_any_letter_replace_that_with_i_s ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat _i _s) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_325_if_there_is_t_replace_that_with_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_325_if_there_is_t_replace_that_with_i ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) _i $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _i _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _i _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _rempty) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _i) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _i _rempty) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.82098865509033
        },
        "re2_train_326_if_the_word_starts_with_any_letter_vowel_replace_that_with_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_326_if_the_word_starts_with_any_letter_vowel_replace_that_with_p ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _p (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_327_if_the_word_starts_with_consonant_replace_that_with_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_327_if_the_word_starts_with_consonant_replace_that_with_i ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) _i (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _i (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _i _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _a $0)) _i _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 6.102388381958008
        },
        "re2_train_328_if_there_is_consonant_consonant_add_d_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_328_if_there_is_consonant_consonant_add_d_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _d $0) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_329_if_there_is_consonant_replace_that_with_w_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_329_if_there_is_consonant_replace_that_with_w_i ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _w _i) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_330_if_there_is_t_replace_that_with_l_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_330_if_there_is_t_replace_that_with_l_p ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _l _p) $0)) (_rsplit _t $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_331_if_the_word_ends_with_consonant_replace_that_with_o_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_331_if_the_word_ends_with_consonant_replace_that_with_o_g ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _o _g) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _g _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _o _g)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _o _g)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _o (_rconcat _g _rempty))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (_rsplit _s (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _o _g))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _o _g)) _y) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _o _g))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 27.726195573806763
        },
        "re2_train_332_if_there_is_a_replace_that_with_u_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_332_if_there_is_a_replace_that_with_u_c ((lambda (_rflatten (map (lambda (if (_rmatch _a $0) (_rconcat _u _c) $0)) (_rsplit _a $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _u _c) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _u _c) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _u _c) _a))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _u) _c) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 60.958887815475464
        },
        "re2_train_333_if_the_word_starts_with_vowel_replace_that_with_i_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_333_if_the_word_starts_with_vowel_replace_that_with_i_d ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _i _d) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_334_if_the_word_starts_with_consonant_any_letter_replace_that_with_r_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_334_if_the_word_starts_with_consonant_any_letter_replace_that_with_r_d ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _r _d) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_335_if_there_is_consonant_i_replace_that_with_w_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_335_if_there_is_consonant_i_replace_that_with_w_l ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _i) $0) (_rconcat _w _l) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _i) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_336_if_there_is_vowel_any_letter_replace_that_with_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_336_if_there_is_vowel_any_letter_replace_that_with_y ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) _y $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_337_if_the_word_ends_with_vowel_any_letter_add_m_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_337_if_the_word_ends_with_vowel_any_letter_add_m_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)) _m) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_338_if_the_word_starts_with_consonant_replace_that_with_w_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_338_if_the_word_starts_with_consonant_replace_that_with_w_x ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _w _x) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_339_if_the_word_ends_with_consonant_double_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_339_if_the_word_ends_with_consonant_double_that ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_340_if_the_word_starts_with_consonant_consonant_add_y_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_340_if_the_word_starts_with_consonant_consonant_add_y_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _y) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_341_if_the_word_starts_with_consonant_any_letter_replace_that_with_e_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_341_if_the_word_starts_with_consonant_any_letter_replace_that_with_e_a ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _e _a) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _a _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _a _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _a _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 (_rconcat _rempty _a) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (_rflatten (_rsplit _a $0)) _a _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 18.477559089660645
        },
        "re2_train_342_if_there_is_consonant_replace_that_with_y_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_342_if_there_is_consonant_replace_that_with_y_y ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _y _y) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_343_if_the_word_ends_with_consonant_replace_that_with_v_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_343_if_the_word_ends_with_consonant_replace_that_with_v_c ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _v _c) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _c _v))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _c _v))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _c _v))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _c _rempty) _c _v))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _c _v) _c _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 24.600306272506714
        },
        "re2_train_344_if_the_word_ends_with_any_letter_add_q_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_344_if_the_word_ends_with_any_letter_add_q_after_that ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat (_rtail (_rsplit _rdot $0)) _q) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _q (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _a $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _r $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _b $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 6.105453968048096
        },
        "re2_train_345_if_there_is_consonant_vowel_replace_that_with_h_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_345_if_there_is_consonant_vowel_replace_that_with_h_e ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _h _e) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_346_if_there_is_l_vowel_replace_that_with_p_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_346_if_there_is_l_vowel_replace_that_with_p_f ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _l (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _p _f) $0)) (_rsplit (_rconcat _l (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_347_if_the_word_starts_with_vowel_consonant_replace_that_with_q_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_347_if_the_word_starts_with_vowel_consonant_replace_that_with_q_f ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _q _f) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_348_if_there_is_n_consonant_replace_that_with_q_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_348_if_there_is_n_consonant_replace_that_with_q_o ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _n (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _q _o) $0)) (_rsplit (_rconcat _n (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_349_if_the_word_starts_with_any_letter_consonant_replace_that_with_y_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_349_if_the_word_starts_with_any_letter_consonant_replace_that_with_y_m ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _y _m) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_350_if_the_word_starts_with_consonant_replace_that_with_n_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_350_if_the_word_starts_with_consonant_replace_that_with_n_t ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _n _t) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_351_if_there_is_g_add_w_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_351_if_there_is_g_add_w_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _g $0) (_rconcat _w $0) $0)) (_rsplit _g $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w _g) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 120.73224329948425
        },
        "re2_train_352_if_the_word_starts_with_consonant_any_letter_replace_that_with_v_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_352_if_the_word_starts_with_consonant_any_letter_replace_that_with_v_d ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _v _d) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_353_if_there_is_vowel_replace_that_with_u_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_353_if_there_is_vowel_replace_that_with_u_q ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _u _q) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_354_if_the_word_starts_with_consonant_replace_that_with_i_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_354_if_the_word_starts_with_consonant_replace_that_with_i_s ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _i _s) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _s _rempty) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) _s _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _i)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _i (_rsplit _a (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _rempty)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.913284063339233
        },
        "re2_train_355_if_the_word_starts_with_any_letter_replace_that_with_g_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_355_if_the_word_starts_with_any_letter_replace_that_with_g_l ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _g _l) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _l _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _l _g))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _l _g))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _i (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _l _g))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _l _g)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.1954128742218
        },
        "re2_train_356_if_the_word_starts_with_any_letter_replace_that_with_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_356_if_the_word_starts_with_any_letter_replace_that_with_m ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) _m (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _m _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _m _rempty))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) _m _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _m _rempty)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 17.969382286071777
        },
        "re2_train_357_if_there_is_i_replace_that_with_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_357_if_there_is_i_replace_that_with_m ((lambda (_rflatten (map (lambda (if (_rmatch _i $0) _m $0)) (_rsplit _i $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _m _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _m _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _rempty) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _m) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _m) _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.299904346466064
        },
        "re2_train_358_if_there_is_any_letter_replace_that_with_j_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_358_if_there_is_any_letter_replace_that_with_j_u ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _j _u) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _u _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 (_rconcat _j _u) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _u) _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _rempty (_rconcat _j _u)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _j _u)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 29.832335710525513
        },
        "re2_train_359_if_there_is_vowel_replace_that_with_n_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_359_if_there_is_vowel_replace_that_with_n_k ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _n _k) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_360_if_there_is_s_replace_that_with_d_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_360_if_there_is_s_replace_that_with_d_u ((lambda (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat _d _u) $0)) (_rsplit _s $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _u) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _u) _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _u) _s)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 52.84613084793091
        },
        "re2_train_361_if_the_word_starts_with_any_letter_consonant_replace_that_with_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_361_if_the_word_starts_with_any_letter_consonant_replace_that_with_o ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _o (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_362_if_there_is_consonant_consonant_replace_that_with_n_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_362_if_there_is_consonant_consonant_replace_that_with_n_c ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _n _c) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_364_if_the_word_ends_with_s_replace_that_with_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_364_if_the_word_ends_with_s_replace_that_with_y ((lambda (_rflatten (_rappend (if (_rmatch _s (_rtail (_rsplit _s $0))) _y (_rtail (_rsplit _s $0))) (_rrevcdr (_rsplit _s $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _y) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (cdr (#(lambda (_rsplit _rdot $0)) $0)))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _y) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (_rsplit _rempty $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _y) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (_rsplit _s $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _y) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _rdot (_rtail (_rsplit _s $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _y) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 133.37091660499573
        },
        "re2_train_365_if_there_is_vowel_consonant_replace_that_with_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_365_if_there_is_vowel_consonant_replace_that_with_n ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _n $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_366_if_there_is_s_replace_that_with_p_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_366_if_there_is_s_replace_that_with_p_t ((lambda (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat _p _t) $0)) (_rsplit _s $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _p _t) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _p _t) _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _p _t) _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 70.21256804466248
        },
        "re2_train_367_if_the_word_ends_with_consonant_replace_that_with_i_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_367_if_the_word_ends_with_consonant_replace_that_with_i_u ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _i _u) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _rempty (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)) _u $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _a (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)) _u $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _i (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)) _u $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _j (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)) _u $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _t (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)) _u $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 46.648462533950806
        },
        "re2_train_368_if_the_word_starts_with_consonant_any_letter_add_s_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_368_if_the_word_starts_with_consonant_any_letter_add_s_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _s (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_369_if_the_word_ends_with_consonant_consonant_add_c_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_369_if_the_word_ends_with_consonant_consonant_add_c_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _c) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_370_if_the_word_starts_with_any_letter_vowel_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_370_if_the_word_starts_with_any_letter_vowel_replace_that_with_x ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _x (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_371_if_there_is_p_replace_that_with_a_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_371_if_there_is_p_replace_that_with_a_w ((lambda (_rflatten (map (lambda (if (_rmatch _p $0) (_rconcat _a _w) $0)) (_rsplit _p $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _a _w) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _a _w) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _a) _w) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _a _rempty) _w) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _a _w) _rempty) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 46.68786072731018
        },
        "re2_train_372_if_there_is_g_replace_that_with_u_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_372_if_there_is_g_replace_that_with_u_f ((lambda (_rflatten (map (lambda (if (_rmatch _g $0) (_rconcat _u _f) $0)) (_rsplit _g $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _u _f) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _u _f) _g))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _u) _f) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 61.315595865249634
        },
        "re2_train_373_if_there_is_vowel_replace_that_with_v_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_373_if_there_is_vowel_replace_that_with_v_v ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _v _v) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_374_if_the_word_ends_with_consonant_consonant_replace_that_with_d_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_374_if_the_word_ends_with_consonant_consonant_replace_that_with_d_u ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _d _u) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_375_if_the_word_starts_with_any_letter_replace_that_with_a_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_375_if_the_word_starts_with_any_letter_replace_that_with_a_w ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _a _w) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _w _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _a))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _w _rempty) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w (_rconcat _rempty _a)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 18.47756552696228
        },
        "re2_train_376_if_there_is_vowel_any_letter_replace_that_with_w_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_376_if_there_is_vowel_any_letter_replace_that_with_w_t ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) (_rconcat _w _t) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_377_if_the_word_ends_with_any_letter_replace_that_with_r_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_377_if_the_word_ends_with_any_letter_replace_that_with_r_j ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _r _j) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _r _j)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rsplit _rempty (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rsplit _a (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rsplit _j (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.863593816757202
        },
        "re2_train_378_if_there_is_any_letter_replace_that_with_i_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_378_if_there_is_any_letter_replace_that_with_i_p ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _i _p) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _p _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _i _p)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i) _p _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda _p) (#(lambda (_rsplit _rdot $0)) $0))) _p _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _i $0)) (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda _p) (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.886101007461548
        },
        "re2_train_379_if_there_is_t_any_letter_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_379_if_there_is_t_any_letter_remove_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _t _rdot) $0) _rempty $0)) (_rsplit (_rconcat _t _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_380_if_there_is_consonant_add_y_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_380_if_there_is_consonant_add_y_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat $0 _y) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_381_if_there_is_any_letter_replace_that_with_n_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_381_if_there_is_any_letter_replace_that_with_n_g ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _n _g) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _g _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _n _g)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda _rdot) (#(lambda (_rsplit _rdot $0)) $0))) _g _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _g _n) _v _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _g _n) _v _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.89729619026184
        },
        "re2_train_382_if_the_word_starts_with_any_letter_add_o_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_382_if_the_word_starts_with_any_letter_add_o_after_that ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat (car (_rsplit _rdot $0)) _o) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o (car (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o (car (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o (car (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o (car (map (lambda $0) (_rsplit _rempty $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (car (#(lambda (_rsplit _rdot $0)) $0)) (_rsplit _a (_rflatten (cons _o (cdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 40.01794791221619
        },
        "re2_train_383_if_the_word_starts_with_vowel_replace_that_with_q_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_383_if_the_word_starts_with_vowel_replace_that_with_q_h ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _q _h) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_384_if_the_word_ends_with_vowel_consonant_replace_that_with_w_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_384_if_the_word_ends_with_vowel_consonant_replace_that_with_w_x ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _w _x) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_385_if_the_word_starts_with_any_letter_replace_that_with_x_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_385_if_the_word_starts_with_any_letter_replace_that_with_x_i ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _x _i) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _x))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _x))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _x))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) _i _x))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (if (_rmatch _e (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 $0) _i _x))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 12.030444383621216
        },
        "re2_train_386_if_there_is_any_letter_any_letter_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_386_if_there_is_any_letter_any_letter_replace_that_with_t ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _rdot) $0) _t $0)) (_rsplit (_rconcat _rdot _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_387_if_the_word_ends_with_consonant_any_letter_replace_that_with_x_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_387_if_the_word_ends_with_consonant_any_letter_replace_that_with_x_j ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _x _j) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_388_if_the_word_starts_with_consonant_replace_that_with_q_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_388_if_the_word_starts_with_consonant_replace_that_with_q_i ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _q _i) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _i _rempty) _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cons _j (cdr (#(lambda (_rsplit _rdot $0)) $0)))) _i _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cons _rdot (cdr (#(lambda (_rsplit _rdot $0)) $0)))) _i _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cons _q (cdr (#(lambda (_rsplit _rdot $0)) $0)))) _i _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 7.795795679092407
        },
        "re2_train_389_if_there_is_any_letter_any_letter_replace_that_with_t_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_389_if_there_is_any_letter_any_letter_replace_that_with_t_t ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _rdot) $0) (_rconcat _t _t) $0)) (_rsplit (_rconcat _rdot _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_390_if_the_word_ends_with_any_letter_any_letter_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_390_if_the_word_ends_with_any_letter_any_letter_replace_that_with_j ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _rdot) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) _j (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _j _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _rempty _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.00090789794921875
        },
        "re2_train_391_if_the_word_ends_with_any_letter_consonant_add_y_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_391_if_the_word_ends_with_any_letter_consonant_add_y_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _y) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_392_if_the_word_starts_with_any_letter_vowel_replace_that_with_v_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_392_if_the_word_starts_with_any_letter_vowel_replace_that_with_v_p ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _v _p) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_393_if_the_word_ends_with_consonant_replace_that_with_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_393_if_the_word_ends_with_consonant_replace_that_with_i ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) _i (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _i _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0008800029754638672
        },
        "re2_train_394_if_there_is_t_replace_that_with_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_394_if_there_is_t_replace_that_with_k ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) _k $0)) (_rsplit _t $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_395_if_the_word_starts_with_any_letter_replace_that_with_e_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_395_if_the_word_starts_with_any_letter_replace_that_with_e_s ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _e _s) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _s _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _e _s) (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 24.293964624404907
        },
        "re2_train_396_if_the_word_starts_with_vowel_add_g_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_396_if_the_word_starts_with_vowel_add_g_before_that ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _g (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_397_if_there_is_s_replace_that_with_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_397_if_there_is_s_replace_that_with_h ((lambda (_rflatten (map (lambda (if (_rmatch _s $0) _h $0)) (_rsplit _s $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _h _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _h _rempty) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _h) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) _h _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (if (_rmatch _e (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 $0) _h _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.54454040527344
        },
        "re2_train_398_if_the_word_starts_with_any_letter_vowel_add_q_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_398_if_the_word_starts_with_any_letter_vowel_add_q_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _q (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_399_if_there_is_any_letter_o_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_399_if_there_is_any_letter_o_replace_that_with_x ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _o) $0) _x $0)) (_rsplit (_rconcat _rdot _o) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_400_if_there_is_any_letter_vowel_add_p_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_400_if_there_is_any_letter_vowel_add_p_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _p $0) $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_401_if_there_is_r_add_q_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_401_if_there_is_r_add_q_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) (_rconcat $0 _q) $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _q) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _r _q) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _q) _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) (_rconcat _r _q) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (if (_rmatch _e (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 $0) (_rconcat _r _q) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.55081629753113
        },
        "re2_train_402_if_the_word_starts_with_vowel_replace_that_with_i_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_402_if_the_word_starts_with_vowel_replace_that_with_i_x ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _i _x) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_403_if_the_word_starts_with_vowel_replace_that_with_h_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_403_if_the_word_starts_with_vowel_replace_that_with_h_e ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _h _e) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_404_if_there_is_u_replace_that_with_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_404_if_there_is_u_replace_that_with_b ((lambda (_rflatten (map (lambda (if (_rmatch _u $0) _b $0)) (_rsplit _u $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _b _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _b (_rconcat _rempty _u)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _b (_rconcat _u _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) _b _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _b (_ror _j _u)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 27.74236273765564
        },
        "re2_train_405_if_there_is_vowel_vowel_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_405_if_there_is_vowel_vowel_replace_that_with_t ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _t $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_406_if_the_word_starts_with_any_letter_consonant_replace_that_with_l_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_406_if_the_word_starts_with_any_letter_consonant_replace_that_with_l_a ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _l _a) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_407_if_the_word_starts_with_any_letter_any_letter_replace_that_with_e_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_407_if_the_word_starts_with_any_letter_any_letter_replace_that_with_e_s ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat _e _s) (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _s _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _s _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _rempty) _s _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _e _s) (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _s (cdr (cdr (_rsplit _rempty $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 64.60968375205994
        },
        "re2_train_408_if_there_is_consonant_any_letter_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_408_if_there_is_consonant_any_letter_replace_that_with_t ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0) _t $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_409_if_there_is_consonant_any_letter_replace_that_with_x_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_409_if_there_is_consonant_any_letter_replace_that_with_x_p ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0) (_rconcat _x _p) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_410_if_there_is_consonant_add_n_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_410_if_there_is_consonant_add_n_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _n $0) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_411_if_there_is_r_replace_that_with_v_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_411_if_there_is_r_replace_that_with_v_a ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) (_rconcat _v _a) $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _v _a) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _v _a) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) (_rconcat _v _a) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _v _a) _r)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (if (_rmatch _e (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 $0) (_rconcat _v _a) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.566378355026245
        },
        "re2_train_412_if_there_is_vowel_consonant_replace_that_with_k_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_412_if_there_is_vowel_consonant_replace_that_with_k_b ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _k _b) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_413_if_there_is_consonant_e_replace_that_with_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_413_if_there_is_consonant_e_replace_that_with_s ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0) _s $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_414_if_there_is_i_replace_that_with_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_414_if_there_is_i_replace_that_with_v ((lambda (_rflatten (map (lambda (if (_rmatch _i $0) _v $0)) (_rsplit _i $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _v _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 498.59698510169983
        },
        "re2_train_415_if_the_word_starts_with_consonant_replace_that_with_f_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_415_if_the_word_starts_with_consonant_replace_that_with_f_p ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _f _p) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_416_if_there_is_consonant_r_replace_that_with_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_416_if_there_is_consonant_r_replace_that_with_h ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _r) $0) _h $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _r) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_417_if_there_is_any_letter_add_l_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_417_if_there_is_any_letter_add_l_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _l $0) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _l $0)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _l $0)) (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _j (_rflatten (map (lambda (_rconcat _l $0)) (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _t (_rflatten (map (lambda (_rconcat _l $0)) (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.23409152030945
        },
        "re2_train_418_if_there_is_vowel_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_418_if_there_is_vowel_replace_that_with_j ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) _j $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_419_if_the_word_starts_with_consonant_replace_that_with_e_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_419_if_the_word_starts_with_consonant_replace_that_with_e_y ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _e _y) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_420_if_the_word_ends_with_consonant_replace_that_with_o_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_420_if_the_word_ends_with_consonant_replace_that_with_o_y ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _o _y) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _y _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _o _y) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _o _y) (if (_rmatch _e (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _o _y) (if (_rmatch _s (_rtail (_rsplit _s $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _y) $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (_rsplit _s (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _y _o)))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _y _o) _y) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _y _o)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.240756034851074
        },
        "re2_train_421_if_there_is_vowel_replace_that_with_b_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_421_if_there_is_vowel_replace_that_with_b_t ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _b _t) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_422_if_the_word_starts_with_any_letter_consonant_replace_that_with_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_422_if_the_word_starts_with_any_letter_consonant_replace_that_with_c ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _c (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_423_if_there_is_consonant_l_replace_that_with_m_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_423_if_there_is_consonant_l_replace_that_with_m_x ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _l) $0) (_rconcat _m _x) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _l) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_424_if_there_is_vowel_replace_that_with_a_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_424_if_there_is_vowel_replace_that_with_a_f ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _a _f) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_425_if_the_word_starts_with_consonant_replace_that_with_y_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_425_if_the_word_starts_with_consonant_replace_that_with_y_g ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _y _g) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _e (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _g _y)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 804.1302032470703
        },
        "re2_train_426_if_the_word_starts_with_any_letter_vowel_replace_that_with_h_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_426_if_the_word_starts_with_any_letter_vowel_replace_that_with_h_p ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _h _p) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_427_if_the_word_starts_with_any_letter_any_letter_replace_that_with_f_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_427_if_the_word_starts_with_any_letter_any_letter_replace_that_with_f_s ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat _f _s) (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _s _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _f (cons _s (cdr (cdr (_rsplit _rempty $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _rempty (cons _f (cons _s (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _f (_rsplit _a (_rflatten (cons _s (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0)))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _f (_rsplit _a (_rflatten (cons _s (cdr (cdr (_rsplit _rempty $0)))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 58.33213686943054
        },
        "re2_train_428_if_the_word_starts_with_any_letter_any_letter_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_428_if_the_word_starts_with_any_letter_any_letter_replace_that_with_q ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) _q (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _q (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _q (cdr (cdr (_rsplit _rempty $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _rempty _q) (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _q (_rsplit _a (_rflatten (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cons _w (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))) _rempty _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.206892251968384
        },
        "re2_train_429_if_the_word_ends_with_any_letter_any_letter_replace_that_with_r_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_429_if_the_word_ends_with_any_letter_any_letter_replace_that_with_r_q ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _rdot) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat _r _q) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _r _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _r _j) _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _r) _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _r _m) _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _r)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.590787172317505
        },
        "re2_train_431_if_there_is_u_consonant_replace_that_with_t_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_431_if_there_is_u_consonant_replace_that_with_t_u ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _u (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _t _u) $0)) (_rsplit (_rconcat _u (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_432_if_the_word_ends_with_vowel_any_letter_replace_that_with_h_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_432_if_the_word_ends_with_vowel_any_letter_replace_that_with_h_i ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat _h _i) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_433_if_there_is_vowel_replace_that_with_d_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_433_if_there_is_vowel_replace_that_with_d_b ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _d _b) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_434_if_the_word_ends_with_any_letter_any_letter_replace_that_with_b_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_434_if_the_word_ends_with_any_letter_any_letter_replace_that_with_b_j ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _rdot) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat _b _j) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _b _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _b _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _b (_rconcat _rempty _j)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (_rflatten (_rsplit _rempty $0)) _b _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _b _j) _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 5.817618131637573
        },
        "re2_train_435_if_there_is_vowel_add_d_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_435_if_there_is_vowel_add_d_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _d $0) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_436_if_the_word_ends_with_any_letter_consonant_add_f_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_436_if_the_word_ends_with_any_letter_consonant_add_f_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _f (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_437_if_the_word_starts_with_vowel_replace_that_with_l_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_437_if_the_word_starts_with_vowel_replace_that_with_l_a ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _l _a) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_438_if_the_word_ends_with_vowel_consonant_add_m_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_438_if_the_word_ends_with_vowel_consonant_add_m_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _m) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_439_if_there_is_c_replace_that_with_n_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_439_if_there_is_c_replace_that_with_n_m ((lambda (_rflatten (map (lambda (if (_rmatch _c $0) (_rconcat _n _m) $0)) (_rsplit _c $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_440_if_the_word_starts_with_any_letter_consonant_replace_that_with_x_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_440_if_the_word_starts_with_any_letter_consonant_replace_that_with_x_h ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _x _h) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_441_if_there_is_any_letter_add_b_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_441_if_there_is_any_letter_add_b_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat $0 _b) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _b)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (map (lambda (_rconcat $0 _b)) (#(lambda (_rsplit _rdot $0)) $0))) _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda (_rconcat $0 _b)) (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _b)) (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (_rsplit _s (_rflatten (map (lambda (_rconcat $0 _b)) (#(lambda (_rsplit _rdot $0)) $0)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (map (lambda (_rconcat $0 _b)) (#(lambda (_rsplit _rdot $0)) $0))) _rempty) (_rflatten (map (lambda (_rconcat $0 _b)) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 24.03058123588562
        },
        "re2_train_442_if_there_is_any_letter_replace_that_with_h_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_442_if_there_is_any_letter_replace_that_with_h_r ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _h _r) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _r _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _r)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _r)) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (map (lambda (_rconcat _h _r)) (#(lambda (_rsplit _rdot $0)) $0))) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _h _r)) (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda _r) (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 27.40041995048523
        },
        "re2_train_443_if_the_word_ends_with_any_letter_add_k_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_443_if_the_word_ends_with_any_letter_add_k_after_that ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat (_rtail (_rsplit _rdot $0)) _k) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _k))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _k (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _k))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _k (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _k (_rsplit _b $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.00066375732421875
        },
        "re2_train_444_if_there_is_vowel_s_replace_that_with_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_444_if_there_is_vowel_s_replace_that_with_r ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _s) $0) _r $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _s) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_445_if_the_word_ends_with_any_letter_replace_that_with_x_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_445_if_the_word_ends_with_any_letter_replace_that_with_x_s ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _x _s) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _x) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _s) _x _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _g) _x _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _s (_rsplit _k (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _x)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) _x) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 27.36279559135437
        },
        "re2_train_446_if_the_word_starts_with_consonant_any_letter_replace_that_with_t_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_446_if_the_word_starts_with_consonant_any_letter_replace_that_with_t_l ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _t _l) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_447_if_there_is_vowel_replace_that_with_p_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_447_if_there_is_vowel_replace_that_with_p_v ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _p _v) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_448_if_there_is_any_letter_n_double_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_448_if_there_is_any_letter_n_double_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _n) $0) (_rconcat $0 $0) $0)) (_rsplit (_rconcat _rdot _n) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_449_if_there_is_d_replace_that_with_a_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_449_if_there_is_d_replace_that_with_a_v ((lambda (_rflatten (map (lambda (if (_rmatch _d $0) (_rconcat _a _v) $0)) (_rsplit _d $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _a _v) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _a _v) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _a _v) _d))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (_rsplit _a $0)) (_rconcat _a _v) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _a _v) _d))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.257434606552124
        },
        "re2_train_450_if_the_word_ends_with_any_letter_consonant_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_450_if_the_word_ends_with_any_letter_consonant_replace_that_with_j ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _j (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _j _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r) _rempty _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _j) _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) _j $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 6.027182102203369
        },
        "re2_train_451_if_the_word_starts_with_any_letter_e_replace_that_with_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_451_if_the_word_starts_with_any_letter_e_replace_that_with_m ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _e) (car (_rsplit (_rconcat _rdot _e) $0))) _m (car (_rsplit (_rconcat _rdot _e) $0))) (cdr (_rsplit (_rconcat _rdot _e) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_452_if_the_word_ends_with_consonant_any_letter_add_w_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_452_if_the_word_ends_with_consonant_any_letter_add_w_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _w (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_453_if_there_is_vowel_r_add_i_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_453_if_there_is_vowel_r_add_i_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _r) $0) (_rconcat _i $0) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _r) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_454_if_the_word_starts_with_vowel_add_k_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_454_if_the_word_starts_with_vowel_add_k_after_that ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)) _k) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_455_if_there_is_vowel_replace_that_with_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_455_if_there_is_vowel_replace_that_with_s ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) _s $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_456_if_there_is_vowel_add_v_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_456_if_there_is_vowel_add_v_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _v $0) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_457_if_the_word_ends_with_consonant_replace_that_with_r_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_457_if_the_word_ends_with_consonant_replace_that_with_r_t ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _r _t) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_458_if_there_is_n_consonant_add_p_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_458_if_there_is_n_consonant_add_p_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _n (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat $0 _p) $0)) (_rsplit (_rconcat _n (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_459_if_the_word_ends_with_consonant_consonant_add_l_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_459_if_the_word_ends_with_consonant_consonant_add_l_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _l) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_460_if_the_word_starts_with_vowel_replace_that_with_x_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_460_if_the_word_starts_with_vowel_replace_that_with_x_l ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _x _l) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_461_if_the_word_starts_with_consonant_replace_that_with_w_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_461_if_the_word_starts_with_consonant_replace_that_with_w_w ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _w _w) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_462_if_the_word_ends_with_any_letter_any_letter_add_a_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_462_if_the_word_ends_with_any_letter_any_letter_add_a_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _rdot) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat (_rtail (_rsplit (_rconcat _rdot _rdot) $0)) _a) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rsplit _n $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rsplit _x $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (_rsplit _k $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 11.466224193572998
        },
        "re2_train_463_if_the_word_starts_with_any_letter_replace_that_with_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_463_if_the_word_starts_with_any_letter_replace_that_with_a ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) _a (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _a (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _a _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _a $0)) _a _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 12.336700916290283
        },
        "re2_train_464_if_there_is_consonant_any_letter_add_x_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_464_if_there_is_consonant_any_letter_add_x_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0) (_rconcat _x $0) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_465_if_the_word_starts_with_consonant_replace_that_with_q_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_465_if_the_word_starts_with_consonant_replace_that_with_q_n ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _q _n) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_466_if_the_word_ends_with_any_letter_add_u_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_466_if_the_word_ends_with_any_letter_add_u_after_that ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat (_rtail (_rsplit _rdot $0)) _u) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _a $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _u (_rsplit _j $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 16.051807403564453
        },
        "re2_train_467_if_there_is_any_letter_any_letter_double_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_467_if_there_is_any_letter_any_letter_double_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _rdot) $0) (_rconcat $0 $0) $0)) (_rsplit (_rconcat _rdot _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_468_if_the_word_ends_with_any_letter_replace_that_with_x_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_468_if_the_word_ends_with_any_letter_replace_that_with_x_p ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _x _p) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _x) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rsplit _a (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _x)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rsplit _j (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _x)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rsplit _w (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _x)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _p (_rsplit _k (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _x)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 23.79982042312622
        },
        "re2_train_469_if_there_is_p_add_o_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_469_if_there_is_p_add_o_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _p $0) (_rconcat $0 _o) $0)) (_rsplit _p $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_470_if_the_word_starts_with_any_letter_vowel_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_470_if_the_word_starts_with_any_letter_vowel_replace_that_with_w ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _w (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_471_if_there_is_o_add_r_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_471_if_there_is_o_add_r_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _o $0) (_rconcat _r $0) $0)) (_rsplit _o $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_472_if_the_word_starts_with_any_letter_add_v_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_472_if_the_word_starts_with_any_letter_add_v_before_that ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _v (car (_rsplit _rdot $0))) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _v (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _v (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _v (_rsplit _a $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _v (_rsplit _i $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 11.941757678985596
        },
        "re2_train_473_if_there_is_o_replace_that_with_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_473_if_there_is_o_replace_that_with_l ((lambda (_rflatten (map (lambda (if (_rmatch _o $0) _l $0)) (_rsplit _o $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _l _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _l _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _l _o))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _l _rempty) _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _l) _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 36.102752447128296
        },
        "re2_train_474_if_there_is_t_replace_that_with_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_474_if_there_is_t_replace_that_with_o ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) _o $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _o _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 388.36555314064026
        },
        "re2_train_475_if_the_word_starts_with_consonant_o_replace_that_with_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_475_if_the_word_starts_with_consonant_o_replace_that_with_r ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _o) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _o) $0))) _r (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _o) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _o) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_476_if_there_is_consonant_replace_that_with_x_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_476_if_there_is_consonant_replace_that_with_x_u ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _x _u) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_477_if_there_is_s_replace_that_with_i_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_477_if_there_is_s_replace_that_with_i_r ((lambda (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat _i _r) $0)) (_rsplit _s $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _r) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _i _r) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _r) _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i (_rconcat _r _rempty)) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (_rsplit _rempty $0)) (_rconcat _i _r) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 30.522093296051025
        },
        "re2_train_478_if_there_is_consonant_consonant_add_r_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_478_if_there_is_consonant_consonant_add_r_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _r $0) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_479_if_there_is_vowel_replace_that_with_a_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_479_if_there_is_vowel_replace_that_with_a_c ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _a _c) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_480_if_the_word_ends_with_consonant_replace_that_with_g_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_480_if_the_word_ends_with_consonant_replace_that_with_g_l ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _g _l) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)))) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _v)))) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _t)))) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (_rappend _g (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 5.885178327560425
        },
        "re2_train_481_if_the_word_starts_with_consonant_i_replace_that_with_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_481_if_the_word_starts_with_consonant_i_replace_that_with_i ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _i) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _i) $0))) _i (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _i) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _i) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_482_if_the_word_ends_with_any_letter_consonant_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_482_if_the_word_ends_with_any_letter_consonant_replace_that_with_x ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _x (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _rempty))) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _x (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) _rempty $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) (_rflatten (_rrevcdr (_rsplit _rempty $0))))) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _b _rempty))) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 31.713274717330933
        },
        "re2_train_483_if_the_word_ends_with_consonant_replace_that_with_b_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_483_if_the_word_ends_with_consonant_replace_that_with_b_a ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _b _a) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _a _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _a _b)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _a))) (_rconcat _b _a) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))))) (_rconcat _b _a) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _b _a) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.55672645568848
        },
        "re2_train_484_if_the_word_ends_with_consonant_replace_that_with_j_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_484_if_the_word_ends_with_consonant_replace_that_with_j_q ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _j _q) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _q _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _q _j))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _j)) _q $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _q _j))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _q _j))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 47.03111171722412
        },
        "re2_train_485_if_there_is_l_add_m_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_485_if_there_is_l_add_m_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _l $0) (_rconcat _m $0) $0)) (_rsplit _l $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _l) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 77.53964304924011
        },
        "re2_train_486_if_the_word_starts_with_any_letter_add_b_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_486_if_the_word_starts_with_any_letter_add_b_before_that ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _b (car (_rsplit _rdot $0))) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _b (_rsplit _a $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _b _rempty) (_rsplit _a $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _b (_rsplit _a (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _b (cdr (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _v (_rsplit _a $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 11.826111078262329
        },
        "re2_train_487_if_the_word_starts_with_consonant_add_a_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_487_if_the_word_starts_with_consonant_add_a_before_that ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _a (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _a (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _a (_rsplit _a $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _a (_rsplit _i $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _a (_rsplit _b $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 17.955832958221436
        },
        "re2_train_488_if_there_is_vowel_c_add_i_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_488_if_there_is_vowel_c_add_i_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _c) $0) (_rconcat $0 _i) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _c) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_489_if_there_is_any_letter_consonant_replace_that_with_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_489_if_there_is_any_letter_consonant_replace_that_with_b ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _b $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_490_if_there_is_any_letter_replace_that_with_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_490_if_there_is_any_letter_replace_that_with_l ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) _l $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda _l) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _l _rempty)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _l) (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda _k) (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _l) (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda _l) (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _l) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _g _l)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 6.02388858795166
        },
        "re2_train_491_if_the_word_ends_with_any_letter_replace_that_with_o_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_491_if_the_word_ends_with_any_letter_replace_that_with_o_j ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _o _j) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _o _j)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _o) _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _o _j)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _o _j)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat (_rconcat _rempty _o) _j)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 24.41364812850952
        },
        "re2_train_492_if_the_word_starts_with_vowel_replace_that_with_c_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_492_if_the_word_starts_with_vowel_replace_that_with_c_d ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _c _d) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_493_if_there_is_s_replace_that_with_r_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_493_if_there_is_s_replace_that_with_r_a ((lambda (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat _r _a) $0)) (_rsplit _s $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _a) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _r _a) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _a) _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _r _rempty) _a) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _a) (_rconcat _rempty _s)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.30465221405029
        },
        "re2_train_494_if_the_word_starts_with_any_letter_replace_that_with_s_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_494_if_the_word_starts_with_any_letter_replace_that_with_s_b ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _s _b) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _b _rempty) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _s _b) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _s _b) (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.305739402770996
        },
        "re2_train_495_if_the_word_ends_with_any_letter_replace_that_with_c_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_495_if_the_word_ends_with_any_letter_replace_that_with_c_v ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _c _v) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _c _v)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _v (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _c)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0))) (_rconcat _c _v)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (_rflatten (_rappend _v (#(lambda (_rsplit _rdot $0)) $0))) _c _v))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (_rsplit _s (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _c _v))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _c _v)) _rempty) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _c _v))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.35995888710022
        },
        "re2_train_496_if_there_is_any_letter_vowel_replace_that_with_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_496_if_there_is_any_letter_vowel_replace_that_with_h ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _h $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_497_if_there_is_consonant_replace_that_with_m_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_497_if_there_is_consonant_replace_that_with_m_a ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _m _a) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_498_if_the_word_starts_with_consonant_consonant_add_e_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_498_if_the_word_starts_with_consonant_consonant_add_e_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _e (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_train_499_if_there_is_vowel_vowel_add_o_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_train_499_if_there_is_vowel_vowel_add_o_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _o $0) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        }
    },
    "test": {
        "re2_test_0_if_the_word_ends_with_s_replace_that_with_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_0_if_the_word_ends_with_s_replace_that_with_m ((lambda (_rflatten (_rappend (if (_rmatch _s (_rtail (_rsplit _s $0))) _m (_rtail (_rsplit _s $0))) (_rrevcdr (_rsplit _s $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _m _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _rempty _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 13.526581287384033
        },
        "re2_test_1_if_there_is_any_letter_t_double_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_1_if_there_is_any_letter_t_double_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _t) $0) (_rconcat $0 $0) $0)) (_rsplit (_rconcat _rdot _t) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_2_if_the_word_starts_with_any_letter_consonant_replace_that_with_q_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_2_if_the_word_starts_with_any_letter_consonant_replace_that_with_q_f ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _q _f) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_3_if_there_is_consonant_vowel_add_f_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_3_if_there_is_consonant_vowel_add_f_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _f $0) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_4_if_the_word_starts_with_any_letter_replace_that_with_k_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_4_if_the_word_starts_with_any_letter_replace_that_with_k_a ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _k _a) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _k))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _a _k))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _k))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _k _a) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a (_rconcat _k _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 27.626232624053955
        },
        "re2_test_5_if_there_is_any_letter_add_u_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_5_if_there_is_any_letter_add_u_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat $0 _u) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _u)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _u)) (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _u)) (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (map (lambda (_rconcat $0 _u)) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (map (lambda (_rconcat $0 _u)) (#(lambda (_rsplit _rdot $0)) $0))) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 72.69223976135254
        },
        "re2_test_6_if_the_word_starts_with_vowel_replace_that_with_g_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_6_if_the_word_starts_with_vowel_replace_that_with_g_p ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _g _p) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_7_if_the_word_starts_with_any_letter_vowel_replace_that_with_y_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_7_if_the_word_starts_with_any_letter_vowel_replace_that_with_y_l ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _y _l) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_8_if_the_word_ends_with_consonant_replace_that_with_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_8_if_the_word_ends_with_consonant_replace_that_with_g ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) _g (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _g _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _rempty _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _g $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _g _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _rempty $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 20.520294189453125
        },
        "re2_test_9_if_there_is_t_vowel_replace_that_with_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_9_if_there_is_t_vowel_replace_that_with_g ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _t (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _g $0)) (_rsplit (_rconcat _t (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_10_if_the_word_starts_with_any_letter_replace_that_with_w_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_10_if_the_word_starts_with_any_letter_replace_that_with_w_t ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _w _t) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _t _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _t) _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cons _t (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _w _t) (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _w (_rsplit _a (_rflatten (cons _t (cdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.021332025527954
        },
        "re2_test_11_if_there_is_c_any_letter_replace_that_with_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_11_if_there_is_c_any_letter_replace_that_with_m ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _c _rdot) $0) _m $0)) (_rsplit (_rconcat _c _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_12_if_the_word_starts_with_consonant_any_letter_replace_that_with_s_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_12_if_the_word_starts_with_consonant_any_letter_replace_that_with_s_d ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _s _d) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_13_if_the_word_ends_with_any_letter_replace_that_with_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_13_if_the_word_ends_with_any_letter_replace_that_with_a ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) _a (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _a))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _a) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (_rsplit _rempty $0)) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 6.585018157958984
        },
        "re2_test_14_if_the_word_ends_with_any_letter_replace_that_with_l_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_14_if_the_word_ends_with_any_letter_replace_that_with_l_k ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _l _k) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _l _k)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _l) _k))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _l)) _k $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _l))) _k))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _rempty _l) _k))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.4023380279541
        },
        "re2_test_15_if_there_is_consonant_add_h_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_15_if_there_is_consonant_add_h_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat $0 _h) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_16_if_there_is_any_letter_add_j_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_16_if_there_is_any_letter_add_j_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat $0 _j) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _j)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _j)) (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda (_rconcat $0 _j)) (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _j)) (_rsplit _rdot $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _rempty (map (lambda (_rconcat $0 _j)) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 34.81051206588745
        },
        "re2_test_17_if_there_is_vowel_t_replace_that_with_t_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_17_if_there_is_vowel_t_replace_that_with_t_n ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _t) $0) (_rconcat _t _n) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _t) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_18_if_there_is_any_letter_d_replace_that_with_p_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_18_if_there_is_any_letter_d_replace_that_with_p_y ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _d) $0) (_rconcat _p _y) $0)) (_rsplit (_rconcat _rdot _d) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_19_if_there_is_consonant_a_add_p_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_19_if_there_is_consonant_a_add_p_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _a) $0) (_rconcat $0 _p) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _a) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_20_if_the_word_ends_with_vowel_consonant_replace_that_with_k_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_20_if_the_word_ends_with_vowel_consonant_replace_that_with_k_x ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _k _x) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_21_if_the_word_ends_with_consonant_add_r_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_21_if_the_word_ends_with_consonant_add_r_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _r (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 (_rtail (#(lambda (_rsplit _rdot $0)) $0)) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _r (_rtail (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r) (_rtail (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r)) (_rtail (#(lambda (_rsplit _rdot $0)) $0)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _rempty (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r)) (_rtail (#(lambda (_rsplit _rdot $0)) $0)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 83.62794232368469
        },
        "re2_test_22_if_there_is_any_letter_add_w_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_22_if_there_is_any_letter_add_w_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _w $0) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w $0)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w $0)) (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda (_rconcat _w $0)) (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _w $0)) (_rsplit _rdot $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat _rempty _w) $0)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.84175729751587
        },
        "re2_test_23_if_there_is_h_any_letter_add_k_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_23_if_there_is_h_any_letter_add_k_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _h _rdot) $0) (_rconcat $0 _k) $0)) (_rsplit (_rconcat _h _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_24_if_the_word_starts_with_any_letter_any_letter_add_s_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_24_if_the_word_starts_with_any_letter_any_letter_add_s_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat (car (_rsplit (_rconcat _rdot _rdot) $0)) _s) (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_25_if_there_is_t_replace_that_with_c_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_25_if_there_is_t_replace_that_with_c_n ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _c _n) $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _n) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _c _n) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _n) _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _c _rempty) _n) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c (_rconcat _n _rempty)) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.87454342842102
        },
        "re2_test_26_if_there_is_consonant_consonant_replace_that_with_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_26_if_there_is_consonant_consonant_replace_that_with_k ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _k $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_27_if_there_is_consonant_replace_that_with_w_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_27_if_there_is_consonant_replace_that_with_w_h ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _w _h) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_28_if_the_word_ends_with_any_letter_consonant_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_28_if_the_word_ends_with_any_letter_consonant_replace_that_with_w ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _w (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _w $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) (_rflatten (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))) _w $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) _w $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (_rrevcdr (#(lambda (_rsplit _rdot $0)) (_rflatten (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))) _w $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (_rappend _rempty (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))) _w $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 27.67699360847473
        },
        "re2_test_29_if_the_word_starts_with_consonant_replace_that_with_m_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_29_if_the_word_starts_with_consonant_replace_that_with_m_x ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _m _x) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _x) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _m _x) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _m _x)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _m _x) (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 34.821433782577515
        },
        "re2_test_30_if_the_word_ends_with_any_letter_replace_that_with_v_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_30_if_the_word_ends_with_any_letter_replace_that_with_v_n ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _v _n) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _n _v))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _v) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _a _v) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _w _v) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _d _v) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 64.14844465255737
        },
        "re2_test_31_if_there_is_vowel_consonant_replace_that_with_g_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_31_if_there_is_vowel_consonant_replace_that_with_g_u ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _g _u) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_32_if_the_word_starts_with_vowel_consonant_add_u_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_32_if_the_word_starts_with_vowel_consonant_add_u_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _u (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (cons _u (#(lambda (_rsplit _rdot $0)) $0)) _rempty $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (cons _u (_rsplit _rempty $0)) _rempty $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (cons _u (#(lambda (_rsplit _rdot $0)) $0)) _rempty (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (cons _u (_rsplit _a $0)) _rempty $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (cons (_rconcat _u _rempty) (#(lambda (_rsplit _rdot $0)) $0)) _rempty $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 117.84652423858643
        },
        "re2_test_33_if_the_word_starts_with_consonant_replace_that_with_a_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_33_if_the_word_starts_with_consonant_replace_that_with_a_h ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _a _h) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _h _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h (_rconcat _a _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h (_rconcat _rempty _a)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h _r) _a _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 34.816608905792236
        },
        "re2_test_34_if_there_is_consonant_s_replace_that_with_y_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_34_if_there_is_consonant_s_replace_that_with_y_v ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _s) $0) (_rconcat _y _v) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _s) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_35_if_there_is_vowel_replace_that_with_v_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_35_if_there_is_vowel_replace_that_with_v_p ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _v _p) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_36_if_the_word_starts_with_consonant_replace_that_with_l_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_36_if_the_word_starts_with_consonant_replace_that_with_l_r ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _l _r) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _r _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r (_rconcat _rempty _l)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r (car (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _s _l)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _u (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _l)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.956836223602295
        },
        "re2_test_37_if_there_is_u_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_37_if_there_is_u_replace_that_with_w ((lambda (_rflatten (map (lambda (if (_rmatch _u $0) _w $0)) (_rsplit _u $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _w _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _w _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _w) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w _rempty) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _w _u))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 34.86054468154907
        },
        "re2_test_38_if_there_is_r_replace_that_with_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_38_if_there_is_r_replace_that_with_k ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) _k $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _k _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _k _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _rempty) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _k) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _rempty) _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.3881733417511
        },
        "re2_test_39_if_there_is_any_letter_i_replace_that_with_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_39_if_there_is_any_letter_i_replace_that_with_e ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _i) $0) _e $0)) (_rsplit (_rconcat _rdot _i) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_40_if_the_word_starts_with_vowel_add_n_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_40_if_the_word_starts_with_vowel_add_n_before_that ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _n (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_41_if_the_word_starts_with_consonant_consonant_replace_that_with_f_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_41_if_the_word_starts_with_consonant_consonant_replace_that_with_f_j ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _f _j) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_42_if_the_word_starts_with_consonant_replace_that_with_m_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_42_if_the_word_starts_with_consonant_replace_that_with_m_p ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _m _p) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _p _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _p _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _p _m))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _m _p) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _p _rempty) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.904449462890625
        },
        "re2_test_43_if_the_word_starts_with_any_letter_replace_that_with_p_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_43_if_the_word_starts_with_any_letter_replace_that_with_p_x ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _p _x) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _x) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _p _x) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _p (cons _x (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _p _x) (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.138718366622925
        },
        "re2_test_44_if_the_word_starts_with_consonant_vowel_replace_that_with_r_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_44_if_the_word_starts_with_consonant_vowel_replace_that_with_r_u ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _r _u) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_45_if_there_is_n_replace_that_with_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_45_if_there_is_n_replace_that_with_i ((lambda (_rflatten (map (lambda (if (_rmatch _n $0) _i $0)) (_rsplit _n $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _i _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _i _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _i _n))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _i) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _i _n))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 34.80647659301758
        },
        "re2_test_46_if_there_is_consonant_replace_that_with_p_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_46_if_there_is_consonant_replace_that_with_p_l ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _p _l) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_47_if_the_word_starts_with_any_letter_replace_that_with_q_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_47_if_the_word_starts_with_any_letter_replace_that_with_q_n ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _q _n) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _n _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _n _rempty) _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _n) _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _u (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _q)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 34.80976891517639
        },
        "re2_test_48_if_the_word_starts_with_any_letter_replace_that_with_t_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_48_if_the_word_starts_with_any_letter_replace_that_with_t_n ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _t _n) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _t _n) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n (_rconcat _t _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _t _n)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _t _n) (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 64.21438694000244
        },
        "re2_test_49_if_the_word_ends_with_consonant_consonant_replace_that_with_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_49_if_the_word_ends_with_consonant_consonant_replace_that_with_l ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _l (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_50_if_the_word_starts_with_vowel_any_letter_replace_that_with_r_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_50_if_the_word_starts_with_vowel_any_letter_replace_that_with_r_y ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat _r _y) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_51_if_there_is_t_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_51_if_there_is_t_replace_that_with_x ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) _x $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _x _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _x) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _x _rempty) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _rempty _x) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _x) _t) (_rconcat _a _x) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 20.672831773757935
        },
        "re2_test_52_if_the_word_starts_with_any_letter_any_letter_replace_that_with_v_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_52_if_the_word_starts_with_any_letter_any_letter_replace_that_with_v_j ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat _v _j) (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _j _v))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _j _v))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _v (cons _j (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (_rflatten (cons _q (cdr (#(lambda (_rsplit _rdot $0)) $0)))) _j _v))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cons _q (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))) _j _v))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.87015342712402
        },
        "re2_test_53_if_the_word_starts_with_consonant_replace_that_with_l_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_53_if_the_word_starts_with_consonant_replace_that_with_l_v ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _l _v) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _v _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _v (car (map (lambda _l) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _v (car (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _a _l)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _v (car (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _s _l)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _v (car (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _n _l)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 34.82604241371155
        },
        "re2_test_54_if_there_is_g_replace_that_with_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_54_if_there_is_g_replace_that_with_p ((lambda (_rflatten (map (lambda (if (_rmatch _g $0) _p $0)) (_rsplit _g $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _p _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _p _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _p _rempty) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _p) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _p _rempty) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 34.84415864944458
        },
        "re2_test_55_if_the_word_starts_with_vowel_consonant_replace_that_with_j_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_55_if_the_word_starts_with_vowel_consonant_replace_that_with_j_g ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _j _g) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_56_if_the_word_starts_with_any_letter_replace_that_with_c_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_56_if_the_word_starts_with_any_letter_replace_that_with_c_x ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _c _x) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _c _x) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _x) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _c _x) (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _u (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _c)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 34.87080121040344
        },
        "re2_test_57_if_the_word_starts_with_any_letter_replace_that_with_r_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_57_if_the_word_starts_with_any_letter_replace_that_with_r_w ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _r _w) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _w _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w (_rconcat _r _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 27.719690561294556
        },
        "re2_test_58_if_the_word_starts_with_any_letter_replace_that_with_f_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_58_if_the_word_starts_with_any_letter_replace_that_with_f_a ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _f _a) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a (_rconcat _rempty _f)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _f _a) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _f _a)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _f (cons _a (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.89490866661072
        },
        "re2_test_59_if_there_is_any_letter_add_g_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_59_if_there_is_any_letter_add_g_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat $0 _g) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _g)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _g)) (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat _rempty $0) _g)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (_rflatten (map (lambda (_rconcat $0 _g)) (#(lambda (_rsplit _rdot $0)) $0))) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (map (lambda (_rconcat $0 _g)) (#(lambda (_rsplit _rdot $0)) $0))) _g _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 43.32647156715393
        },
        "re2_test_60_if_the_word_starts_with_vowel_replace_that_with_l_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_60_if_the_word_starts_with_vowel_replace_that_with_l_c ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _l _c) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_61_if_the_word_starts_with_consonant_replace_that_with_d_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_61_if_the_word_starts_with_consonant_replace_that_with_d_x ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _d _x) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _x _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _d _x) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _x) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _d _x)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.10506343841553
        },
        "re2_test_62_if_there_is_n_any_letter_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_62_if_there_is_n_any_letter_replace_that_with_x ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _n _rdot) $0) _x $0)) (_rsplit (_rconcat _n _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_63_if_there_is_e_add_h_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_63_if_there_is_e_add_h_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _e $0) (_rconcat $0 _h) $0)) (_rsplit _e $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _h) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _h) _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 73.52709317207336
        },
        "re2_test_64_if_the_word_starts_with_any_letter_replace_that_with_y_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_64_if_the_word_starts_with_any_letter_replace_that_with_y_j ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _y _j) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _j _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _y _j) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j (_rconcat _y _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _a $0)) _j _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 27.710245847702026
        },
        "re2_test_65_if_there_is_vowel_add_n_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_65_if_there_is_vowel_add_n_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _n $0) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_66_if_the_word_starts_with_vowel_replace_that_with_g_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_66_if_the_word_starts_with_vowel_replace_that_with_g_y ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _g _y) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _g)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _h (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _g)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (cdr (#(lambda (_rsplit _rdot $0)) $0)))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _g)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 175.39988160133362
        },
        "re2_test_67_if_there_is_any_letter_s_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_67_if_there_is_any_letter_s_remove_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _s) $0) _rempty $0)) (_rsplit (_rconcat _rdot _s) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_68_if_the_word_starts_with_vowel_replace_that_with_a_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_68_if_the_word_starts_with_vowel_replace_that_with_a_c ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _a _c) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_69_if_there_is_e_add_f_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_69_if_there_is_e_add_f_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _e $0) (_rconcat _f $0) $0)) (_rsplit _e $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f _e) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _f _e) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f _e) _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _f) _e) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f _e) (_rconcat _rempty _e)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 63.589229106903076
        },
        "re2_test_70_if_the_word_ends_with_s_add_g_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_70_if_the_word_ends_with_s_add_g_after_that ((lambda (_rflatten (_rappend (if (_rmatch _s (_rtail (_rsplit _s $0))) (_rconcat (_rtail (_rsplit _s $0)) _g) (_rtail (_rsplit _s $0))) (_rrevcdr (_rsplit _s $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_71_if_the_word_starts_with_consonant_replace_that_with_c_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_71_if_the_word_starts_with_consonant_replace_that_with_c_m ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _c _m) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _m _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _c _m) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _m _rempty) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _m) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _c _m) (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.90749788284302
        },
        "re2_test_72_if_the_word_starts_with_any_letter_replace_that_with_i_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_72_if_the_word_starts_with_any_letter_replace_that_with_i_a ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _i _a) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _a _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _i _a) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _a) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a (_rconcat _rempty _i)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 27.810954093933105
        },
        "re2_test_73_if_the_word_ends_with_any_letter_add_a_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_73_if_the_word_ends_with_any_letter_add_a_after_that ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat (_rtail (_rsplit _rdot $0)) _a) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _a (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _a))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _a) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.00028634071350097656
        },
        "re2_test_74_if_the_word_ends_with_consonant_replace_that_with_c_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_74_if_the_word_ends_with_consonant_replace_that_with_c_v ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _c _v) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _c _v)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _c _v)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _c _v)) _v))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _v) (_rconcat _c _v)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (_rrevcdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _c _v))))) _v $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 6.812347173690796
        },
        "re2_test_75_if_there_is_vowel_consonant_replace_that_with_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_75_if_there_is_vowel_consonant_replace_that_with_c ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _c $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_76_if_there_is_d_replace_that_with_k_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_76_if_there_is_d_replace_that_with_k_i ((lambda (_rflatten (map (lambda (if (_rmatch _d $0) (_rconcat _k _i) $0)) (_rsplit _d $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _i) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _k _i) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _i) _d))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _k _rempty) _i) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _i) (_rconcat _d _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.94543147087097
        },
        "re2_test_77_if_there_is_vowel_vowel_add_v_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_77_if_there_is_vowel_vowel_add_v_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat $0 _v) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_78_if_there_is_i_any_letter_replace_that_with_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_78_if_there_is_i_any_letter_replace_that_with_y ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _i _rdot) $0) _y $0)) (_rsplit (_rconcat _i _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_79_if_the_word_starts_with_any_letter_replace_that_with_p_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_79_if_the_word_starts_with_any_letter_replace_that_with_p_j ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _p _j) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _j _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j (_rconcat _p _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _p (cons _j (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _u (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j _p)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.982869386672974
        },
        "re2_test_80_if_there_is_c_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_80_if_there_is_c_replace_that_with_q ((lambda (_rflatten (map (lambda (if (_rmatch _c $0) _q $0)) (_rsplit _c $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _q _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _q _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _q _rempty) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _q) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _q (_rconcat _c _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 27.810848712921143
        },
        "re2_test_81_if_there_is_l_add_w_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_81_if_there_is_l_add_w_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _l $0) (_rconcat $0 _w) $0)) (_rsplit _l $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _l _w) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _l _w) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _l _w) _l))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _l) _w) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _l _w) _l))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 64.18007683753967
        },
        "re2_test_82_if_there_is_e_add_m_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_82_if_there_is_e_add_m_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _e $0) (_rconcat $0 _m) $0)) (_rsplit _e $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _m) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _e _m) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _m) _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (_rsplit _rempty $0)) (_rconcat _e _m) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _m) _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.08674383163452
        },
        "re2_test_83_if_the_word_ends_with_s_add_f_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_83_if_the_word_ends_with_s_add_f_after_that ((lambda (_rflatten (_rappend (if (_rmatch _s (_rtail (_rsplit _s $0))) (_rconcat (_rtail (_rsplit _s $0)) _f) (_rtail (_rsplit _s $0))) (_rrevcdr (_rsplit _s $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _f) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _f $0) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (_rflatten (_rappend _f (#(lambda (_rsplit _rdot $0)) $0))) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (cdr (#(lambda (_rsplit _rdot $0)) $0)))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _f) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _f) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 73.87870335578918
        },
        "re2_test_84_if_there_is_e_any_letter_replace_that_with_r_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_84_if_there_is_e_any_letter_replace_that_with_r_a ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _e _rdot) $0) (_rconcat _r _a) $0)) (_rsplit (_rconcat _e _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_85_if_the_word_starts_with_any_letter_replace_that_with_c_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_85_if_the_word_starts_with_any_letter_replace_that_with_c_y ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _c _y) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _c _y) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _c _y)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y (_rconcat _c _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _c _y) (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.489664793014526
        },
        "re2_test_86_if_there_is_d_add_b_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_86_if_there_is_d_add_b_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _d $0) (_rconcat $0 _b) $0)) (_rsplit _d $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _b) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _d _b) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _b) _d))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _d _b) _rempty) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _d _rempty) _b) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 41.95570611953735
        },
        "re2_test_87_if_there_is_t_replace_that_with_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_87_if_there_is_t_replace_that_with_m ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) _m $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _m _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _m _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _rempty) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _m) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _m (_rconcat _t _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 27.760915279388428
        },
        "re2_test_88_if_there_is_c_any_letter_replace_that_with_o_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_88_if_there_is_c_any_letter_replace_that_with_o_x ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _c _rdot) $0) (_rconcat _o _x) $0)) (_rsplit (_rconcat _c _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_89_if_there_is_consonant_e_add_v_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_89_if_there_is_consonant_e_add_v_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0) (_rconcat _v $0) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_90_if_there_is_consonant_replace_that_with_r_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_90_if_there_is_consonant_replace_that_with_r_r ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _r _r) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_91_if_the_word_ends_with_vowel_any_letter_replace_that_with_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_91_if_the_word_ends_with_vowel_any_letter_replace_that_with_l ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) _l (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_92_if_there_is_vowel_vowel_replace_that_with_w_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_92_if_there_is_vowel_vowel_replace_that_with_w_b ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _w _b) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_93_if_the_word_starts_with_consonant_replace_that_with_g_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_93_if_the_word_starts_with_consonant_replace_that_with_g_w ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _g _w) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _w _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _g))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _u _rempty) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _g)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _u (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _g)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 27.83745837211609
        },
        "re2_test_94_if_the_word_ends_with_s_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_94_if_the_word_ends_with_s_replace_that_with_t ((lambda (_rflatten (_rappend (if (_rmatch _s (_rtail (_rsplit _s $0))) _t (_rtail (_rsplit _s $0))) (_rrevcdr (_rsplit _s $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _t) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (cdr (#(lambda (_rsplit _rdot $0)) $0)))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _t) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _t) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _t) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _t) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.00312519073486
        },
        "re2_test_95_if_there_is_consonant_vowel_replace_that_with_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_95_if_there_is_consonant_vowel_replace_that_with_m ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _m $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_96_if_there_is_i_replace_that_with_i_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_96_if_there_is_i_replace_that_with_i_f ((lambda (_rflatten (map (lambda (if (_rmatch _i $0) (_rconcat _i _f) $0)) (_rsplit _i $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _f) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _i _f) _rempty) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _i _rempty) _f) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _i) _f) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i (_rconcat _f _rempty)) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.68277621269226
        },
        "re2_test_97_if_the_word_starts_with_vowel_consonant_add_s_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_97_if_the_word_starts_with_vowel_consonant_add_s_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _s) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_98_if_there_is_i_consonant_replace_that_with_t_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_98_if_there_is_i_consonant_replace_that_with_t_f ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _i (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _t _f) $0)) (_rsplit (_rconcat _i (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_99_if_the_word_starts_with_consonant_add_o_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_99_if_the_word_starts_with_consonant_add_o_before_that ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _o (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _u (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (_rflatten (cons _o (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _u (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (_rflatten (cons _o (_rsplit _a $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 294.46506214141846
        },
        "re2_test_100_if_the_word_ends_with_any_letter_add_m_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_100_if_the_word_ends_with_any_letter_add_m_after_that ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat (_rtail (_rsplit _rdot $0)) _m) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (_rappend _m (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rsplit _a $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rsplit _e $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (_rsplit _v $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 27.87033224105835
        },
        "re2_test_101_if_the_word_ends_with_any_letter_any_letter_add_k_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_101_if_the_word_ends_with_any_letter_any_letter_add_k_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _rdot) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat _k (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_102_if_there_is_any_letter_any_letter_replace_that_with_k_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_102_if_there_is_any_letter_any_letter_replace_that_with_k_g ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _rdot) $0) (_rconcat _k _g) $0)) (_rsplit (_rconcat _rdot _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_103_if_there_is_e_any_letter_replace_that_with_e_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_103_if_there_is_e_any_letter_replace_that_with_e_h ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _e _rdot) $0) (_rconcat _e _h) $0)) (_rsplit (_rconcat _e _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_104_if_there_is_m_add_i_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_104_if_there_is_m_add_i_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _m $0) (_rconcat _i $0) $0)) (_rsplit _m $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _m) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _i _m) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _m) _m))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _m) _m))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _o (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _m) _m))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.60146141052246
        },
        "re2_test_105_if_there_is_l_add_e_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_105_if_there_is_l_add_e_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _l $0) (_rconcat _e $0) $0)) (_rsplit _l $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _l) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _e _l) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _l) _l))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _e) _l) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _l) (_rconcat _rempty _l)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.25869679450989
        },
        "re2_test_106_if_there_is_vowel_r_add_h_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_106_if_there_is_vowel_r_add_h_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _r) $0) (_rconcat $0 _h) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _r) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_107_if_there_is_vowel_any_letter_replace_that_with_t_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_107_if_there_is_vowel_any_letter_replace_that_with_t_g ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) (_rconcat _t _g) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_108_if_the_word_starts_with_consonant_replace_that_with_h_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_108_if_the_word_starts_with_consonant_replace_that_with_h_y ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _h _y) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_109_if_the_word_ends_with_any_letter_replace_that_with_i_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_109_if_the_word_ends_with_any_letter_replace_that_with_i_u ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _i _u) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _i _u)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)) _u $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _rempty (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)) _u $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _r (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)) _u $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit (_rconcat _i _u) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i)) _u $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 6.934879302978516
        },
        "re2_test_110_if_the_word_starts_with_consonant_any_letter_replace_that_with_a_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_110_if_the_word_starts_with_consonant_any_letter_replace_that_with_a_t ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _a _t) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_111_if_there_is_r_any_letter_add_u_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_111_if_there_is_r_any_letter_add_u_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _r _rdot) $0) (_rconcat _u $0) $0)) (_rsplit (_rconcat _r _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_112_if_there_is_i_any_letter_add_p_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_112_if_there_is_i_any_letter_add_p_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _i _rdot) $0) (_rconcat _p $0) $0)) (_rsplit (_rconcat _i _rdot) $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _p _i) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _p _i) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _p _i) _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _p _i) (_rconcat _rempty _i)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _p _i) _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.01856255531311
        },
        "re2_test_113_if_the_word_ends_with_consonant_consonant_add_s_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_113_if_the_word_ends_with_consonant_consonant_add_s_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _s (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_114_if_there_is_vowel_add_w_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_114_if_there_is_vowel_add_w_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _w $0) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_115_if_the_word_starts_with_consonant_vowel_replace_that_with_n_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_115_if_the_word_starts_with_consonant_vowel_replace_that_with_n_s ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _n _s) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_116_if_the_word_starts_with_consonant_replace_that_with_w_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_116_if_the_word_starts_with_consonant_replace_that_with_w_o ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _w _o) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _o _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _w))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _a $0)) _o _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _w))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 20.93501567840576
        },
        "re2_test_117_if_the_word_starts_with_vowel_any_letter_replace_that_with_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_117_if_the_word_starts_with_vowel_any_letter_replace_that_with_u ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) _u (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_118_if_the_word_starts_with_any_letter_consonant_replace_that_with_n_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_118_if_the_word_starts_with_any_letter_consonant_replace_that_with_n_y ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _n _y) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_119_if_the_word_starts_with_consonant_replace_that_with_f_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_119_if_the_word_starts_with_consonant_replace_that_with_f_i ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _f _i) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_120_if_there_is_any_letter_vowel_add_l_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_120_if_there_is_any_letter_vowel_add_l_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _l $0) $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_121_if_the_word_starts_with_any_letter_replace_that_with_w_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_121_if_the_word_starts_with_any_letter_replace_that_with_w_n ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _w _n) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _n _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _w))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _n _rempty) _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _n) _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.5879168510437
        },
        "re2_test_122_if_there_is_any_letter_replace_that_with_h_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_122_if_there_is_any_letter_replace_that_with_h_j ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _h _j) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _j _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _j) _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _rempty (_rconcat _h _j)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _j) _j _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _x) _j _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 13.956392765045166
        },
        "re2_test_123_if_the_word_ends_with_consonant_replace_that_with_g_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_123_if_the_word_ends_with_consonant_replace_that_with_g_x ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _g _x) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _x _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _x (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _x (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _x)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _x)))) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 27.9302875995636
        },
        "re2_test_124_if_the_word_ends_with_any_letter_replace_that_with_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_124_if_the_word_ends_with_any_letter_replace_that_with_m ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) _m (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _m _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _rempty _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _j) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 13.966429948806763
        },
        "re2_test_125_if_there_is_n_consonant_add_y_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_125_if_there_is_n_consonant_add_y_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _n (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat $0 _y) $0)) (_rsplit (_rconcat _n (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_126_if_there_is_any_letter_add_w_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_126_if_there_is_any_letter_add_w_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat $0 _w) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _w)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _w)) (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat $0 _rempty) _w)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat $0 _w) _rempty)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat _rempty $0) _w)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.04498815536499
        },
        "re2_test_127_if_the_word_starts_with_any_letter_replace_that_with_m_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_127_if_the_word_starts_with_any_letter_replace_that_with_m_d ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _m _d) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _d _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _d _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _d _rempty) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _m _d) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _m _d) (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.083736419677734
        },
        "re2_test_128_if_the_word_ends_with_vowel_any_letter_replace_that_with_v_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_128_if_the_word_ends_with_vowel_any_letter_replace_that_with_v_f ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat _v _f) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_129_if_there_is_vowel_s_replace_that_with_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_129_if_there_is_vowel_s_replace_that_with_l ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _s) $0) _l $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _s) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_130_if_there_is_any_letter_vowel_add_f_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_130_if_there_is_any_letter_vowel_add_f_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat $0 _f) $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_131_if_the_word_ends_with_vowel_any_letter_replace_that_with_g_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_131_if_the_word_ends_with_vowel_any_letter_replace_that_with_g_t ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat _g _t) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_132_if_the_word_starts_with_any_letter_replace_that_with_b_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_132_if_the_word_starts_with_any_letter_replace_that_with_b_b ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _b _b) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _b _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b _b))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _b (_rconcat _b _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _a $0)) _b _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 13.95138144493103
        },
        "re2_test_133_if_there_is_u_replace_that_with_m_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_133_if_there_is_u_replace_that_with_m_v ((lambda (_rflatten (map (lambda (if (_rmatch _u $0) (_rconcat _m _v) $0)) (_rsplit _u $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _v) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _m _v) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _m _rempty) _v) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _m _v) _rempty) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _v) _u))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 34.96469855308533
        },
        "re2_test_134_if_there_is_vowel_any_letter_add_s_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_134_if_there_is_vowel_any_letter_add_s_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) (_rconcat _s $0) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_135_if_the_word_starts_with_consonant_vowel_replace_that_with_l_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_135_if_the_word_starts_with_consonant_vowel_replace_that_with_l_t ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _l _t) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_136_if_there_is_a_add_m_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_136_if_there_is_a_add_m_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _a $0) (_rconcat _m $0) $0)) (_rsplit _a $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _a) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _m _a) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _a) (_rconcat _a _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _a) (_rconcat _rempty _a)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _a) _a))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.25132441520691
        },
        "re2_test_137_if_there_is_consonant_any_letter_add_j_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_137_if_there_is_consonant_any_letter_add_j_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0) (_rconcat $0 _j) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_138_if_there_is_i_vowel_replace_that_with_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_138_if_there_is_i_vowel_replace_that_with_d ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _i (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _d $0)) (_rsplit (_rconcat _i (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_139_if_the_word_ends_with_consonant_add_l_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_139_if_the_word_ends_with_consonant_add_l_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)) _l) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _l (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _l (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _l (_rsplit _a $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 13.94901418685913
        },
        "re2_test_140_if_there_is_vowel_r_replace_that_with_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_140_if_there_is_vowel_r_replace_that_with_s ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _r) $0) _s $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _r) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_141_if_the_word_ends_with_vowel_any_letter_add_i_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_141_if_the_word_ends_with_vowel_any_letter_add_i_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)) _i) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_142_if_the_word_ends_with_consonant_consonant_replace_that_with_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_142_if_the_word_ends_with_consonant_consonant_replace_that_with_v ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _v (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_143_if_the_word_ends_with_consonant_consonant_replace_that_with_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_143_if_the_word_ends_with_consonant_consonant_replace_that_with_u ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _u (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_144_if_the_word_starts_with_any_letter_replace_that_with_e_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_144_if_the_word_starts_with_any_letter_replace_that_with_e_p ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _e _p) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _p _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _p _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _p _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _p _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _e (cons _p (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.40248346328735
        },
        "re2_test_145_if_there_is_m_add_r_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_145_if_there_is_m_add_r_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _m $0) (_rconcat _r $0) $0)) (_rsplit _m $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _m) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _r _m) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _m) _m))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r (_rconcat _m _rempty)) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _m) (_rconcat _m _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.70718288421631
        },
        "re2_test_146_if_there_is_s_consonant_add_n_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_146_if_there_is_s_consonant_add_n_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _s (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat $0 _n) $0)) (_rsplit (_rconcat _s (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_147_if_the_word_ends_with_vowel_consonant_replace_that_with_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_147_if_the_word_ends_with_vowel_consonant_replace_that_with_u ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _u (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_148_if_there_is_consonant_vowel_replace_that_with_y_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_148_if_there_is_consonant_vowel_replace_that_with_y_d ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _y _d) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_149_if_there_is_any_letter_add_x_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_149_if_there_is_any_letter_add_x_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _x $0) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _x $0)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _x $0)) (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (_rflatten (map (lambda (_rconcat _x $0)) (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _rempty (map (lambda (_rconcat _x $0)) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat (_rconcat _rempty _x) $0)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.06294083595276
        },
        "re2_test_150_if_the_word_ends_with_any_letter_any_letter_add_d_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_150_if_the_word_ends_with_any_letter_any_letter_add_d_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _rdot) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat _d (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_151_if_there_is_d_vowel_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_151_if_there_is_d_vowel_remove_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _d (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _rempty $0)) (_rsplit (_rconcat _d (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_152_if_there_is_consonant_replace_that_with_l_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_152_if_there_is_consonant_replace_that_with_l_a ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _l _a) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_153_if_there_is_o_any_letter_replace_that_with_t_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_153_if_there_is_o_any_letter_replace_that_with_t_f ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _o _rdot) $0) (_rconcat _t _f) $0)) (_rsplit (_rconcat _o _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_154_if_there_is_e_replace_that_with_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_154_if_there_is_e_replace_that_with_h ((lambda (_rflatten (map (lambda (if (_rmatch _e $0) _h $0)) (_rsplit _e $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _h _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _h _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _h _rempty) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _h) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (car (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _s _h))) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 27.99004864692688
        },
        "re2_test_155_if_there_is_vowel_replace_that_with_f_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_155_if_there_is_vowel_replace_that_with_f_c ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _f _c) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_156_if_there_is_i_any_letter_replace_that_with_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_156_if_there_is_i_any_letter_replace_that_with_c ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _i _rdot) $0) _c $0)) (_rsplit (_rconcat _i _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_157_if_there_is_h_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_157_if_there_is_h_replace_that_with_t ((lambda (_rflatten (map (lambda (if (_rmatch _h $0) _t $0)) (_rsplit _h $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _t _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _t) _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t _rempty) _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _rempty _t) _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _t) (_rconcat _h _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.2432975769043
        },
        "re2_test_158_if_the_word_ends_with_d_replace_that_with_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_158_if_the_word_ends_with_d_replace_that_with_o ((lambda (_rflatten (_rappend (if (_rmatch _d (_rtail (_rsplit _d $0))) _o (_rtail (_rsplit _d $0))) (_rrevcdr (_rsplit _d $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _o _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _o _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _o _d))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _o (_rconcat _d _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (_rsplit _rempty $0)) _o _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.34213423728943
        },
        "re2_test_159_if_the_word_ends_with_consonant_any_letter_add_c_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_159_if_the_word_ends_with_consonant_any_letter_add_c_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _c (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_160_if_the_word_starts_with_consonant_any_letter_add_h_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_160_if_the_word_starts_with_consonant_any_letter_add_h_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)) _h) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_161_if_the_word_starts_with_consonant_add_d_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_161_if_the_word_starts_with_consonant_add_d_before_that ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _d (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _d (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _d (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _d (_rsplit _a $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _d (_rsplit _rdot $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _d (_rsplit _v $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.082152128219604
        },
        "re2_test_162_if_the_word_ends_with_consonant_replace_that_with_y_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_162_if_the_word_ends_with_consonant_replace_that_with_y_x ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _y _x) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _x _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _y)) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _y (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _y (_rrevcdr (_rsplit _rempty $0))) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _y (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _x (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.146602153778076
        },
        "re2_test_163_if_the_word_starts_with_consonant_replace_that_with_f_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_163_if_the_word_starts_with_consonant_replace_that_with_f_l ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _f _l) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _l _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _l _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _f _l) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _l (car (#(lambda (_rsplit _rdot $0)) (_rflatten (cons _f (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _l (car (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _s _f)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.504209756851196
        },
        "re2_test_164_if_the_word_starts_with_any_letter_vowel_add_h_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_164_if_the_word_starts_with_any_letter_vowel_add_h_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _h (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_165_if_the_word_starts_with_consonant_replace_that_with_r_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_165_if_the_word_starts_with_consonant_replace_that_with_r_e ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _r _e) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _r)) _rempty $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _r)) _rempty (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _a (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _r)) _rempty $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _r)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _i (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _r)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 83.53331470489502
        },
        "re2_test_166_if_the_word_starts_with_any_letter_consonant_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_166_if_the_word_starts_with_any_letter_consonant_replace_that_with_t ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _t (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_167_if_there_is_consonant_add_b_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_167_if_there_is_consonant_add_b_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _b $0) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_168_if_the_word_starts_with_consonant_any_letter_add_a_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_168_if_the_word_starts_with_consonant_any_letter_add_a_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _a (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _a (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _a (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _a (_rsplit _a $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _a (_rsplit _rdot $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _a (_rsplit _w $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.004732608795166
        },
        "re2_test_169_if_there_is_n_vowel_replace_that_with_m_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_169_if_there_is_n_vowel_replace_that_with_m_s ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _n (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _m _s) $0)) (_rsplit (_rconcat _n (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_170_if_the_word_starts_with_any_letter_replace_that_with_h_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_170_if_the_word_starts_with_any_letter_replace_that_with_h_f ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _h _f) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _f _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _f _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _f _rempty) _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _f (car (map (lambda _h) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _f (car (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _s _h)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.39753222465515
        },
        "re2_test_171_if_the_word_starts_with_consonant_replace_that_with_e_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_171_if_the_word_starts_with_consonant_replace_that_with_e_j ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _e _j) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch (_rtail (#(lambda (_rsplit _rdot $0)) $0)) _y) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j _e)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _y (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j _e)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _a (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j _e)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _a (car (#(lambda (_rsplit _rdot $0)) $0))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j _e)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _a (car (#(lambda (_rsplit _rdot $0)) $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _y) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j _e)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 89.58943104743958
        },
        "re2_test_172_if_the_word_starts_with_consonant_any_letter_replace_that_with_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_172_if_the_word_starts_with_consonant_any_letter_replace_that_with_l ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) _l (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_173_if_the_word_starts_with_consonant_replace_that_with_j_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_173_if_the_word_starts_with_consonant_replace_that_with_j_n ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _j _n) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_174_if_there_is_vowel_vowel_replace_that_with_m_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_174_if_there_is_vowel_vowel_replace_that_with_m_l ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _m _l) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_175_if_there_is_vowel_replace_that_with_a_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_175_if_there_is_vowel_replace_that_with_a_q ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _a _q) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_176_if_the_word_ends_with_any_letter_add_m_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_176_if_the_word_ends_with_any_letter_add_m_before_that ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _m (_rtail (_rsplit _rdot $0))) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _m (_rtail (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _m (_rtail (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rtail (map (lambda (_rconcat _m $0)) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _m _m)) (_rtail (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _m _l)) (_rtail (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 73.1986095905304
        },
        "re2_test_177_if_the_word_starts_with_any_letter_a_replace_that_with_x_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_177_if_the_word_starts_with_any_letter_a_replace_that_with_x_b ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _a) (car (_rsplit (_rconcat _rdot _a) $0))) (_rconcat _x _b) (car (_rsplit (_rconcat _rdot _a) $0))) (cdr (_rsplit (_rconcat _rdot _a) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_178_if_the_word_ends_with_any_letter_replace_that_with_p_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_178_if_the_word_ends_with_any_letter_replace_that_with_p_q ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _p _q) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _q _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _p)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _a _p) _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _rempty (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _p)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _rempty (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _rempty _p)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 57.09346389770508
        },
        "re2_test_179_if_the_word_starts_with_vowel_replace_that_with_o_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_179_if_the_word_starts_with_vowel_replace_that_with_o_s ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _o _s) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_180_if_there_is_e_replace_that_with_r_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_180_if_there_is_e_replace_that_with_r_u ((lambda (_rflatten (map (lambda (if (_rmatch _e $0) (_rconcat _r _u) $0)) (_rsplit _e $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _u) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _r _u) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _u) _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _r _rempty) _u) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _r _u) _rempty) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.15235877037048
        },
        "re2_test_181_if_there_is_m_replace_that_with_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_181_if_there_is_m_replace_that_with_r ((lambda (_rflatten (map (lambda (if (_rmatch _m $0) _r $0)) (_rsplit _m $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _r _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _r _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _rempty) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _r) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _r (_rconcat _m _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.23397779464722
        },
        "re2_test_182_if_the_word_starts_with_consonant_consonant_add_w_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_182_if_the_word_starts_with_consonant_consonant_add_w_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _w) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_183_if_the_word_starts_with_vowel_consonant_add_g_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_183_if_the_word_starts_with_vowel_consonant_add_g_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _g) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _g) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _m _g) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _g) _m))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _m _g) _rempty) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _g) (_rconcat _m _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.48909020423889
        },
        "re2_test_184_if_there_is_consonant_t_add_s_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_184_if_there_is_consonant_t_add_s_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _t) $0) (_rconcat _s $0) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _t) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_185_if_the_word_ends_with_consonant_replace_that_with_t_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_185_if_the_word_ends_with_consonant_replace_that_with_t_c ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _t _c) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t _c) (_rtail (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _g _i)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch (_rnot _i) (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _t _c)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch (_rnot _i) (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _t _c)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 119.10300469398499
        },
        "re2_test_186_if_there_is_vowel_replace_that_with_m_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_186_if_there_is_vowel_replace_that_with_m_x ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _m _x) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_187_if_there_is_r_add_v_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_187_if_there_is_r_add_v_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) (_rconcat $0 _v) $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _v) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _r _v) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _r _rempty) _v) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _r _v) _rempty) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _v) (_rconcat _r _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.39185905456543
        },
        "re2_test_188_if_there_is_any_letter_vowel_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_188_if_there_is_any_letter_vowel_replace_that_with_q ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _q $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_189_if_there_is_i_replace_that_with_w_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_189_if_there_is_i_replace_that_with_w_d ((lambda (_rflatten (map (lambda (if (_rmatch _i $0) (_rconcat _w _d) $0)) (_rsplit _i $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w _d) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _w _d) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w _d) _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w _d) _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w _d) _i) _m _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.81798315048218
        },
        "re2_test_190_if_the_word_starts_with_consonant_any_letter_replace_that_with_h_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_190_if_the_word_starts_with_consonant_any_letter_replace_that_with_h_t ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _h _t) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _t _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _t _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 (_rconcat _h _t) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 (_rconcat _rempty _t) _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty (_rconcat _h _t)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 64.31182909011841
        },
        "re2_test_191_if_there_is_n_replace_that_with_c_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_191_if_there_is_n_replace_that_with_c_q ((lambda (_rflatten (map (lambda (if (_rmatch _n $0) (_rconcat _c _q) $0)) (_rsplit _n $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _q) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _c _q) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _q) _n))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _c _q)) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _q) _n))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 21.16023015975952
        },
        "re2_test_192_if_there_is_any_letter_add_u_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_192_if_there_is_any_letter_add_u_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _u $0) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _u $0)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _u $0)) (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _u $0)) (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda $0) (map (lambda (_rconcat _u $0)) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _rempty (map (lambda (_rconcat _u $0)) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.27733111381531
        },
        "re2_test_193_if_there_is_i_consonant_replace_that_with_j_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_193_if_there_is_i_consonant_replace_that_with_j_v ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _i (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _j _v) $0)) (_rsplit (_rconcat _i (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_194_if_there_is_consonant_e_add_y_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_194_if_there_is_consonant_e_add_y_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0) (_rconcat _y $0) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_195_if_there_is_t_add_r_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_195_if_there_is_t_add_r_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat $0 _r) $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t _r) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _t _r) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t _r) _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t (_rconcat _r _rempty)) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t _r) (_rconcat _t _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.31985688209534
        },
        "re2_test_196_if_the_word_ends_with_vowel_any_letter_add_t_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_196_if_the_word_ends_with_vowel_any_letter_add_t_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)) _t) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_197_if_there_is_vowel_r_add_j_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_197_if_there_is_vowel_r_add_j_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _r) $0) (_rconcat _j $0) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _r) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_198_if_there_is_l_vowel_replace_that_with_x_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_198_if_there_is_l_vowel_replace_that_with_x_n ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _l (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _x _n) $0)) (_rsplit (_rconcat _l (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_199_if_the_word_starts_with_vowel_replace_that_with_c_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_199_if_the_word_starts_with_vowel_replace_that_with_c_x ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _c _x) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_200_if_the_word_ends_with_consonant_add_w_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_200_if_the_word_ends_with_consonant_add_w_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)) _w) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _w $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _w (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _w)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _w))) _w $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 0.0002853870391845703
        },
        "re2_test_201_if_there_is_i_replace_that_with_s_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_201_if_there_is_i_replace_that_with_s_p ((lambda (_rflatten (map (lambda (if (_rmatch _i $0) (_rconcat _s _p) $0)) (_rsplit _i $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _s _p) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _s _p) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _s _p) _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _s _p) _rempty) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _s _rempty) _p) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 64.29056286811829
        },
        "re2_test_202_if_the_word_ends_with_any_letter_consonant_add_t_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_202_if_the_word_ends_with_any_letter_consonant_add_t_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _t (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_203_if_there_is_vowel_replace_that_with_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_203_if_there_is_vowel_replace_that_with_g ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) _g $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_204_if_the_word_ends_with_any_letter_replace_that_with_r_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_204_if_the_word_ends_with_any_letter_replace_that_with_r_r ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _r _r) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _r _r)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _r (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rconcat _r _r) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r)) _r (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (_rappend _q (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r)))) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 28.21012854576111
        },
        "re2_test_205_if_the_word_starts_with_vowel_consonant_replace_that_with_y_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_205_if_the_word_starts_with_vowel_consonant_replace_that_with_y_v ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _y _v) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_206_if_there_is_consonant_vowel_replace_that_with_o_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_206_if_there_is_consonant_vowel_replace_that_with_o_q ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _o _q) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_207_if_there_is_p_replace_that_with_x_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_207_if_there_is_p_replace_that_with_x_c ((lambda (_rflatten (map (lambda (if (_rmatch _p $0) (_rconcat _x _c) $0)) (_rsplit _p $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _x _c) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _x _c) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _x _c) _p))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _x) _c) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _x _c) _p))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.84850215911865
        },
        "re2_test_208_if_there_is_a_replace_that_with_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_208_if_there_is_a_replace_that_with_h ((lambda (_rflatten (map (lambda (if (_rmatch _a $0) _h $0)) (_rsplit _a $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _h _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _h _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _h _a))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _h _rempty) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _h) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.412827491760254
        },
        "re2_test_209_if_there_is_i_any_letter_replace_that_with_q_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_209_if_there_is_i_any_letter_replace_that_with_q_c ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _i _rdot) $0) (_rconcat _q _c) $0)) (_rsplit (_rconcat _i _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_210_if_the_word_starts_with_any_letter_o_replace_that_with_t_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_210_if_the_word_starts_with_any_letter_o_replace_that_with_t_b ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _o) (car (_rsplit (_rconcat _rdot _o) $0))) (_rconcat _t _b) (car (_rsplit (_rconcat _rdot _o) $0))) (cdr (_rsplit (_rconcat _rdot _o) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_211_if_there_is_c_replace_that_with_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_211_if_there_is_c_replace_that_with_k ((lambda (_rflatten (map (lambda (if (_rmatch _c $0) _k $0)) (_rsplit _c $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _k _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _k _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _rempty) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _k) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _k (_rconcat _c _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.418081521987915
        },
        "re2_test_212_if_there_is_vowel_n_replace_that_with_s_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_212_if_there_is_vowel_n_replace_that_with_s_i ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _n) $0) (_rconcat _s _i) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _n) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_213_if_the_word_starts_with_any_letter_consonant_add_t_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_213_if_the_word_starts_with_any_letter_consonant_add_t_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _t) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_214_if_there_is_any_letter_l_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_214_if_there_is_any_letter_l_remove_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _l) $0) _rempty $0)) (_rsplit (_rconcat _rdot _l) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_215_if_the_word_ends_with_any_letter_consonant_add_l_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_215_if_the_word_ends_with_any_letter_consonant_add_l_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _l) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _a $0) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _y $0) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (#(lambda (_rsplit _rdot $0)) $0)) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 14.121570348739624
        },
        "re2_test_216_if_the_word_ends_with_consonant_any_letter_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_216_if_the_word_ends_with_consonant_any_letter_replace_that_with_t ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) _t (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_217_if_there_is_u_add_k_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_217_if_there_is_u_add_k_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _u $0) (_rconcat $0 _k) $0)) (_rsplit _u $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _u _k) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _u _k) _u))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _u (_rconcat _k _rempty)) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _u _k) (_rconcat _rempty _u)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _u _k) (_rconcat _u _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 64.32169842720032
        },
        "re2_test_218_if_the_word_ends_with_any_letter_replace_that_with_m_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_218_if_the_word_ends_with_any_letter_replace_that_with_m_r ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _m _r) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _m _r)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _m _r)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _m _r)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _w _m) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _m _m)) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.41059708595276
        },
        "re2_test_219_if_the_word_starts_with_consonant_add_h_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_219_if_the_word_starts_with_consonant_add_h_before_that ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _h (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _h (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _h (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _h (_rsplit _a $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _h (_rsplit _i $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _h (_rsplit _v $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.431602001190186
        },
        "re2_test_220_if_there_is_any_letter_vowel_add_x_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_220_if_there_is_any_letter_vowel_add_x_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat $0 _x) $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_221_if_the_word_starts_with_vowel_replace_that_with_v_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_221_if_the_word_starts_with_vowel_replace_that_with_v_o ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _v _o) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_222_if_the_word_starts_with_consonant_replace_that_with_w_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_222_if_the_word_starts_with_consonant_replace_that_with_w_y ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _w _y) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _y _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _y _rempty) _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _w (cons _y (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _u (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _w)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.445226430892944
        },
        "re2_test_223_if_the_word_starts_with_any_letter_add_w_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_223_if_the_word_starts_with_any_letter_add_w_after_that ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat (car (_rsplit _rdot $0)) _w) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w (car (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w (car (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _w (car (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w (car (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w (car (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.75317883491516
        },
        "re2_test_224_if_the_word_starts_with_consonant_consonant_replace_that_with_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_224_if_the_word_starts_with_consonant_consonant_replace_that_with_v ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _v (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_225_if_there_is_consonant_any_letter_replace_that_with_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_225_if_there_is_consonant_any_letter_replace_that_with_k ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0) _k $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_226_if_there_is_t_any_letter_add_j_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_226_if_there_is_t_any_letter_add_j_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _t _rdot) $0) (_rconcat $0 _j) $0)) (_rsplit (_rconcat _t _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_227_if_there_is_vowel_t_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_227_if_there_is_vowel_t_remove_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _t) $0) _rempty $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _t) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_228_if_there_is_a_replace_that_with_g_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_228_if_there_is_a_replace_that_with_g_w ((lambda (_rflatten (map (lambda (if (_rmatch _a $0) (_rconcat _g _w) $0)) (_rsplit _a $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _g _w) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 64.98275995254517
        },
        "re2_test_229_if_there_is_any_letter_vowel_replace_that_with_h_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_229_if_there_is_any_letter_vowel_replace_that_with_h_d ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _h _d) $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_230_if_the_word_ends_with_any_letter_add_p_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_230_if_the_word_ends_with_any_letter_add_p_before_that ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _p (_rtail (_rsplit _rdot $0))) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 (_rtail (#(lambda (_rsplit _rdot $0)) $0)) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _p (_rtail (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _p) (_rtail (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _p) (_rtail (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rtail (map (lambda (_rconcat _p $0)) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 96.99100399017334
        },
        "re2_test_231_if_there_is_any_letter_replace_that_with_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_231_if_there_is_any_letter_replace_that_with_g ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) _g $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _g _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _rempty _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _g) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _g _rdot))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda _k) (#(lambda (_rsplit _rdot $0)) $0))) _g _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 21.35571002960205
        },
        "re2_test_232_if_the_word_starts_with_any_letter_add_u_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_232_if_the_word_starts_with_any_letter_add_u_before_that ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _u (car (_rsplit _rdot $0))) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _u (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _u (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _u (_rsplit _a $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _u (_rsplit _r $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _u (_rsplit _o $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.50668978691101
        },
        "re2_test_233_if_there_is_vowel_any_letter_add_a_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_233_if_there_is_vowel_any_letter_add_a_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) (_rconcat $0 _a) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_234_if_there_is_any_letter_vowel_replace_that_with_e_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_234_if_there_is_any_letter_vowel_replace_that_with_e_x ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _e _x) $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_235_if_the_word_ends_with_any_letter_consonant_add_h_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_235_if_the_word_ends_with_any_letter_consonant_add_h_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _h (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_236_if_the_word_starts_with_consonant_replace_that_with_i_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_236_if_the_word_starts_with_consonant_replace_that_with_i_k ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _i _k) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _o (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _k _i)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 842.4538743495941
        },
        "re2_test_237_if_the_word_starts_with_consonant_vowel_replace_that_with_v_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_237_if_the_word_starts_with_consonant_vowel_replace_that_with_v_d ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _v _d) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_238_if_there_is_vowel_replace_that_with_p_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_238_if_there_is_vowel_replace_that_with_p_s ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _p _s) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_239_if_there_is_i_any_letter_replace_that_with_b_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_239_if_there_is_i_any_letter_replace_that_with_b_n ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _i _rdot) $0) (_rconcat _b _n) $0)) (_rsplit (_rconcat _i _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_240_if_there_is_vowel_any_letter_replace_that_with_m_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_240_if_there_is_vowel_any_letter_replace_that_with_m_y ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) (_rconcat _m _y) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_241_if_there_is_any_letter_consonant_add_l_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_241_if_there_is_any_letter_consonant_add_l_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat $0 _l) $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_242_if_there_is_a_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_242_if_there_is_a_replace_that_with_j ((lambda (_rflatten (map (lambda (if (_rmatch _a $0) _j $0)) (_rsplit _a $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _j _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _j _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _j _rempty) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _j) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _j (_rconcat _a _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 28.337724924087524
        },
        "re2_test_243_if_there_is_any_letter_any_letter_replace_that_with_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_243_if_there_is_any_letter_any_letter_replace_that_with_h ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _rdot) $0) _h $0)) (_rsplit (_rconcat _rdot _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_244_if_there_is_n_replace_that_with_c_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_244_if_there_is_n_replace_that_with_c_e ((lambda (_rflatten (map (lambda (if (_rmatch _n $0) (_rconcat _c _e) $0)) (_rsplit _n $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _e) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _c _e) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _e) _n))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _c _e) _rempty) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _c _rempty) _e) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.49652552604675
        },
        "re2_test_245_if_there_is_l_replace_that_with_x_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_245_if_there_is_l_replace_that_with_x_k ((lambda (_rflatten (map (lambda (if (_rmatch _l $0) (_rconcat _x _k) $0)) (_rsplit _l $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _x _k) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _x) _k) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _x _k) _rempty) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _x _rempty) _k) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _x (_rconcat _k _rempty)) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.788450717926025
        },
        "re2_test_246_if_the_word_starts_with_any_letter_replace_that_with_x_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_246_if_the_word_starts_with_any_letter_replace_that_with_x_h ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _x _h) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h _x))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _h _x))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _h _rempty) _x))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _h) _x))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h (_rconcat _rempty _x)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.57120728492737
        },
        "re2_test_247_if_the_word_starts_with_consonant_any_letter_add_j_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_247_if_the_word_starts_with_consonant_any_letter_add_j_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)) _j) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_248_if_the_word_ends_with_any_letter_consonant_add_c_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_248_if_the_word_ends_with_any_letter_consonant_add_c_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _c (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_249_if_the_word_ends_with_d_replace_that_with_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_249_if_the_word_ends_with_d_replace_that_with_s ((lambda (_rflatten (_rappend (if (_rmatch _d (_rtail (_rsplit _d $0))) _s (_rtail (_rsplit _d $0))) (_rrevcdr (_rsplit _d $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _d (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _s) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 158.99275922775269
        },
        "re2_test_250_if_there_is_vowel_consonant_replace_that_with_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_250_if_there_is_vowel_consonant_replace_that_with_s ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _s $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_251_if_the_word_starts_with_vowel_replace_that_with_w_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_251_if_the_word_starts_with_vowel_replace_that_with_w_e ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _w _e) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_252_if_the_word_starts_with_vowel_add_a_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_252_if_the_word_starts_with_vowel_add_a_after_that ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)) _a) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_253_if_the_word_ends_with_d_replace_that_with_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_253_if_the_word_ends_with_d_replace_that_with_b ((lambda (_rflatten (_rappend (if (_rmatch _d (_rtail (_rsplit _d $0))) _b (_rtail (_rsplit _d $0))) (_rrevcdr (_rsplit _d $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _b _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _b _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _b _d))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _b _rempty) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _b) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.58535885810852
        },
        "re2_test_254_if_the_word_starts_with_vowel_replace_that_with_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_254_if_the_word_starts_with_vowel_replace_that_with_d ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) _d (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_255_if_there_is_vowel_replace_that_with_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_255_if_there_is_vowel_replace_that_with_a ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) _a $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_256_if_the_word_starts_with_consonant_replace_that_with_v_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_256_if_the_word_starts_with_consonant_replace_that_with_v_y ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _v _y) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _v))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _y _rempty) _v))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y (_rconcat _v _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _v (cons _y (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _v (_rsplit _a (_rflatten (cons _y (cdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.53558278083801
        },
        "re2_test_257_if_there_is_vowel_consonant_add_a_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_257_if_there_is_vowel_consonant_add_a_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat $0 _a) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_258_if_there_is_any_letter_consonant_add_e_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_258_if_there_is_any_letter_consonant_add_e_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _e $0) $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_259_if_there_is_any_letter_replace_that_with_y_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_259_if_there_is_any_letter_replace_that_with_y_p ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _y _p) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _p _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _p _y))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _p _y))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda _k) (#(lambda (_rsplit _rdot $0)) $0))) _p _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda _p) (#(lambda (_rsplit _rdot $0)) $0))) _p _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 14.268004655838013
        },
        "re2_test_260_if_there_is_r_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_260_if_there_is_r_remove_that ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) _rempty $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _rempty _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _rempty _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _rempty) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _rempty (_rconcat _r _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _rempty (_rconcat _rempty _r)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 28.399736642837524
        },
        "re2_test_261_if_the_word_ends_with_s_replace_that_with_b_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_261_if_the_word_ends_with_s_replace_that_with_b_r ((lambda (_rflatten (_rappend (if (_rmatch _s (_rtail (_rsplit _s $0))) (_rconcat _b _r) (_rtail (_rsplit _s $0))) (_rrevcdr (_rsplit _s $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _r _b) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _b _r)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 193.56714415550232
        },
        "re2_test_262_if_there_is_d_replace_that_with_g_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_262_if_there_is_d_replace_that_with_g_y ((lambda (_rflatten (map (lambda (if (_rmatch _d $0) (_rconcat _g _y) $0)) (_rsplit _d $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _g _y) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _g _y) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _g) _y) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _g _y)) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _y) _d) _g _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.46265482902527
        },
        "re2_test_263_if_there_is_any_letter_consonant_add_h_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_263_if_there_is_any_letter_consonant_add_h_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat $0 _h) $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_264_if_the_word_ends_with_vowel_consonant_replace_that_with_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_264_if_the_word_ends_with_vowel_consonant_replace_that_with_f ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _f (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_265_if_there_is_any_letter_i_replace_that_with_m_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_265_if_there_is_any_letter_i_replace_that_with_m_n ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _i) $0) (_rconcat _m _n) $0)) (_rsplit (_rconcat _rdot _i) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_266_if_the_word_starts_with_consonant_replace_that_with_e_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_266_if_the_word_starts_with_consonant_replace_that_with_e_o ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _e _o) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _o _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _e))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _o) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _a $0)) _o _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 28.40134310722351
        },
        "re2_test_267_if_the_word_starts_with_any_letter_vowel_replace_that_with_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_267_if_the_word_starts_with_any_letter_vowel_replace_that_with_l ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _l (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_268_if_the_word_starts_with_any_letter_consonant_replace_that_with_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_268_if_the_word_starts_with_any_letter_consonant_replace_that_with_a ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _a (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _a _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _a (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _a _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (_rflatten (cons _a (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.6360125541687
        },
        "re2_test_269_if_there_is_any_letter_vowel_add_t_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_269_if_there_is_any_letter_vowel_add_t_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat $0 _t) $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_270_if_the_word_ends_with_any_letter_replace_that_with_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_270_if_the_word_ends_with_any_letter_replace_that_with_e ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) _e (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _e $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (_rsplit _rempty $0)) _e $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _e (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _e)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 28.439334392547607
        },
        "re2_test_271_if_the_word_starts_with_consonant_vowel_replace_that_with_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_271_if_the_word_starts_with_consonant_vowel_replace_that_with_p ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _p (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _y (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (_rflatten (cons _p (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _p (cdr (cdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _a) _p)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _p (cdr (cdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _a) _p)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _p (cdr (cdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _e) _p)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _p (cdr (cdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _d _p) _p)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 747.9599721431732
        },
        "re2_test_272_if_the_word_starts_with_consonant_replace_that_with_f_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_272_if_the_word_starts_with_consonant_replace_that_with_f_x ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _f _x) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _f))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x (_rconcat _f _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _f _x) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _f _x)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _f _x) (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.576380491256714
        },
        "re2_test_273_if_there_is_consonant_any_letter_add_x_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_273_if_there_is_consonant_any_letter_add_x_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0) (_rconcat $0 _x) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_274_if_the_word_starts_with_vowel_any_letter_replace_that_with_v_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_274_if_the_word_starts_with_vowel_any_letter_replace_that_with_v_p ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat _v _p) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_275_if_the_word_ends_with_consonant_add_x_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_275_if_the_word_ends_with_consonant_add_x_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)) _x) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _rempty $0) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _x (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (#(lambda (_rsplit _rdot $0)) $0)) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (_rsplit _rempty $0)) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 21.497713804244995
        },
        "re2_test_276_if_there_is_l_any_letter_add_q_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_276_if_there_is_l_any_letter_add_q_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _l _rdot) $0) (_rconcat _q $0) $0)) (_rsplit (_rconcat _l _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_277_if_there_is_consonant_consonant_replace_that_with_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_277_if_there_is_consonant_consonant_replace_that_with_i ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _i $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_278_if_there_is_l_vowel_replace_that_with_s_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_278_if_there_is_l_vowel_replace_that_with_s_f ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _l (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _s _f) $0)) (_rsplit (_rconcat _l (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_279_if_the_word_starts_with_consonant_add_q_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_279_if_the_word_starts_with_consonant_add_q_before_that ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _q (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _a (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (_rflatten (cons _q (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _a (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (_rflatten (cons _q (_rsplit _a $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _a (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (_rflatten (cons _q (_rsplit _i $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _a (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (_rflatten (cons _q (_rsplit _m $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _a (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (car (#(lambda (_rsplit _rdot $0)) $0)) _q)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 76.32274317741394
        },
        "re2_test_280_if_there_is_n_any_letter_replace_that_with_d_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_280_if_there_is_n_any_letter_replace_that_with_d_j ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _n _rdot) $0) (_rconcat _d _j) $0)) (_rsplit (_rconcat _n _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_281_if_the_word_starts_with_any_letter_replace_that_with_w_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_281_if_the_word_starts_with_any_letter_replace_that_with_w_x ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _w _x) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _x _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _x) _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _w _x) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _x _rempty) _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 28.522215843200684
        },
        "re2_test_282_if_there_is_g_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_282_if_there_is_g_remove_that ((lambda (_rflatten (map (lambda (if (_rmatch _g $0) _rempty $0)) (_rsplit _g $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _rempty _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _rempty _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _rempty _g))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _rempty) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _rempty _g))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 21.513817310333252
        },
        "re2_test_283_if_there_is_b_replace_that_with_a_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_283_if_there_is_b_replace_that_with_a_m ((lambda (_rflatten (map (lambda (if (_rmatch _b $0) (_rconcat _a _m) $0)) (_rsplit _b $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _a _m) _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _a _m) _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _a _m) _b))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _a _m) _rempty) _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _a) _m) _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 64.29564070701599
        },
        "re2_test_284_if_the_word_starts_with_consonant_vowel_replace_that_with_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_284_if_the_word_starts_with_consonant_vowel_replace_that_with_c ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _c (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_285_if_there_is_consonant_replace_that_with_f_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_285_if_there_is_consonant_replace_that_with_f_w ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _f _w) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_286_if_there_is_s_any_letter_replace_that_with_h_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_286_if_there_is_s_any_letter_replace_that_with_h_y ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _s _rdot) $0) (_rconcat _h _y) $0)) (_rsplit (_rconcat _s _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_287_if_the_word_ends_with_vowel_any_letter_add_q_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_287_if_the_word_ends_with_vowel_any_letter_add_q_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat _q (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_288_if_there_is_any_letter_h_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_288_if_there_is_any_letter_h_replace_that_with_w ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _h) $0) _w $0)) (_rsplit (_rconcat _rdot _h) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_289_if_there_is_consonant_any_letter_add_e_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_289_if_there_is_consonant_any_letter_add_e_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0) (_rconcat $0 _e) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_290_if_the_word_ends_with_any_letter_any_letter_add_x_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_290_if_the_word_ends_with_any_letter_any_letter_add_x_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _rdot) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat (_rtail (_rsplit (_rconcat _rdot _rdot) $0)) _x) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _rempty $0) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (#(lambda (_rsplit _rdot $0)) $0)) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (_rsplit _rempty $0)) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (_rsplit _a $0)) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 21.51652693748474
        },
        "re2_test_291_if_the_word_starts_with_consonant_vowel_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_291_if_the_word_starts_with_consonant_vowel_replace_that_with_x ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _x (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_292_if_there_is_m_add_q_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_292_if_there_is_m_add_q_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _m $0) (_rconcat $0 _q) $0)) (_rsplit _m $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _q) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _m _q) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _m _rempty) _q) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _q) (_rconcat _m _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _m _q) (_rconcat _rempty _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.86319637298584
        },
        "re2_test_293_if_there_is_c_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_293_if_there_is_c_replace_that_with_x ((lambda (_rflatten (map (lambda (if (_rmatch _c $0) _x $0)) (_rsplit _c $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _x _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _x _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _x) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _x _rempty) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _x _c))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.78005313873291
        },
        "re2_test_294_if_there_is_c_any_letter_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_294_if_there_is_c_any_letter_remove_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _c _rdot) $0) _rempty $0)) (_rsplit (_rconcat _c _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_295_if_there_is_vowel_consonant_replace_that_with_n_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_295_if_there_is_vowel_consonant_replace_that_with_n_q ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _n _q) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_296_if_the_word_starts_with_consonant_consonant_replace_that_with_n_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_296_if_the_word_starts_with_consonant_consonant_replace_that_with_n_f ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _n _f) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_297_if_the_word_starts_with_vowel_consonant_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_297_if_the_word_starts_with_vowel_consonant_replace_that_with_q ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _q (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_298_if_there_is_any_letter_replace_that_with_o_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_298_if_there_is_any_letter_replace_that_with_o_m ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _o _m) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _m _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _rempty (_rconcat _o _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _o _m)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _o _m)) (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _m)) (map (lambda _o) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 28.64567518234253
        },
        "re2_test_299_if_there_is_n_any_letter_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_299_if_there_is_n_any_letter_replace_that_with_t ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _n _rdot) $0) _t $0)) (_rsplit (_rconcat _n _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_300_if_there_is_a_any_letter_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_300_if_there_is_a_any_letter_remove_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _a _rdot) $0) _rempty $0)) (_rsplit (_rconcat _a _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_301_if_there_is_c_add_f_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_301_if_there_is_c_add_f_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _c $0) (_rconcat $0 _f) $0)) (_rsplit _c $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _f) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _c _f) _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _f) _c))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _f) (_rconcat _c _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _f) (_rconcat _rempty _c)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.59861946105957
        },
        "re2_test_302_if_the_word_ends_with_vowel_any_letter_replace_that_with_r_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_302_if_the_word_ends_with_vowel_any_letter_replace_that_with_r_r ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat _r _r) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_303_if_there_is_consonant_vowel_replace_that_with_h_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_303_if_there_is_consonant_vowel_replace_that_with_h_q ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _h _q) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_304_if_the_word_ends_with_any_letter_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_304_if_the_word_ends_with_any_letter_replace_that_with_j ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) _j (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _j))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (_rsplit _rempty $0)) _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _j) _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 7.113313436508179
        },
        "re2_test_305_if_the_word_starts_with_any_letter_replace_that_with_w_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_305_if_the_word_starts_with_any_letter_replace_that_with_w_e ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _w _e) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _e _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _w))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _w _e) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _e) _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 28.570347547531128
        },
        "re2_test_306_if_there_is_u_replace_that_with_f_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_306_if_there_is_u_replace_that_with_f_n ((lambda (_rflatten (map (lambda (if (_rmatch _u $0) (_rconcat _f _n) $0)) (_rsplit _u $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f _n) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _f _n) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f _n) _u))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _f) _n) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f _n) (_rconcat _u _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 64.98429870605469
        },
        "re2_test_307_if_the_word_starts_with_consonant_add_j_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_307_if_the_word_starts_with_consonant_add_j_before_that ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _j (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (_rflatten (cons _j (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _a $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _i $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _j (_rsplit _v $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 21.550034046173096
        },
        "re2_test_308_if_the_word_starts_with_consonant_any_letter_replace_that_with_n_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_308_if_the_word_starts_with_consonant_any_letter_replace_that_with_n_d ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _n _d) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _d _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _d _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cons _rempty (cdr (#(lambda (_rsplit _rdot $0)) $0)))) _d _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cons _w (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))) _d _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cons _f (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))) _d _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 77.07558870315552
        },
        "re2_test_309_if_the_word_starts_with_consonant_any_letter_replace_that_with_y_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_309_if_the_word_starts_with_consonant_any_letter_replace_that_with_y_k ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _y _k) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_310_if_there_is_h_replace_that_with_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_310_if_there_is_h_replace_that_with_f ((lambda (_rflatten (map (lambda (if (_rmatch _h $0) _f $0)) (_rsplit _h $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _f _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _f _h))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _f _rempty) _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _f) _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _f (_rconcat _h _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.80059552192688
        },
        "re2_test_311_if_there_is_any_letter_replace_that_with_t_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_311_if_there_is_any_letter_replace_that_with_t_v ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _t _v) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _v _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _v) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _rempty (_rconcat _t _v)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _t _v)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _t _rempty)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 28.565975427627563
        },
        "re2_test_312_if_the_word_starts_with_any_letter_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_312_if_the_word_starts_with_any_letter_replace_that_with_x ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) _x (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _x))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _x (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _rempty) _x))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _x) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 28.5767662525177
        },
        "re2_test_313_if_the_word_ends_with_consonant_replace_that_with_a_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_313_if_the_word_ends_with_consonant_replace_that_with_a_x ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _a _x) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _a _x)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _a _x)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _a (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _x) (_rconcat _a _x)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) (_rconcat _a _x) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 21.530454874038696
        },
        "re2_test_314_if_there_is_r_any_letter_replace_that_with_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_314_if_there_is_r_any_letter_replace_that_with_l ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _r _rdot) $0) _l $0)) (_rsplit (_rconcat _r _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_315_if_there_is_n_add_r_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_315_if_there_is_n_add_r_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _n $0) (_rconcat $0 _r) $0)) (_rsplit _n $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _r) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _n _r) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _n _r) _rempty) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _n _rempty) _r) _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _r) (_rconcat _n _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.52713918685913
        },
        "re2_test_316_if_the_word_ends_with_consonant_replace_that_with_e_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_316_if_the_word_ends_with_consonant_replace_that_with_e_s ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _e _s) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _s _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _e) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _e) _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _e (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _s $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _e) _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.6274139881134
        },
        "re2_test_317_if_there_is_vowel_replace_that_with_b_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_317_if_there_is_vowel_replace_that_with_b_c ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _b _c) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_318_if_the_word_starts_with_consonant_vowel_replace_that_with_m_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_318_if_the_word_starts_with_consonant_vowel_replace_that_with_m_h ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _m _h) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_319_if_the_word_starts_with_consonant_replace_that_with_c_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_319_if_the_word_starts_with_consonant_replace_that_with_c_d ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _c _d) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_320_if_there_is_any_letter_replace_that_with_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_320_if_there_is_any_letter_replace_that_with_b ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) _b $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _b _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _rempty _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda _b) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _b _rempty))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _rempty _b)) (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 21.497113943099976
        },
        "re2_test_321_if_the_word_starts_with_consonant_vowel_replace_that_with_e_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_321_if_the_word_starts_with_consonant_vowel_replace_that_with_e_g ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _e _g) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_322_if_there_is_r_replace_that_with_n_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_322_if_there_is_r_replace_that_with_n_d ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) (_rconcat _n _d) $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _d) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _n _d) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _d) _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _n _d) _rempty) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n (_rconcat _d _rempty)) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 64.02083158493042
        },
        "re2_test_323_if_there_is_vowel_replace_that_with_v": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_323_if_there_is_vowel_replace_that_with_v ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) _v $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_324_if_the_word_ends_with_s_replace_that_with_l_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_324_if_the_word_ends_with_s_replace_that_with_l_j ((lambda (_rflatten (_rappend (if (_rmatch _s (_rtail (_rsplit _s $0))) (_rconcat _l _j) (_rtail (_rsplit _s $0))) (_rrevcdr (_rsplit _s $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _l _j)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (_rsplit _rempty $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _l _j)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _l _j)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (cons _a (#(lambda (_rsplit _rdot $0)) $0)))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _l _j)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _l _j)) (_rflatten (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 106.90805745124817
        },
        "re2_test_325_if_the_word_starts_with_vowel_replace_that_with_a_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_325_if_the_word_starts_with_vowel_replace_that_with_a_o ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _a _o) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _c (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _a)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 189.14369320869446
        },
        "re2_test_326_if_the_word_starts_with_vowel_replace_that_with_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_326_if_the_word_starts_with_vowel_replace_that_with_p ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) _p (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_327_if_there_is_t_vowel_double_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_327_if_there_is_t_vowel_double_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _t (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat $0 $0) $0)) (_rsplit (_rconcat _t (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_328_if_there_is_any_letter_vowel_replace_that_with_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_328_if_there_is_any_letter_vowel_replace_that_with_d ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _d $0)) (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_329_if_there_is_vowel_replace_that_with_u_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_329_if_there_is_vowel_replace_that_with_u_y ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _u _y) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_330_if_there_is_vowel_replace_that_with_h_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_330_if_there_is_vowel_replace_that_with_h_l ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _h _l) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_331_if_there_is_consonant_replace_that_with_f_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_331_if_there_is_consonant_replace_that_with_f_g ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _f _g) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_332_if_the_word_ends_with_consonant_replace_that_with_q_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_332_if_the_word_ends_with_consonant_replace_that_with_q_q ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _q _q) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _q _q)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _q _q)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _q)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _q (_rsplit _rempty (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _q)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _q) (_rconcat _q _q)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.431490898132324
        },
        "re2_test_333_if_the_word_ends_with_consonant_any_letter_replace_that_with_w_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_333_if_the_word_ends_with_consonant_any_letter_replace_that_with_w_a ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _w _a) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_334_if_the_word_starts_with_consonant_vowel_replace_that_with_x_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_334_if_the_word_starts_with_consonant_vowel_replace_that_with_x_l ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _x _l) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_335_if_there_is_any_letter_o_replace_that_with_x_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_335_if_there_is_any_letter_o_replace_that_with_x_l ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _o) $0) (_rconcat _x _l) $0)) (_rsplit (_rconcat _rdot _o) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_336_if_there_is_any_letter_replace_that_with_p_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_336_if_there_is_any_letter_replace_that_with_p_f ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _p _f) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _f _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _f _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 (_rconcat _p _f) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _f (_rconcat _p _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _rempty (_rconcat _p _f)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.45455455780029
        },
        "re2_test_337_if_there_is_any_letter_r_remove_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_337_if_there_is_any_letter_r_remove_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _r) $0) _rempty $0)) (_rsplit (_rconcat _rdot _r) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_338_if_the_word_starts_with_any_letter_vowel_add_u_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_338_if_the_word_starts_with_any_letter_vowel_add_u_after_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)) _u) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_339_if_the_word_ends_with_consonant_consonant_replace_that_with_d_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_339_if_the_word_ends_with_consonant_consonant_replace_that_with_d_d ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _d _d) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_340_if_the_word_ends_with_consonant_add_m_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_340_if_the_word_ends_with_consonant_add_m_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _m (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _m (_rtail (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _m) (_rtail (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rtail (map (lambda (_rconcat _m $0)) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _m _m)) (_rtail (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _d) _m (_rtail (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 102.09392619132996
        },
        "re2_test_341_if_the_word_ends_with_consonant_add_u_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_341_if_the_word_ends_with_consonant_add_u_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _u (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 (_rtail (#(lambda (_rsplit _rdot $0)) $0)) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rtail (#(lambda (_rsplit _rdot $0)) $0)) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _u)) (_rtail (#(lambda (_rsplit _rdot $0)) $0)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _u (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) (_rtail (#(lambda (_rsplit _rdot $0)) $0)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _rempty (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _u)) (_rtail (#(lambda (_rsplit _rdot $0)) $0)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 83.02056932449341
        },
        "re2_test_342_if_the_word_starts_with_any_letter_replace_that_with_k_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_342_if_the_word_starts_with_any_letter_replace_that_with_k_t ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _k _t) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _t _k))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _k _t) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _k _t)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _t (_rconcat _k _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _k _t) (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.46644973754883
        },
        "re2_test_343_if_there_is_vowel_add_d_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_343_if_there_is_vowel_add_d_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat $0 _d) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_344_if_there_is_vowel_any_letter_add_q_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_344_if_there_is_vowel_any_letter_add_q_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) (_rconcat $0 _q) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_345_if_the_word_starts_with_consonant_replace_that_with_w_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_345_if_the_word_starts_with_consonant_replace_that_with_w_h ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _w _h) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _h _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h _w))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _a $0)) _h _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h _w))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.480676889419556
        },
        "re2_test_346_if_there_is_t_add_y_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_346_if_there_is_t_add_y_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _y $0) $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _y _t) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _y _t) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _y _t) _t))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _y) _t) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _y (_rconcat _t _rempty)) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.70843052864075
        },
        "re2_test_347_if_there_is_t_replace_that_with_j_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_347_if_there_is_t_replace_that_with_j_w ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _j _w) $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _j _w) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _j _w) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _j _rempty) _w) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _j _w) _rempty) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _j) _w) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.71296453475952
        },
        "re2_test_348_if_the_word_starts_with_consonant_vowel_replace_that_with_q_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_348_if_the_word_starts_with_consonant_vowel_replace_that_with_q_c ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _q _c) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _c _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _c _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _q (cons _c (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0)))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cons _j (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))) _c _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cons _q (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))) _c _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.746824741363525
        },
        "re2_test_349_if_there_is_u_add_k_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_349_if_there_is_u_add_k_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _u $0) (_rconcat _k $0) $0)) (_rsplit _u $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _u) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _u) _u))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _k _u) _u))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 64.38353228569031
        },
        "re2_test_350_if_there_is_vowel_replace_that_with_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_350_if_there_is_vowel_replace_that_with_d ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) _d $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_351_if_there_is_o_replace_that_with_w_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_351_if_there_is_o_replace_that_with_w_b ((lambda (_rflatten (map (lambda (if (_rmatch _o $0) (_rconcat _w _b) $0)) (_rsplit _o $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w _b) _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w _b) _o))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w _b) _o))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _v (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w _b) _o))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _w (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w _b) _o))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 64.82623291015625
        },
        "re2_test_352_if_the_word_starts_with_vowel_replace_that_with_d_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_352_if_the_word_starts_with_vowel_replace_that_with_d_g ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _d _g) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_353_if_there_is_d_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_353_if_there_is_d_replace_that_with_j ((lambda (_rflatten (map (lambda (if (_rmatch _d $0) _j $0)) (_rsplit _d $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _j _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _j _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _j _d))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _j _rempty) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _j) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 21.41432809829712
        },
        "re2_test_354_if_the_word_ends_with_any_letter_consonant_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_354_if_the_word_ends_with_any_letter_consonant_replace_that_with_t ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _t (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _t _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _rempty) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _t $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 28.498353719711304
        },
        "re2_test_355_if_there_is_vowel_any_letter_replace_that_with_r_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_355_if_there_is_vowel_any_letter_replace_that_with_r_y ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0) (_rconcat _r _y) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_356_if_there_is_any_letter_replace_that_with_g_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_356_if_there_is_any_letter_replace_that_with_g_k ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _g _k) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _k _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _k _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _k (_rconcat _g _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (map (lambda (_rconcat _g $0)) (map (lambda _k) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (map (lambda _k) (#(lambda (_rsplit _rdot $0)) $0))) _k _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 22.63587498664856
        },
        "re2_test_357_if_there_is_consonant_add_h_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_357_if_there_is_consonant_add_h_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _h $0) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_358_if_there_is_r_add_w_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_358_if_there_is_r_add_w_before_that ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) (_rconcat _w $0) $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w _r) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _w) _r) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _w _r) _rempty) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _w _rempty) _r) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w (_rconcat _r _rempty)) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.82227563858032
        },
        "re2_test_359_if_there_is_l_any_letter_add_n_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_359_if_there_is_l_any_letter_add_n_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _l _rdot) $0) (_rconcat $0 _n) $0)) (_rsplit (_rconcat _l _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_360_if_the_word_ends_with_consonant_replace_that_with_u_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_360_if_the_word_ends_with_consonant_replace_that_with_u_e ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _u _e) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _e _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _u _e)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _u)) _e $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _e (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _u)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _a _u) _e))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 68.32403683662415
        },
        "re2_test_361_if_the_word_ends_with_any_letter_replace_that_with_i_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_361_if_the_word_ends_with_any_letter_replace_that_with_i_x ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _i _x) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _x _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _i _x)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _i (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (_rrevcdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _g _i)))) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (_rrevcdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _h _i)))) _x $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 21.429463863372803
        },
        "re2_test_362_if_there_is_g_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_362_if_there_is_g_replace_that_with_q ((lambda (_rflatten (map (lambda (if (_rmatch _g $0) _q $0)) (_rsplit _g $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _q _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _q _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _q _rempty) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _q) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _q (_rconcat _g _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 28.50280237197876
        },
        "re2_test_363_if_the_word_ends_with_consonant_any_letter_add_t_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_363_if_the_word_ends_with_consonant_any_letter_add_t_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _t (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_364_if_there_is_consonant_vowel_add_x_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_364_if_there_is_consonant_vowel_add_x_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat $0 _x) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_365_if_the_word_ends_with_any_letter_any_letter_add_h_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_365_if_the_word_ends_with_any_letter_any_letter_add_h_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _rdot) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rconcat (_rtail (_rsplit (_rconcat _rdot _rdot) $0)) _h) (_rtail (_rsplit (_rconcat _rdot _rdot) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _h (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _h (_rsplit _rempty $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (_rflatten (_rsplit _rempty $0)) _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 28.465460538864136
        },
        "re2_test_366_if_the_word_ends_with_consonant_consonant_replace_that_with_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_366_if_the_word_ends_with_consonant_consonant_replace_that_with_p ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) _p (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _p $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (_rrevcdr (_rsplit _rempty $0))) _p $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (_rflatten (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))))) _p $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)))) _p $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))) _p $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.38307213783264
        },
        "re2_test_367_if_there_is_any_letter_c_replace_that_with_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_367_if_there_is_any_letter_c_replace_that_with_i ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _c) $0) _i $0)) (_rsplit (_rconcat _rdot _c) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_368_if_there_is_consonant_replace_that_with_q_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_368_if_there_is_consonant_replace_that_with_q_o ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _q _o) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_369_if_there_is_g_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_369_if_there_is_g_replace_that_with_w ((lambda (_rflatten (map (lambda (if (_rmatch _g $0) _w $0)) (_rsplit _g $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _w _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _w _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _w _g))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _w) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _w _rempty) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.3468062877655
        },
        "re2_test_370_if_the_word_ends_with_consonant_replace_that_with_t_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_370_if_the_word_ends_with_consonant_replace_that_with_t_d ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _t _d) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _t _d)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _t) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _t _rempty) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _d) _t) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _d) _rempty _t) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.28434658050537
        },
        "re2_test_371_if_the_word_ends_with_any_letter_replace_that_with_r_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_371_if_the_word_ends_with_any_letter_replace_that_with_r_i ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _r _i) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _r _i)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r)) _i $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _r (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _i $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _rempty (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r)) _i $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _r (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _r)) _i $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.33834433555603
        },
        "re2_test_372_if_there_is_consonant_e_replace_that_with_d_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_372_if_there_is_consonant_e_replace_that_with_d_l ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0) (_rconcat _d _l) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_373_if_there_is_vowel_replace_that_with_h_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_373_if_there_is_vowel_replace_that_with_h_j ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _h _j) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_374_if_there_is_r_any_letter_replace_that_with_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_374_if_there_is_r_any_letter_replace_that_with_s ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _r _rdot) $0) _s $0)) (_rsplit (_rconcat _r _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_375_if_there_is_r_add_p_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_375_if_there_is_r_add_p_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) (_rconcat $0 _p) $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _p) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _p) _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _r _p) _rempty) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _r _rempty) _p) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _p) _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.3996946811676
        },
        "re2_test_376_if_there_is_consonant_vowel_add_b_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_376_if_there_is_consonant_vowel_add_b_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat $0 _b) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_377_if_there_is_vowel_replace_that_with_r_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_377_if_there_is_vowel_replace_that_with_r_e ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _r _e) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_378_if_there_is_r_replace_that_with_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_378_if_there_is_r_replace_that_with_n ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) _n $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _n _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _n _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _n _rempty) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _n) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _n (_rconcat _r _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.24687600135803
        },
        "re2_test_379_if_there_is_any_letter_r_add_c_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_379_if_there_is_any_letter_r_add_c_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _r) $0) (_rconcat $0 _c) $0)) (_rsplit (_rconcat _rdot _r) $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _c) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r _c) _r))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _r _c) _rempty) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _r _rempty) _c) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _r (_rconcat _c _rempty)) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.561259746551514
        },
        "re2_test_380_if_the_word_starts_with_consonant_add_k_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_380_if_the_word_starts_with_consonant_add_k_after_that ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)) _k) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _k (car (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _k (car (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _k (car (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _k _rempty) (car (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _k (car (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _d)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.21712636947632
        },
        "re2_test_381_if_there_is_any_letter_replace_that_with_i_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_381_if_there_is_any_letter_replace_that_with_i_d ((lambda (_rflatten (map (lambda (if (_rmatch _rdot $0) (_rconcat _i _d) $0)) (_rsplit _rdot $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _d _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _d _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _d _i))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _i) _d _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _x) _d _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.237114906311035
        },
        "re2_test_382_if_the_word_starts_with_consonant_replace_that_with_y_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_382_if_the_word_starts_with_consonant_replace_that_with_y_n ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _y _n) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _n _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _n _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _n _rempty) _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _y _n) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _y _n)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.26144790649414
        },
        "re2_test_383_if_there_is_any_letter_g_add_q_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_383_if_there_is_any_letter_g_add_q_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _g) $0) (_rconcat _q $0) $0)) (_rsplit (_rconcat _rdot _g) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_384_if_the_word_starts_with_consonant_add_h_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_384_if_the_word_starts_with_consonant_add_h_after_that ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)) _h) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h (car (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _h (car (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h (car (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h (car (map (lambda $0) (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _h (car (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.413997650146484
        },
        "re2_test_385_if_the_word_ends_with_consonant_replace_that_with_a_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_385_if_the_word_ends_with_consonant_replace_that_with_a_m ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _a _m) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _m _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _a _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _a _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _a)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _a _a) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.24293565750122
        },
        "re2_test_386_if_there_is_d_replace_that_with_e_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_386_if_there_is_d_replace_that_with_e_p ((lambda (_rflatten (map (lambda (if (_rmatch _d $0) (_rconcat _e _p) $0)) (_rsplit _d $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _p) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _p) _d))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _e) _p) _d))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _p) (_rconcat _d _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _e _p) _d))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.350261926651
        },
        "re2_test_387_if_there_is_consonant_any_letter_replace_that_with_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_387_if_there_is_consonant_any_letter_replace_that_with_b ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0) _b $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_388_if_there_is_consonant_i_replace_that_with_d_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_388_if_there_is_consonant_i_replace_that_with_d_f ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _i) $0) (_rconcat _d _f) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _i) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_389_if_the_word_ends_with_any_letter_replace_that_with_d_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_389_if_the_word_ends_with_any_letter_replace_that_with_d_m ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _d _m) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _d _m)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _d) _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend _m (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _d)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _d) _d _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _k) _d _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.258084774017334
        },
        "re2_test_390_if_there_is_i_replace_that_with_j_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_390_if_there_is_i_replace_that_with_j_j ((lambda (_rflatten (map (lambda (if (_rmatch _i $0) (_rconcat _j _j) $0)) (_rsplit _i $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _j _j) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _j _j) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _j (_rconcat _j _rempty)) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _j _j) _i) _m _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _q _q) _i) _j _q))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.34228229522705
        },
        "re2_test_391_if_the_word_ends_with_consonant_any_letter_add_u_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_391_if_the_word_ends_with_consonant_any_letter_add_u_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _u (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_392_if_the_word_starts_with_any_letter_replace_that_with_h_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_392_if_the_word_starts_with_any_letter_replace_that_with_h_y ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _h _y) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _y _h))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _h _y) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _y) _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _h _y)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 56.77199912071228
        },
        "re2_test_393_if_there_is_p_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_393_if_there_is_p_replace_that_with_j ((lambda (_rflatten (map (lambda (if (_rmatch _p $0) _j $0)) (_rsplit _p $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _j _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _j _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _j _p))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _j _rempty) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _j) _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.25792193412781
        },
        "re2_test_394_if_the_word_starts_with_consonant_replace_that_with_v_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_394_if_the_word_starts_with_consonant_replace_that_with_v_o ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _v _o) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _e (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _v)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 101.27443361282349
        },
        "re2_test_395_if_there_is_any_letter_any_letter_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_395_if_there_is_any_letter_any_letter_replace_that_with_q ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _rdot) $0) _q $0)) (_rsplit (_rconcat _rdot _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_396_if_there_is_vowel_vowel_add_v_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_396_if_there_is_vowel_vowel_add_v_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _v $0) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_397_if_the_word_starts_with_any_letter_replace_that_with_c_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_397_if_the_word_starts_with_any_letter_replace_that_with_c_j ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _c _j) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _j _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j _c))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _a $0)) _j _c))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _j _c))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.31378960609436
        },
        "re2_test_398_if_there_is_consonant_e_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_398_if_there_is_consonant_e_replace_that_with_x ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0) _x $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_399_if_there_is_any_letter_l_add_r_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_399_if_there_is_any_letter_l_add_r_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _l) $0) (_rconcat $0 _r) $0)) (_rsplit (_rconcat _rdot _l) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_400_if_there_is_vowel_vowel_replace_that_with_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_400_if_there_is_vowel_vowel_replace_that_with_c ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) _c $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_401_if_there_is_consonant_replace_that_with_d_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_401_if_there_is_consonant_replace_that_with_d_c ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _d _c) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_402_if_there_is_vowel_replace_that_with_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_402_if_there_is_vowel_replace_that_with_k ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) _k $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_403_if_there_is_consonant_replace_that_with_d_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_403_if_there_is_consonant_replace_that_with_d_y ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _d _y) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_404_if_there_is_any_letter_t_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_404_if_there_is_any_letter_t_replace_that_with_x ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _t) $0) _x $0)) (_rsplit (_rconcat _rdot _t) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_405_if_there_is_u_any_letter_replace_that_with_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_405_if_there_is_u_any_letter_replace_that_with_m ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _u _rdot) $0) _m $0)) (_rsplit (_rconcat _u _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_406_if_there_is_any_letter_c_replace_that_with_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_406_if_there_is_any_letter_c_replace_that_with_o ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _c) $0) _o $0)) (_rsplit (_rconcat _rdot _c) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_407_if_the_word_ends_with_any_letter_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_407_if_the_word_ends_with_any_letter_replace_that_with_w ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) _w (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _w) _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _w $0) _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _w (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _w)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 14.07062840461731
        },
        "re2_test_408_if_there_is_a_replace_that_with_i_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_408_if_there_is_a_replace_that_with_i_e ((lambda (_rflatten (map (lambda (if (_rmatch _a $0) (_rconcat _i _e) $0)) (_rsplit _a $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _e) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _i _e) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _e) _a))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _i _rempty) _e) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _i) _e) _a))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.30452489852905
        },
        "re2_test_409_if_there_is_consonant_add_o_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_409_if_there_is_consonant_add_o_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat $0 _o) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_410_if_the_word_ends_with_consonant_add_v_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_410_if_the_word_ends_with_consonant_add_v_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _v (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 (_rtail (#(lambda (_rsplit _rdot $0)) $0)) _v))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _v (_rtail (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _v) (_rtail (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _g _v) (_rtail (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _v _v)) (_rtail (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 57.26764965057373
        },
        "re2_test_411_if_the_word_starts_with_consonant_replace_that_with_p_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_411_if_the_word_starts_with_consonant_replace_that_with_p_u ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _p _u) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _u _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _u _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _u _p))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _rempty $0)) _u _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _a $0)) _u _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.341307401657104
        },
        "re2_test_412_if_there_is_vowel_add_b_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_412_if_there_is_vowel_add_b_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _b $0) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_413_if_the_word_starts_with_consonant_replace_that_with_v_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_413_if_the_word_starts_with_consonant_replace_that_with_v_n ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _v _n) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_414_if_there_is_consonant_replace_that_with_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_414_if_there_is_consonant_replace_that_with_e ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) _e $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_415_if_there_is_consonant_replace_that_with_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_415_if_there_is_consonant_replace_that_with_r ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) _r $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_416_if_there_is_vowel_t_replace_that_with_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_416_if_there_is_vowel_t_replace_that_with_g ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _t) $0) _g $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _t) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_417_if_there_is_g_add_r_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_417_if_there_is_g_add_r_after_that ((lambda (_rflatten (map (lambda (if (_rmatch _g $0) (_rconcat $0 _r) $0)) (_rsplit _g $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _g _r) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _g _r) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _g _r) _rempty) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _g) _r) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _g (_rconcat _r _rempty)) _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.33673858642578
        },
        "re2_test_418_if_the_word_ends_with_consonant_consonant_add_k_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_418_if_the_word_ends_with_consonant_consonant_add_k_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _k) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch (_rtail (#(lambda (_rsplit _rdot $0)) $0)) _n) $0 (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _k)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch (_rtail (cdr (#(lambda (_rsplit _rdot $0)) $0))) _n) $0 (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _k)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 729.3634264469147
        },
        "re2_test_419_if_the_word_starts_with_any_letter_replace_that_with_i_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_419_if_the_word_starts_with_any_letter_replace_that_with_i_t ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _i _t) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _t _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _t _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _i _t) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _t) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _t _rempty) _i))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.343963861465454
        },
        "re2_test_420_if_the_word_starts_with_any_letter_any_letter_replace_that_with_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_420_if_the_word_starts_with_any_letter_any_letter_replace_that_with_p ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) _p (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _p _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _p))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _p (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _p (#(lambda (_rsplit _rdot $0)) (_rflatten (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _p (cdr (#(lambda (_rsplit _rdot $0)) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.33212900161743
        },
        "re2_test_421_if_there_is_any_letter_t_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_421_if_there_is_any_letter_t_replace_that_with_w ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _t) $0) _w $0)) (_rsplit (_rconcat _rdot _t) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_422_if_the_word_starts_with_vowel_consonant_add_b_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_422_if_the_word_starts_with_vowel_consonant_add_b_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _b (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (car (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _rempty (_rflatten (cons _b (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _rempty $0) _rempty (_rflatten (cons _b (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _a $0) _rempty (_rflatten (cons _b (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _rdot $0) _rempty (_rflatten (cons _b (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _e (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (_rflatten (cons _b (#(lambda (_rsplit _rdot $0)) $0))) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 65.8276436328888
        },
        "re2_test_423_if_there_is_r_replace_that_with_a_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_423_if_there_is_r_replace_that_with_a_s ((lambda (_rflatten (map (lambda (if (_rmatch _r $0) (_rconcat _a _s) $0)) (_rsplit _r $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _a _s) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _a _s) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _a _rempty) _s) _r))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _a _s) (_rconcat _r _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _a _s) (_rconcat _rempty _r)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.42248821258545
        },
        "re2_test_424_if_the_word_starts_with_consonant_add_s_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_424_if_the_word_starts_with_consonant_add_s_after_that ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)) _s) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s (car (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s (car (#(lambda (_rsplit _rdot $0)) (_rflatten (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _s (car (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s (car (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s (car (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _y)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.341195583343506
        },
        "re2_test_425_if_the_word_starts_with_consonant_replace_that_with_l_n": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_425_if_the_word_starts_with_consonant_replace_that_with_l_n ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _l _n) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_426_if_the_word_ends_with_consonant_replace_that_with_g_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_426_if_the_word_ends_with_consonant_replace_that_with_g_e ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _g _e) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _e _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _g)) _e $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _e $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (_rsplit _rempty $0))) _e $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _g (_rrevcdr (_rsplit _rdot $0))) _e $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 57.3586847782135
        },
        "re2_test_427_if_there_is_s_replace_that_with_t": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_427_if_there_is_s_replace_that_with_t ((lambda (_rflatten (map (lambda (if (_rmatch _s $0) _t $0)) (_rsplit _s $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _t _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _t _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _t _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _t) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _t _rempty) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.37505769729614
        },
        "re2_test_428_if_the_word_starts_with_consonant_replace_that_with_u_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_428_if_the_word_starts_with_consonant_replace_that_with_u_x ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _u _x) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _u (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _x _u)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _u (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _x) _u)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _u (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _u _x) _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 96.44313549995422
        },
        "re2_test_429_if_there_is_any_letter_g_add_w_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_429_if_there_is_any_letter_g_add_w_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _g) $0) (_rconcat $0 _w) $0)) (_rsplit (_rconcat _rdot _g) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_430_if_the_word_ends_with_consonant_any_letter_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_430_if_the_word_ends_with_consonant_any_letter_replace_that_with_w ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) _w (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _w _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _rempty) _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _w))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _w (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _w)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.35515236854553
        },
        "re2_test_431_if_the_word_starts_with_any_letter_consonant_replace_that_with_x_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_431_if_the_word_starts_with_any_letter_consonant_replace_that_with_x_u ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _x _u) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_432_if_the_word_starts_with_consonant_consonant_replace_that_with_i_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_432_if_the_word_starts_with_consonant_consonant_replace_that_with_i_i ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _i _i) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_433_if_there_is_vowel_replace_that_with_l_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_433_if_there_is_vowel_replace_that_with_l_s ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _l _s) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_434_if_the_word_starts_with_any_letter_replace_that_with_j_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_434_if_the_word_starts_with_any_letter_replace_that_with_j_s ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _j _s) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _s _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _j))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _j _s) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _s) _j))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 28.343300104141235
        },
        "re2_test_435_if_there_is_y_replace_that_with_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_435_if_there_is_y_replace_that_with_c ((lambda (_rflatten (map (lambda (if (_rmatch _y $0) _c $0)) (_rsplit _y $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _c _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _c _rempty) _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _c) _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _c (_rconcat _rempty _y)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _c (_rtail (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _y)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.322574853897095
        },
        "re2_test_436_if_there_is_consonant_replace_that_with_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_436_if_there_is_consonant_replace_that_with_k ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) _k $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_437_if_there_is_u_replace_that_with_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_437_if_there_is_u_replace_that_with_s ((lambda (_rflatten (map (lambda (if (_rmatch _u $0) _s $0)) (_rsplit _u $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _s _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _s _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _s _u))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty _s) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _s _rempty) _u))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.31601905822754
        },
        "re2_test_438_if_there_is_any_letter_any_letter_replace_that_with_o_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_438_if_there_is_any_letter_any_letter_replace_that_with_o_b ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot _rdot) $0) (_rconcat _o _b) $0)) (_rsplit (_rconcat _rdot _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_439_if_there_is_s_vowel_add_p_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_439_if_there_is_s_vowel_add_p_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _s (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat $0 _p) $0)) (_rsplit (_rconcat _s (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_440_if_there_is_t_any_letter_double_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_440_if_there_is_t_any_letter_double_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _t _rdot) $0) (_rconcat $0 $0) $0)) (_rsplit (_rconcat _t _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_441_if_there_is_any_letter_consonant_add_w_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_441_if_there_is_any_letter_consonant_add_w_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) (_rconcat _w $0) $0)) (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_442_if_the_word_starts_with_any_letter_vowel_replace_that_with_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_442_if_the_word_starts_with_any_letter_vowel_replace_that_with_m ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _m (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_443_if_the_word_ends_with_vowel_any_letter_add_p_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_443_if_the_word_ends_with_vowel_any_letter_add_p_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat _p (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_444_if_there_is_consonant_replace_that_with_y_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_444_if_there_is_consonant_replace_that_with_y_f ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _y _f) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_445_if_the_word_starts_with_any_letter_vowel_replace_that_with_b_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_445_if_the_word_starts_with_any_letter_vowel_replace_that_with_b_u ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _b _u) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_446_if_the_word_starts_with_consonant_consonant_replace_that_with_o_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_446_if_the_word_starts_with_consonant_consonant_replace_that_with_o_x ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _o _x) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_447_if_there_is_vowel_replace_that_with_r_d": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_447_if_there_is_vowel_replace_that_with_r_d ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _r _d) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_448_if_there_is_vowel_replace_that_with_b_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_448_if_there_is_vowel_replace_that_with_b_x ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _b _x) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_449_if_the_word_ends_with_any_letter_replace_that_with_n_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_449_if_the_word_ends_with_any_letter_replace_that_with_n_l ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _n _l) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _l _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _n _l)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _n (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _l $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _g _n) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _y _n) _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.33196449279785
        },
        "re2_test_450_if_there_is_vowel_add_o_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_450_if_there_is_vowel_add_o_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat $0 _o) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_451_if_the_word_starts_with_any_letter_consonant_replace_that_with_k_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_451_if_the_word_starts_with_any_letter_consonant_replace_that_with_k_r ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _k _r) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_452_if_the_word_ends_with_consonant_any_letter_add_d_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_452_if_the_word_ends_with_consonant_any_letter_add_d_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _d (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rtail (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_453_if_the_word_starts_with_any_letter_consonant_add_v_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_453_if_the_word_starts_with_any_letter_consonant_add_v_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _v (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_454_if_there_is_vowel_add_a_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_454_if_there_is_vowel_add_a_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat $0 _a) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_455_if_there_is_s_replace_that_with_i_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_455_if_there_is_s_replace_that_with_i_y ((lambda (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat _i _y) $0)) (_rsplit _s $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _y) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _i _y) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _y) _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (_rsplit _rempty $0)) (_rconcat _i _y) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _i _y) _s) (_rconcat _i _y) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 13.937485694885254
        },
        "re2_test_456_if_there_is_a_any_letter_replace_that_with_c": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_456_if_there_is_a_any_letter_replace_that_with_c ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _a _rdot) $0) _c $0)) (_rsplit (_rconcat _a _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_457_if_the_word_starts_with_consonant_any_letter_replace_that_with_b_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_457_if_the_word_starts_with_consonant_any_letter_replace_that_with_b_e ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (_rconcat _b _e) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _e _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _e _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _b (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _e)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _b (_rsplit _a (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _e)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cons _b (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))) _e _b))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 64.04315280914307
        },
        "re2_test_458_if_there_is_c_any_letter_replace_that_with_g_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_458_if_there_is_c_any_letter_replace_that_with_g_w ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _c _rdot) $0) (_rconcat _g _w) $0)) (_rsplit (_rconcat _c _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_459_if_the_word_ends_with_any_letter_replace_that_with_o_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_459_if_the_word_ends_with_any_letter_replace_that_with_o_o ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _o _o) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _o _o)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _o _o)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _o _o)) _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _o) (_rconcat _o _o)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _o) _b) _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 21.057413578033447
        },
        "re2_test_460_if_the_word_starts_with_any_letter_any_letter_replace_that_with_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_460_if_the_word_starts_with_any_letter_any_letter_replace_that_with_g ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot _rdot) (car (_rsplit (_rconcat _rdot _rdot) $0))) _g (car (_rsplit (_rconcat _rdot _rdot) $0))) (cdr (_rsplit (_rconcat _rdot _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _g _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _g (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _rempty _g))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _g _e)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.30254936218262
        },
        "re2_test_461_if_the_word_ends_with_any_letter_s_replace_that_with_p_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_461_if_the_word_ends_with_any_letter_s_replace_that_with_p_u ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot _s) (_rtail (_rsplit (_rconcat _rdot _s) $0))) (_rconcat _p _u) (_rtail (_rsplit (_rconcat _rdot _s) $0))) (_rrevcdr (_rsplit (_rconcat _rdot _s) $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _p _u) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _s (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (_rflatten (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) (_rconcat _p _u)) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 348.5813901424408
        },
        "re2_test_462_if_there_is_vowel_replace_that_with_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_462_if_there_is_vowel_replace_that_with_i ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) _i $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_463_if_the_word_starts_with_consonant_replace_that_with_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_463_if_the_word_starts_with_consonant_replace_that_with_m ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) _m (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _m _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _m))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _m (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _m _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _m _rempty) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 35.32124876976013
        },
        "re2_test_464_if_the_word_starts_with_vowel_replace_that_with_u_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_464_if_the_word_starts_with_vowel_replace_that_with_u_l ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _u _l) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_465_if_there_is_t_any_letter_replace_that_with_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_465_if_there_is_t_any_letter_replace_that_with_f ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _t _rdot) $0) _f $0)) (_rsplit (_rconcat _t _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_466_if_there_is_consonant_any_letter_replace_that_with_n_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_466_if_there_is_consonant_any_letter_replace_that_with_n_u ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0) (_rconcat _n _u) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_467_if_the_word_starts_with_consonant_replace_that_with_s_a": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_467_if_the_word_starts_with_consonant_replace_that_with_s_a ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _s _a) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch (_rtail (#(lambda (_rsplit _rdot $0)) $0)) _w) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _s)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _u (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _s)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch (_rtail (cdr (#(lambda (_rsplit _rdot $0)) $0))) _w) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _s)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (if (_rmatch _u (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _s)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _u (car (#(lambda (_rsplit _rdot $0)) $0))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _s)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 140.69403433799744
        },
        "re2_test_468_if_the_word_starts_with_consonant_any_letter_replace_that_with_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_468_if_the_word_starts_with_consonant_any_letter_replace_that_with_o ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) _o (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _o _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _o))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _o (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _o _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _o (#(lambda (_rsplit _rdot $0)) (_rflatten (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 57.03714942932129
        },
        "re2_test_469_if_the_word_starts_with_any_letter_consonant_add_f_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_469_if_the_word_starts_with_any_letter_consonant_add_f_before_that ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _f (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (car (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (cdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_470_if_the_word_ends_with_vowel_consonant_add_s_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_470_if_the_word_ends_with_vowel_consonant_add_s_before_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat _s (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_471_if_the_word_starts_with_consonant_replace_that_with_s_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_471_if_the_word_starts_with_consonant_replace_that_with_s_s ((lambda (_rflatten (cons (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rconcat _s _s) (car (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _s _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _a $0)) _s _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _s))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 28.243260145187378
        },
        "re2_test_472_if_the_word_starts_with_vowel_replace_that_with_y_k": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_472_if_the_word_starts_with_vowel_replace_that_with_y_k ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _y _k) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_473_if_the_word_starts_with_any_letter_replace_that_with_n_i": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_473_if_the_word_starts_with_any_letter_replace_that_with_n_i ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _n _i) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) _i _n))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _n))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i (_rconcat _n _rempty)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _n _i) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 28.2725510597229
        },
        "re2_test_474_if_the_word_ends_with_any_letter_replace_that_with_y_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_474_if_the_word_ends_with_any_letter_replace_that_with_y_r ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _y _r) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _r _y))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _y _r)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _y)) _r $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rappend _y (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0))) _r $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $2)) (_rconcat $0 $1) $2)))) $0 _w _y))) _r $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.47073841094971
        },
        "re2_test_475_if_there_is_n_any_letter_replace_that_with_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_475_if_there_is_n_any_letter_replace_that_with_s ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _n _rdot) $0) _s $0)) (_rsplit (_rconcat _n _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_476_if_there_is_p_vowel_replace_that_with_m_e": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_476_if_there_is_p_vowel_replace_that_with_m_e ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _p (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0) (_rconcat _m _e) $0)) (_rsplit (_rconcat _p (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_477_if_there_is_vowel_replace_that_with_v_r": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_477_if_there_is_vowel_replace_that_with_v_r ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat _v _r) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_478_if_there_is_t_replace_that_with_g_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_478_if_there_is_t_replace_that_with_g_j ((lambda (_rflatten (map (lambda (if (_rmatch _t $0) (_rconcat _g _j) $0)) (_rsplit _t $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _g _j) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _g _j) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _g) _j) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _rempty (_rconcat _g _j)) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _g (_rconcat _rempty _j)) _t))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.73037123680115
        },
        "re2_test_479_if_the_word_starts_with_consonant_any_letter_replace_that_with_x": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_479_if_the_word_starts_with_consonant_any_letter_replace_that_with_x ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) _x (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _x))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _x _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons _x (cdr (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) $0 _rempty _x))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cdr (#(lambda (_rsplit _rdot $0)) $0))) _x _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 49.8589813709259
        },
        "re2_test_480_if_there_is_consonant_any_letter_replace_that_with_w_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_480_if_there_is_consonant_any_letter_replace_that_with_w_q ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0) (_rconcat _w _q) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_481_if_there_is_vowel_add_j_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_481_if_there_is_vowel_add_j_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0) (_rconcat $0 _j) $0)) (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_482_if_the_word_starts_with_consonant_vowel_replace_that_with_w": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_482_if_the_word_starts_with_consonant_vowel_replace_that_with_w ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) _w (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_483_if_the_word_ends_with_vowel_any_letter_replace_that_with_i_s": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_483_if_the_word_ends_with_vowel_any_letter_replace_that_with_i_s ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rconcat _i _s) (_rtail (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))) (_rrevcdr (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _rdot) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_484_if_the_word_starts_with_c_replace_that_with_b": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_484_if_the_word_starts_with_c_replace_that_with_b ((lambda (_rflatten (cons (if (_rmatch _c (car (_rsplit _c $0))) _b (car (_rsplit _c $0))) (cdr (_rsplit _c $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (car (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 _b _c)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 273.15521788597107
        },
        "re2_test_485_if_there_is_s_replace_that_with_v_p": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_485_if_there_is_s_replace_that_with_v_p ((lambda (_rflatten (map (lambda (if (_rmatch _s $0) (_rconcat _v _p) $0)) (_rsplit _s $0)))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat _v _p) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (_rconcat _v _p) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _rempty _v) _p) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _v _p) _rempty) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $1 $0) $2 $0)) (_rsplit _rdot $2)))))) $0 (_rconcat (_rconcat _v _rempty) _p) _s))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 42.52256631851196
        },
        "re2_test_486_if_there_is_vowel_consonant_replace_that_with_y": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_486_if_there_is_vowel_consonant_replace_that_with_y ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _y $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_487_if_there_is_t_consonant_replace_that_with_h": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_487_if_there_is_t_consonant_replace_that_with_h ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat _t (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0) _h $0)) (_rsplit (_rconcat _t (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_488_if_the_word_ends_with_consonant_replace_that_with_l": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_488_if_the_word_ends_with_consonant_replace_that_with_l ((lambda (_rflatten (_rappend (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) _l (_rtail (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))) (_rrevcdr (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0))))))",
            "programs": [
                {
                    "program": "(lambda (if (_rmatch _o (_rtail (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _l $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _p (car (#(lambda (_rsplit _rdot $0)) $0))) $0 (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _l $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _o (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (_rflatten (#(lambda (_rsplit _rdot $0)) $0)) (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _l $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch (_rnot _o) (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _l $0) $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (if (_rmatch _o (_rtail (#(lambda (_rsplit _rdot $0)) $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _o) (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rrevcdr (#(lambda (_rsplit _rdot $0)) $0)) _l $0)))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 115.51725196838379
        },
        "re2_test_489_if_there_is_consonant_any_letter_add_l_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_489_if_there_is_consonant_any_letter_add_l_after_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0) (_rconcat $0 _l) $0)) (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _rdot) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_490_if_the_word_starts_with_consonant_e_replace_that_with_j": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_490_if_the_word_starts_with_consonant_e_replace_that_with_j ((lambda (_rflatten (cons (if (_rmatch (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0))) _j (car (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0))) (cdr (_rsplit (_rconcat (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) _e) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_491_if_the_word_starts_with_any_letter_vowel_replace_that_with_c_m": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_491_if_the_word_starts_with_any_letter_vowel_replace_that_with_c_m ((lambda (_rflatten (cons (if (_rmatch (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (_rconcat _c _m) (car (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))) (cdr (_rsplit (_rconcat _rdot (_ror (_ror (_ror (_ror _a _e) _i) _o) _u)) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_492_if_there_is_consonant_replace_that_with_r_o": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_492_if_there_is_consonant_replace_that_with_r_o ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _r _o) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_493_if_the_word_ends_with_any_letter_add_n_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_493_if_the_word_ends_with_any_letter_add_n_before_that ((lambda (_rflatten (_rappend (if (_rmatch _rdot (_rtail (_rsplit _rdot $0))) (_rconcat _n (_rtail (_rsplit _rdot $0))) (_rtail (_rsplit _rdot $0))) (_rrevcdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _n (_rtail (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _n) (_rtail (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _n (_rtail (cdr (#(lambda (_rsplit _rdot $0)) $0))))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (_rappend (_rtail (#(lambda (_rsplit _rdot $0)) $0)) (#(lambda (_rsplit _rdot $0)) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 _n)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (#(lambda (_rsplit _rdot $0)) $1)))))) $0 (_rconcat _n _a)) (_rtail (#(lambda (_rsplit _rdot $0)) $0))))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 96.53992819786072
        },
        "re2_test_494_if_the_word_starts_with_vowel_replace_that_with_c_u": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_494_if_the_word_starts_with_vowel_replace_that_with_c_u ((lambda (_rflatten (cons (if (_rmatch (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (_rconcat _c _u) (car (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))) (cdr (_rsplit (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) $0))))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_495_if_there_is_vowel_n_replace_that_with_q": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_495_if_there_is_vowel_n_replace_that_with_q ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _n) $0) _q $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _n) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_496_if_the_word_ends_with_any_letter_consonant_add_h_after_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_496_if_the_word_ends_with_any_letter_consonant_add_h_after_that ((lambda (_rflatten (_rappend (if (_rmatch (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rconcat (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0)) _h) (_rtail (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))) (_rrevcdr (_rsplit (_rconcat _rdot (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u))) $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _e $1))))) $0 _h))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (#(lambda (_rsplit _rdot $0)) $0) _h $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _rempty $0) _h $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _j $0) _h $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend $1 $2)))))) (_rsplit _d $0) _h $0))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 21.128072261810303
        },
        "re2_test_497_if_the_word_starts_with_any_letter_replace_that_with_l_g": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_497_if_the_word_starts_with_any_letter_replace_that_with_l_g ((lambda (_rflatten (cons (if (_rmatch _rdot (car (_rsplit _rdot $0))) (_rconcat _l _g) (car (_rsplit _rdot $0))) (cdr (_rsplit _rdot $0))))))",
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _g _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _l _g) _rempty))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _l _g)))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (_rflatten (cons (_rconcat _l _g) (cdr (#(lambda (_rsplit _rdot $0)) $0)))))",
                    "logLikelihood": 0.0,
                    "origin": null
                },
                {
                    "program": "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (cdr (#(lambda (_rsplit _rdot $0)) $2))))))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _g) _g _l))",
                    "logLikelihood": 0.0,
                    "origin": null
                }
            ],
            "best_search_time": 57.24439334869385
        },
        "re2_test_498_if_there_is_vowel_r_add_u_before_that": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_498_if_there_is_vowel_r_add_u_before_that ((lambda (_rflatten (map (lambda (if (_rmatch (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _r) $0) (_rconcat _u $0) $0)) (_rsplit (_rconcat (_ror (_ror (_ror (_ror _a _e) _i) _o) _u) _r) $0)))))",
            "programs": [],
            "best_search_time": null
        },
        "re2_test_499_if_there_is_consonant_replace_that_with_q_f": {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    },
                    {
                        "constructor": "tfullstr",
                        "arguments": []
                    }
                ]
            },
            "task": "re2_test_499_if_there_is_consonant_replace_that_with_q_f ((lambda (_rflatten (map (lambda (if (_rmatch (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0) (_rconcat _q _f) $0)) (_rsplit (_rnot (_rconcat (_rconcat (_rconcat (_rconcat _a _e) _i) _o) _u)) $0)))))",
            "programs": [],
            "best_search_time": null
        }
    }
}