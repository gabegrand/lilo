{
    "cmd": "python run_iterative_experiment.py --experiment_name runs_human --experiment_type baseline_dreamcoder --domain re2_human --encoder re2 --iterations 16 --global_batch_sizes 96 --enumeration_timeout 1000 --stitch_params {\"iterations\": 10, \"max_arity\": 3} --random_seeds 111 222 333",
    "args": {
        "iterations": 10,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 3,
            "threads": 1,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": true,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": true,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": true,
            "rewrite_check": false,
            "utility_by_rewrite": true,
            "dreamcoder_comparison": false,
            "quiet": true
        }
    },
    "original_cost": 53852,
    "final_cost": 26061,
    "compression_ratio": 2.06638271747055,
    "num_abstractions": 10,
    "original": [
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _n (cdr (_rsplit _rdot (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (map (lam _o) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (_rsplit _e $0))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (map (lam _k) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _o (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _u (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (_rappend _d (_rsplit _k $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _rempty _q) _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rsplit _b (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rtail (map (lam (_rconcat $1 _v)) (_rsplit _rdot $1)))) (_rsplit _rdot $0))))",
        "(lam (car (map (lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $1)))) (_rsplit _rdot $0))))",
        "(lam (car (cdr (map (lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $1)))) (_rsplit _rdot $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _k $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _rdot $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _o $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _f $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _s $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (cons _j (_rsplit _a $0))))",
        "(lam (_rflatten (cons _j (_rsplit _b $0))))",
        "(lam (_rflatten (cons _j (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _j (_rsplit _w $0))))",
        "(lam (_rflatten (cons _j (_rsplit _t $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _s (_rrevcdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty (_rflatten (map (lam _s) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty (_rflatten (map (lam _g) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit (_rnot _r) $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch _r $0) _j $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rsplit _b (_rflatten (map (lam (if (_rmatch _r $0) _j $0)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rsplit _e (_rflatten (map (lam (if (_rmatch _r $0) _j $0)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _y (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _rempty _y) _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _y _rempty) _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _y (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _x _w) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _q (cdr (_rsplit _rdot (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _p)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _p _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rdot (_rflatten (cons _d (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rdot (_rflatten (map (lam _v) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _b _r) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _b (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _v (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _q (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _t (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend (_rconcat _d _t) (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _f (_rsplit _a $0))))",
        "(lam (_rflatten (cons _f (_rsplit _e $0))))",
        "(lam (_rflatten (cons _f (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (_rsplit _w $0))))",
        "(lam (_rflatten (cons _f (_rsplit _q $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty (_rflatten (cons _x (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _n)) (_rsplit _rdot (_rflatten (map (lam _f) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _n)) (_rsplit _rdot (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot (_rflatten (map (lam _f) (_rsplit _rdot $0)))))))))))",
        "(lam (if (_rmatch _s (_rtail (cdr (_rsplit _rdot $0)))) (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rdot $0)))) $0))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _r (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _j _m) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _w _w) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _i _w) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _rempty _f) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _f _rempty) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _f (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (map (lam (_rconcat _w _t)) (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _y (_rsplit _k (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _i (_rsplit _k $0))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (_rflatten (cons _a (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (_rflatten (map (lam _e) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rempty (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _k (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _j _e) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _k (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _x (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _b _e) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _x (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _w _e) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _e _i) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _n _i) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _x _i) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _q (cdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rsplit _w (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _j (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _b _o) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _j (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _u _o) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _m (_rsplit _k (_rflatten (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _m (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _a (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty (_rflatten (map (lam _b) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _h _x) _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _rempty _h) _x)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _r (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _j _r) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _i _rempty) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rdot (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rsplit _v (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (map (lam $0) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _e (cons _a (cons _rempty (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _k $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _k (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _k (_rflatten (_rsplit _a $0))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _k (_rflatten (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat (car (_rsplit _rdot $0)) _o) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat (car (_rsplit _rempty $0)) _o) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat (car (map (lam $0) (_rsplit _rdot $0))) _o) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat (car (map (lam $0) (_rsplit _rempty $0))) _o) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (car (_rsplit _rdot $0)) (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _n _o) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _q (_rconcat _i _rempty)) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _q (_rconcat _rempty _i)) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _k $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch (_rnot _t) $0) $0 _k)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _k (_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (_rsplit _rdot (_rflatten (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _e (cdr (_rsplit _rdot (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _i $0) _v $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _i $0) _v $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rsplit _b (_rflatten (map (lam (if (_rmatch _i $0) _v $0)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _i $0) (_rconcat _rempty _v) $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _l (_rconcat $0 _rempty))) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l (if (_rmatch _o $0) $0 $0))) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _k (_rflatten (_rappend _rempty (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _k (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _q (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rappend _b (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rappend _j (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rempty (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _h _rempty) _r)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _h _r) _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _k $0))))",
        "(lam (_rflatten (_rappend _k (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _d (_rsplit _k $0))))))))",
        "(lam (_rflatten (_rappend _k (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _q (_rsplit _k $0))))))))",
        "(lam (_rflatten (_rappend _k (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _c (_rsplit _k $0))))))))",
        "(lam (_rflatten (_rappend _k (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _l (_rsplit _k $0))))))))",
        "(lam (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _s (_rsplit _k (_rflatten (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rsplit _b (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _a (_rsplit _k $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _a (_rsplit _k $0))))))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _r (_rsplit _k $0))))))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _h (_rsplit _k $0))))))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _v (_rsplit _a $0))))",
        "(lam (_rflatten (cons _v (_rsplit _b $0))))",
        "(lam (_rflatten (cons _v (_rsplit _e $0))))",
        "(lam (_rflatten (cons _v (_rsplit _f $0))))",
        "(lam (_rflatten (cons _v (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _o $0) _l $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) _o $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _b (_rsplit _a $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _b (_rsplit _e $0))))",
        "(lam (_rflatten (cons _b (_rsplit _o $0))))",
        "(lam (_rflatten (cons _b (_rsplit _q $0))))"
    ],
    "rewritten": [
        "(lam (fn_0 $0 _a _n))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_8 $0 (_rconcat _n _a)))",
        "(lam (fn_8 (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0))))) _n))",
        "(lam (fn_1 $0 (lam _k)))",
        "(lam (fn_1 (fn_1 $0 (lam _o)) (lam _k)))",
        "(lam (fn_1 (_rflatten (_rsplit _rdot $0)) (lam _k)))",
        "(lam (fn_1 (_rflatten (_rsplit _e $0)) (lam _k)))",
        "(lam (fn_1 (fn_1 $0 (lam _k)) (lam _k)))",
        "(lam (fn_2 $0 _r))",
        "(lam (fn_2 (fn_2 $0 _o) _r))",
        "(lam (fn_2 (fn_2 $0 _r) _r))",
        "(lam (fn_2 (fn_2 $0 _f) _r))",
        "(lam (fn_2 (_rflatten (_rsplit _rdot $0)) _r))",
        "(lam (fn_3 $0 _o _u))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rdot (fn_2 $0 _rempty)))))))",
        "(lam (fn_3 (fn_2 $0 _i) _o _u))",
        "(lam (fn_3 (fn_2 $0 _f) _o _u))",
        "(lam (fn_3 (fn_2 $0 _u) _o _u))",
        "(lam (fn_6 $0 _d))",
        "(lam (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lam (fn_4 $0 _j _q))",
        "(lam (fn_2 (fn_4 $0 _j _q) _j))",
        "(lam (fn_4 $0 _j (_rconcat _rempty _q)))",
        "(lam (_rflatten (_rsplit _b (fn_4 $0 _j _q))))",
        "(lam (_rflatten (_rsplit _rempty (fn_4 $0 _j _q))))",
        "(lam (fn_1 $0 (lam (_rconcat $0 _v))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lam (fn_1 $0 (lam (_rtail (map (lam (_rconcat $1 _v)) (_rsplit _rdot $1))))))",
        "(lam (car (map (lam (fn_1 $1 (lam (_rconcat $0 _v)))) (_rsplit _rdot $0))))",
        "(lam (car (cdr (map (lam (fn_1 $1 (lam (_rconcat $0 _v)))) (_rsplit _rdot $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (fn_6 $0 _o)))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _rdot $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _o $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _f $0)))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _s $0)))))",
        "(lam (fn_2 $0 _f))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (fn_7 $0 _j))",
        "(lam (_rflatten (cons _j (_rsplit _b $0))))",
        "(lam (_rflatten (cons _j (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _j (_rsplit _w $0))))",
        "(lam (_rflatten (cons _j (_rsplit _t $0))))",
        "(lam (fn_4 $0 _s _h))",
        "(lam (fn_1 $0 (lam (_rconcat _h _s))))",
        "(lam (fn_2 (fn_4 $0 _s _h) _s))",
        "(lam (fn_4 (fn_1 $0 (lam _s)) _s _h))",
        "(lam (fn_4 (fn_1 $0 (lam _g)) _s _h))",
        "(lam (fn_0 $0 _i _w))",
        "(lam (fn_8 $0 (_rconcat _w _i)))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit (_rnot _r) $0)))))",
        "(lam (fn_5 _j _r $0))",
        "(lam (_rflatten (_rsplit _b (fn_5 _j _r $0))))",
        "(lam (_rflatten (_rsplit _e (fn_5 _j _r $0))))",
        "(lam (fn_0 $0 _w _y))",
        "(lam (fn_8 (fn_0 $0 _w _b) _y))",
        "(lam (fn_0 $0 _w (_rconcat _rempty _y)))",
        "(lam (fn_0 $0 _w (_rconcat _y _rempty)))",
        "(lam (fn_8 (fn_0 $0 _w _x) _y))",
        "(lam (fn_0 $0 _a _q))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_8 $0 (_rconcat _q _a)))",
        "(lam (fn_8 (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0))))) _q))",
        "(lam (fn_1 $0 (lam _p)))",
        "(lam (fn_4 $0 _p _rempty))",
        "(lam (fn_4 $0 _rempty _p))",
        "(lam (fn_1 (fn_8 $0 _d) (lam _p)))",
        "(lam (fn_1 (fn_1 $0 (lam _v)) (lam _p)))",
        "(lam (fn_0 $0 _r _i))",
        "(lam (fn_8 $0 (_rconcat _i _r)))",
        "(lam (fn_8 (fn_0 $0 _r _b) _i))",
        "(lam (fn_0 (_rflatten (_rsplit _rdot $0)) _r _i))",
        "(lam (_rflatten (_rsplit _rdot (fn_0 $0 _r _i))))",
        "(lam (fn_4 $0 _v _r))",
        "(lam (fn_1 $0 (lam (_rconcat _r _v))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _b (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _v (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _q (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_3 $0 _d _t))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rsplit _rdot (fn_2 $0 _rempty)))))))",
        "(lam (fn_3 (fn_2 $0 _t) _d _t))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (fn_2 (_rflatten (_rrevcdr (_rsplit _rdot $0))) (_rconcat _d _t)))",
        "(lam (fn_7 $0 _f))",
        "(lam (_rflatten (cons _f (_rsplit _e $0))))",
        "(lam (_rflatten (cons _f (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (_rsplit _w $0))))",
        "(lam (_rflatten (cons _f (_rsplit _q $0))))",
        "(lam (fn_4 $0 _n _f))",
        "(lam (fn_1 $0 (lam (_rconcat _f _n))))",
        "(lam (fn_4 (fn_8 $0 _x) _n _f))",
        "(lam (fn_1 (fn_1 $0 (lam _f)) (lam (_rconcat $0 _n))))",
        "(lam (fn_1 (fn_2 (fn_1 $0 (lam _f)) _f) (lam (_rconcat $0 _n))))",
        "(lam (if (_rmatch _s (_rtail (cdr (_rsplit _rdot $0)))) (fn_2 $0 _rempty) $0))",
        "(lam (fn_8 $0 _b))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (fn_0 $0 _m _r))",
        "(lam (fn_8 $0 (_rconcat _r _m)))",
        "(lam (fn_1 (fn_0 $0 _m _r) (lam $0)))",
        "(lam (fn_8 (fn_0 $0 _m _j) _r))",
        "(lam (fn_8 $0 (_rconcat _r _m)))",
        "(lam (fn_0 $0 _w _b))",
        "(lam (fn_8 (fn_0 $0 _w _b) _b))",
        "(lam (fn_0 (fn_8 $0 _b) _w _b))",
        "(lam (fn_8 (fn_0 $0 _w _w) _b))",
        "(lam (fn_8 (fn_0 $0 _w _i) _b))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (fn_2 $0 (_rconcat _a _o)))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot (fn_2 $0 _o)))))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (fn_8 $0 _f))",
        "(lam (fn_0 $0 _f _rempty))",
        "(lam (fn_0 $0 _rempty _f))",
        "(lam (fn_8 $0 _f))",
        "(lam (fn_8 (fn_8 $0 _a) _f))",
        "(lam (fn_4 $0 _t _w))",
        "(lam (fn_1 $0 (lam (_rconcat _w _t))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _f (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (map (lam (_rconcat _w _t)) (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (fn_6 (fn_2 $0 _i) _y))",
        "(lam (fn_2 $0 (_rconcat _i _y)))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rdot (fn_2 $0 _i)))))))",
        "(lam (fn_3 (fn_6 $0 _i) _i _y))",
        "(lam (fn_4 $0 _e _u))",
        "(lam (fn_4 (fn_8 $0 _a) _e _u))",
        "(lam (fn_4 (fn_8 $0 _b) _e _u))",
        "(lam (fn_4 (fn_2 $0 _e) _e _u))",
        "(lam (fn_4 (fn_1 $0 (lam _e)) _e _u))",
        "(lam (fn_0 $0 _e _k))",
        "(lam (fn_8 $0 (_rconcat _k _e)))",
        "(lam (fn_0 (fn_8 $0 _a) _e _k))",
        "(lam (fn_8 (fn_0 $0 _e _j) _k))",
        "(lam (fn_8 (fn_0 $0 _e _x) _k))",
        "(lam (fn_0 $0 _e _x))",
        "(lam (fn_8 $0 (_rconcat _x _e)))",
        "(lam (fn_8 (fn_0 $0 _e _b) _x))",
        "(lam (fn_8 (fn_0 $0 _e _w) _x))",
        "(lam (fn_0 (_rflatten (_rsplit _rdot $0)) _e _x))",
        "(lam (fn_0 $0 _i _m))",
        "(lam (fn_8 $0 (_rconcat _m _i)))",
        "(lam (fn_8 (fn_0 $0 _i _e) _m))",
        "(lam (fn_8 (fn_0 $0 _i _n) _m))",
        "(lam (fn_8 (fn_0 $0 _i _x) _m))",
        "(lam (fn_9 _q $0))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lam (fn_8 (fn_9 _q $0) _q))",
        "(lam (_rflatten (_rsplit _rempty (fn_9 _q $0))))",
        "(lam (_rflatten (_rsplit _w (fn_9 _q $0))))",
        "(lam (fn_0 $0 _o _j))",
        "(lam (fn_8 $0 (_rconcat _j _o)))",
        "(lam (fn_8 (fn_0 $0 _o _b) _j))",
        "(lam (fn_8 (fn_0 $0 _o _u) _j))",
        "(lam (fn_0 (_rflatten (_rsplit _rdot $0)) _o _j))",
        "(lam (fn_4 $0 _i _g))",
        "(lam (fn_2 (fn_4 $0 _i _g) _i))",
        "(lam (fn_4 (fn_2 $0 _i) _i _g))",
        "(lam (fn_2 (fn_2 (fn_4 $0 _i _g) _i) _i))",
        "(lam (fn_2 (fn_4 (fn_2 $0 _i) _i _g) _i))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (fn_6 (fn_2 $0 _o) _m))",
        "(lam (fn_2 $0 (_rconcat _o _m)))",
        "(lam (fn_2 (_rflatten (_rappend _a (_rappend _o (_rrevcdr (_rsplit _rdot $0))))) _m))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot (fn_2 $0 _i)))))))",
        "(lam (fn_4 $0 _x _h))",
        "(lam (fn_1 $0 (lam (_rconcat _h _x))))",
        "(lam (fn_4 (fn_1 $0 (lam _b)) _x _h))",
        "(lam (fn_4 $0 _rempty (_rconcat _h _x)))",
        "(lam (fn_4 $0 _x (_rconcat _rempty _h)))",
        "(lam (fn_0 $0 _r _r))",
        "(lam (fn_8 $0 (_rconcat _r _r)))",
        "(lam (fn_1 (fn_0 $0 _r _r) (lam $0)))",
        "(lam (fn_0 (fn_8 $0 _a) _r _r))",
        "(lam (fn_8 (fn_0 $0 _r _j) _r))",
        "(lam (fn_8 $0 _i))",
        "(lam (fn_0 $0 _i _rempty))",
        "(lam (fn_0 $0 _rempty _i))",
        "(lam (fn_8 (_rflatten (_rsplit _rdot $0)) _i))",
        "(lam (_rflatten (_rsplit _v (fn_8 $0 _i))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (map (lam $0) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _e (cons _a (cons _rempty (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lam (fn_6 $0 _q))",
        "(lam (fn_6 (fn_1 $0 (lam $0)) _q))",
        "(lam (_rflatten (_rappend _q (_rsplit _rdot $0))))",
        "(lam (fn_6 (_rflatten (_rsplit _a $0)) _q))",
        "(lam (fn_6 (_rflatten (_rsplit _rdot $0)) _q))",
        "(lam (fn_0 $0 _w _a))",
        "(lam (fn_8 $0 (_rconcat _a _w)))",
        "(lam (fn_0 (_rflatten (_rsplit _rdot $0)) _w _a))",
        "(lam (fn_0 (fn_0 $0 _w _a) _a _rempty))",
        "(lam (fn_0 (fn_0 $0 _w _y) _a _rempty))",
        "(lam (fn_0 $0 _o (car (_rsplit _rdot $0))))",
        "(lam (fn_0 $0 _o (car (_rsplit _rempty $0))))",
        "(lam (fn_0 $0 _o (car (map (lam $0) (_rsplit _rdot $0)))))",
        "(lam (fn_0 $0 _o (car (map (lam $0) (_rsplit _rempty $0)))))",
        "(lam (fn_8 (fn_0 $0 _o _n) (car (_rsplit _rdot $0))))",
        "(lam (fn_0 $0 _i _q))",
        "(lam (fn_8 $0 (_rconcat _q _i)))",
        "(lam (fn_0 (fn_8 $0 _b) _i _q))",
        "(lam (fn_0 $0 (_rconcat _i _rempty) _q))",
        "(lam (fn_0 $0 (_rconcat _rempty _i) _q))",
        "(lam (fn_3 $0 _j _rempty))",
        "(lam (fn_3 $0 _rempty _j))",
        "(lam (fn_2 (_rflatten (_rrevcdr (_rsplit _rdot $0))) _j))",
        "(lam (fn_3 (fn_2 $0 _j) _rempty _j))",
        "(lam (fn_3 (fn_3 $0 _b _j) _rempty _j))",
        "(lam (fn_2 $0 _i))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (fn_1 $0 (lam (if (_rmatch $0 _t) _k $0))))",
        "(lam (fn_5 _k _t $0))",
        "(lam (fn_1 $0 (lam (if (_rmatch (_rnot _t) $0) $0 _k))))",
        "(lam (fn_6 (fn_5 _k _t $0) _rempty))",
        "(lam (fn_5 _k _t (_rflatten (_rsplit _rdot $0))))",
        "(lam (fn_0 $0 _s _e))",
        "(lam (fn_8 $0 (_rconcat _e _s)))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (fn_8 (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))) _e))",
        "(lam (fn_1 $0 (lam (if (_rmatch $0 _i) _v $0))))",
        "(lam (fn_5 _v _i $0))",
        "(lam (fn_5 _v _i (fn_1 $0 (lam $0))))",
        "(lam (_rflatten (_rsplit _b (fn_5 _v _i $0))))",
        "(lam (fn_5 (_rconcat _rempty _v) _i $0))",
        "(lam (fn_9 _l $0))",
        "(lam (fn_9 _l (fn_1 $0 (lam $0))))",
        "(lam (fn_1 (fn_9 _l $0) (lam $0)))",
        "(lam (fn_1 $0 (lam (_rconcat _l (_rconcat $0 _rempty)))))",
        "(lam (fn_1 $0 (lam (_rconcat _l (if (_rmatch _o $0) $0 $0)))))",
        "(lam (fn_3 $0 _r _q))",
        "(lam (fn_3 (fn_2 $0 _r) _r _q))",
        "(lam (fn_6 (fn_3 $0 _r _rempty) _q))",
        "(lam (fn_6 (fn_3 $0 _rempty _r) _q))",
        "(lam (fn_3 (fn_2 $0 _q) _r _q))",
        "(lam (fn_3 $0 _b _j))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rappend _b (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rappend _j (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (fn_4 $0 _r _h))",
        "(lam (fn_2 (fn_4 $0 _r _h) _r))",
        "(lam (fn_4 (fn_2 $0 _r) _r _h))",
        "(lam (fn_4 $0 _r (_rconcat _h _rempty)))",
        "(lam (fn_4 $0 _rempty (_rconcat _h _r)))",
        "(lam (fn_6 $0 _k))",
        "(lam (fn_2 (fn_6 $0 _d) _k))",
        "(lam (fn_2 (fn_6 $0 _q) _k))",
        "(lam (fn_2 (fn_6 $0 _c) _k))",
        "(lam (fn_2 (fn_6 $0 _l) _k))",
        "(lam (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (fn_6 (fn_2 $0 _x) _s))",
        "(lam (fn_1 (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rdot $0))))) (lam $0)))",
        "(lam (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rdot (fn_1 $0 (lam $0))))))))",
        "(lam (_rflatten (_rsplit _b (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (fn_6 $0 _a))",
        "(lam (_rflatten (_rappend _a (_rsplit _rdot $0))))",
        "(lam (fn_2 (fn_6 $0 _a) _a))",
        "(lam (fn_2 (fn_6 $0 _r) _a))",
        "(lam (fn_2 (fn_6 $0 _h) _a))",
        "(lam (fn_8 $0 _a))",
        "(lam (fn_0 $0 _a _rempty))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_8 (_rflatten (_rsplit _rdot $0)) _a))",
        "(lam (fn_0 (_rflatten (_rsplit _rdot $0)) _a _rempty))",
        "(lam (fn_7 $0 _v))",
        "(lam (_rflatten (cons _v (_rsplit _b $0))))",
        "(lam (_rflatten (cons _v (_rsplit _e $0))))",
        "(lam (_rflatten (cons _v (_rsplit _f $0))))",
        "(lam (_rflatten (cons _v (_rsplit _c $0))))",
        "(lam (fn_5 _l _o $0))",
        "(lam (fn_5 _o _t $0))",
        "(lam (fn_7 $0 _b))",
        "(lam (_rflatten (cons _b (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _b (_rsplit _e $0))))",
        "(lam (_rflatten (cons _b (_rsplit _o $0))))",
        "(lam (_rflatten (cons _b (_rsplit _q $0))))"
    ],
    "rewritten_dreamcoder": [
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _a _n))",
        "(lambda (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _n _a)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0))))) _n))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _o)) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (_rflatten (_rsplit _rdot $0)) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (_rflatten (_rsplit _e $0)) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _k)) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _r))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _o) _r))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _r) _r))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _f) _r))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (_rflatten (_rsplit _rdot $0)) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _o _u))",
        "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rsplit _rdot (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _rempty)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i) _o _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _f) _o _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _u) _o _u))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) $0 _d))",
        "(lambda (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _e $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _j _q))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _j _q) _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _j (_rconcat _rempty _q)))",
        "(lambda (_rflatten (_rsplit _b (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _j _q))))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _j _q))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $0 _v))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rtail (map (lambda (_rconcat $1 _v)) (_rsplit _rdot $1))))))",
        "(lambda (car (map (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $1 (lambda (_rconcat $0 _v)))) (_rsplit _rdot $0))))",
        "(lambda (car (cdr (map (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $1 (lambda (_rconcat $0 _v)))) (_rsplit _rdot $0)))))",
        "(lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) $0 _o)))",
        "(lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _rdot $0)))))",
        "(lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _o $0)))))",
        "(lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _f $0)))))",
        "(lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _s $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _f))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _j))",
        "(lambda (_rflatten (cons _j (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _rdot $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _w $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _t $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _s _h))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _h _s))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _s _h) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _s)) _s _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _g)) _s _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i _w))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _w _i)))",
        "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit (_rnot _r) $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _j _r $0))",
        "(lambda (_rflatten (_rsplit _b (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _j _r $0))))",
        "(lambda (_rflatten (_rsplit _e (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _j _r $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _y))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _b) _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w (_rconcat _rempty _y)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w (_rconcat _y _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _x) _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _a _q))",
        "(lambda (_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _q _a)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0))))) _q))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _p)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _p _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _rempty _p))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _d) (lambda _p)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _v)) (lambda _p)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _r _i))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _i _r)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _r _b) _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (_rsplit _rdot $0)) _r _i))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _r _i))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _v _r))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _r _v))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (cons _b (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (cons _v (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (cons _q (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _d _t))",
        "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rsplit _rdot (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _rempty)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _t) _d _t))",
        "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (_rflatten (_rrevcdr (_rsplit _rdot $0))) (_rconcat _d _t)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _f))",
        "(lambda (_rflatten (cons _f (_rsplit _e $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _rempty $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _w $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _q $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _n _f))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _f _n))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _x) _n _f))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _f)) (lambda (_rconcat $0 _n))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _f)) _f) (lambda (_rconcat $0 _n))))",
        "(lambda (if (_rmatch _s (_rtail (cdr (_rsplit _rdot $0)))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _rempty) $0))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _b))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _m _r))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _r _m)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _m _r) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _m _j) _r))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _r _m)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _b) _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _b) _w _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _w) _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _i) _b))",
        "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _a _o)))",
        "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _o)))))))",
        "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _f))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _f _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _rempty _f))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _f))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _a) _f))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _t _w))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _w _t))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rappend _d (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rappend _f (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (map (lambda (_rconcat _w _t)) (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i) _y))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _i _y)))",
        "(lambda (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rdot (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) $0 _i) _i _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _e _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _a) _e _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _b) _e _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _e) _e _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _e)) _e _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _e _k))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _k _e)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _a) _e _k))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _e _j) _k))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _e _x) _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _e _x))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _x _e)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _e _b) _x))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _e _w) _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (_rsplit _rdot $0)) _e _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i _m))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _m _i)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i _e) _m))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i _n) _m))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i _x) _m))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $0))))) _q $0))",
        "(lambda (_rflatten (map (lambda (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $0))))) _q $0) _q))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $0))))) _q $0))))",
        "(lambda (_rflatten (_rsplit _w (#(lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $0))))) _q $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _j _o)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o _b) _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o _u) _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (_rsplit _rdot $0)) _o _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i _g))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i _g) _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i) _i _g))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i _g) _i) _i))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i) _i _g) _i))",
        "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _o) _m))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _o _m)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (_rflatten (_rappend _a (_rappend _o (_rrevcdr (_rsplit _rdot $0))))) _m))",
        "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _x _h))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _h _x))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _b)) _x _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _rempty (_rconcat _h _x)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _x (_rconcat _rempty _h)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _r _r))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _r _r)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _r _r) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _a) _r _r))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _r _j) _r))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _rempty _i))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (_rflatten (_rsplit _rdot $0)) _i))",
        "(lambda (_rflatten (_rsplit _v (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _i))))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (map (lambda $0) (_rsplit _rdot $0))))))))",
        "(lambda (_rflatten (cons _e (cons _a (cons _rempty (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lambda (_rflatten (cons _rempty (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) $0 _q))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) _q))",
        "(lambda (_rflatten (_rappend _q (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) (_rflatten (_rsplit _a $0)) _q))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) (_rflatten (_rsplit _rdot $0)) _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _a _w)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (_rsplit _rdot $0)) _w _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _a) _a _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _w _y) _a _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o (car (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o (car (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o (car (map (lambda $0) (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o (car (map (lambda $0) (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _o _n) (car (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _i _q))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _q _i)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _b) _i _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 (_rconcat _i _rempty) _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 (_rconcat _rempty _i) _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _j _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _rempty _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (_rflatten (_rrevcdr (_rsplit _rdot $0))) _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _j) _rempty _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _b _j) _rempty _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 _t) _k $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _k _t $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch (_rnot _t) $0) $0 _k))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _k _t $0) _rempty))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _k _t (_rflatten (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _s _e))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 (_rconcat _e _s)))",
        "(lambda (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))) _e))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $0 _i) _v $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _v _i $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _v _i (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0))))",
        "(lambda (_rflatten (_rsplit _b (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _v _i $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) (_rconcat _rempty _v) _i $0))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $0))))) _l $0))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $0))))) _l (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $0))))) _l $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _l (_rconcat $0 _rempty)))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _l (if (_rmatch _o $0) $0 $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _r _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _r) _r _q))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _r _rempty) _q))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _rempty _r) _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _q) _r _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _b _j))",
        "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rappend _b (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rappend _j (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _r _h))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _r _h) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _r) _r _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _r (_rconcat _h _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _rempty (_rconcat _h _r)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) $0 _k))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) $0 _d) _k))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) $0 _q) _k))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) $0 _c) _k))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) $0 _l) _k))",
        "(lambda (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _x) _s))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rdot $0))))) (lambda $0)))",
        "(lambda (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rdot (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0))))))))",
        "(lambda (_rflatten (_rsplit _b (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) $0 _a))",
        "(lambda (_rflatten (_rappend _a (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) $0 _a) _a))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) $0 _r) _a))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1))))) $0 _h) _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) $0 _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) $0 _a _rempty))",
        "(lambda (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1)))))) (_rflatten (_rsplit _rdot $0)) _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2))))))) (_rflatten (_rsplit _rdot $0)) _a _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _v))",
        "(lambda (_rflatten (cons _v (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _e $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _f $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _c $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _l _o $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _o _t $0))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _b))",
        "(lambda (_rflatten (cons _b (_rsplit _rdot $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _e $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _o $0))))",
        "(lambda (_rflatten (cons _b (_rsplit _q $0))))"
    ],
    "abstractions": [
        {
            "body": "(_rflatten (cons (_rconcat #2 #1) (cdr (_rsplit _rempty #0))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rempty $2)))))))",
            "arity": 3,
            "name": "fn_0",
            "utility": 8989,
            "final_cost": 44863,
            "compression_ratio": 1.200365557363529,
            "cumulative_compression_ratio": 1.200365557363529,
            "num_uses": 62,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_0 $0 _w (_rconcat _rempty _y)": "(_rflatten (cons (_rconcat (_rconcat _rempty _y) _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _w (_rconcat _y _rempty)": "(_rflatten (cons (_rconcat (_rconcat _y _rempty) _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o (car (_rsplit _rdot $0))": "(_rflatten (cons (_rconcat (car (_rsplit _rdot $0)) _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o (car (_rsplit _rempty $0))": "(_rflatten (cons (_rconcat (car (_rsplit _rempty $0)) _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o (car (map (lam $0) (_rsplit _rdot $0)))": "(_rflatten (cons (_rconcat (car (map (lam $0) (_rsplit _rdot $0))) _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o (car (map (lam $0) (_rsplit _rempty $0)))": "(_rflatten (cons (_rconcat (car (map (lam $0) (_rsplit _rempty $0))) _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _w _a": "(_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rdot $0)) _w _a": "(_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_0 $0 _e _b": "(_rflatten (cons (_rconcat _b _e) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o _b": "(_rflatten (cons (_rconcat _b _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _r _b": "(_rflatten (cons (_rconcat _b _r) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _w _b": "(_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (cons _b (cdr (_rsplit _rdot $0)))) _w _b": "(_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 $0 _i _e": "(_rflatten (cons (_rconcat _e _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _s _e": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _rempty _f": "(_rflatten (cons (_rconcat _f _rempty) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _r _i": "(_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rdot $0)) _r _i": "(_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_0 $0 _rempty _i": "(_rflatten (cons (_rconcat _i _rempty) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _w _i": "(_rflatten (cons (_rconcat _i _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _e _j": "(_rflatten (cons (_rconcat _j _e) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _m _j": "(_rflatten (cons (_rconcat _j _m) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o _j": "(_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rdot $0)) _o _j": "(_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_0 $0 _r _j": "(_rflatten (cons (_rconcat _j _r) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _e _k": "(_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _e _k": "(_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rempty (_rflatten (cons _a (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 $0 _i _m": "(_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _a _n": "(_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _i _n": "(_rflatten (cons (_rconcat _n _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o _n": "(_rflatten (cons (_rconcat _n _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 (_rconcat _i _rempty) _q": "(_rflatten (cons (_rconcat _q (_rconcat _i _rempty)) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _i) _q": "(_rflatten (cons (_rconcat _q (_rconcat _rempty _i)) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _a _q": "(_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _i _q": "(_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (cons _b (cdr (_rsplit _rdot $0)))) _i _q": "(_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 $0 _m _r": "(_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _r _r": "(_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _r _r": "(_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty (_rflatten (cons _a (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 $0 _a _rempty": "(_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rdot $0)) _a _rempty": "(_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_0 (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))) _a _rempty": "(_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_0 (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rempty $0)))) _a _rempty": "(_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_0 $0 _f _rempty": "(_rflatten (cons (_rconcat _rempty _f) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _i _rempty": "(_rflatten (cons (_rconcat _rempty _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _o _u": "(_rflatten (cons (_rconcat _u _o) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _e _w": "(_rflatten (cons (_rconcat _w _e) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _i _w": "(_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _w _w": "(_rflatten (cons (_rconcat _w _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _e _x": "(_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _rdot $0)) _e _x": "(_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_0 $0 _i _x": "(_rflatten (cons (_rconcat _x _i) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _w _x": "(_rflatten (cons (_rconcat _x _w) (cdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_0 $0 _w _y": "(_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rempty $0))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map #1 (_rsplit _rdot #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1)))))",
            "arity": 2,
            "name": "fn_1",
            "utility": 4545,
            "final_cost": 40318,
            "compression_ratio": 1.1127288059923608,
            "cumulative_compression_ratio": 1.3356813333994741,
            "num_uses": 60,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_1 $0 (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rdot $0))))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 (fn_0 $0 _m _r) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (fn_0 $0 _m _r))))"
                },
                {
                    "fn_1 (fn_0 $0 _r _r) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (fn_0 $0 _r _r))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot (_rflatten (map (lam _f) (_rsplit _rdot $0))))))) (lam (_rconcat $0 _n))": "(_rflatten (map (lam (_rconcat $0 _n)) (_rsplit _rdot (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot (_rflatten (map (lam _f) (_rsplit _rdot $0))))))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _f) (_rsplit _rdot $0))) (lam (_rconcat $0 _n))": "(_rflatten (map (lam (_rconcat $0 _n)) (_rsplit _rdot (_rflatten (map (lam _f) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $1 (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $1)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _f _n))": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _h _s))": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _h _x))": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _l $0))": "(_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rdot $0))) (lam (_rconcat _l $0))": "(_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _l (_rconcat $0 _rempty)))": "(_rflatten (map (lam (_rconcat _l (_rconcat $0 _rempty))) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _l (if (_rmatch _o $0) $0 $0)))": "(_rflatten (map (lam (_rconcat _l (if (_rmatch _o $0) $0 $0))) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _q $0))": "(_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _r _v))": "(_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _w _t))": "(_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rtail (map (lam (_rconcat $1 _v)) (_rsplit _rdot $1))))": "(_rflatten (map (lam (_rtail (map (lam (_rconcat $1 _v)) (_rsplit _rdot $1)))) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch $0 _i) _v $0))": "(_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch $0 _t) _k $0))": "(_rflatten (map (lam (if (_rmatch $0 _t) _k $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch (_rnot _t) $0) $0 _k))": "(_rflatten (map (lam (if (_rmatch (_rnot _t) $0) $0 _k)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _i $0) (_rconcat _rempty _v) $0))": "(_rflatten (map (lam (if (_rmatch _i $0) (_rconcat _rempty _v) $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _i $0) _v $0))": "(_rflatten (map (lam (if (_rmatch _i $0) _v $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rdot $0))) (lam (if (_rmatch _i $0) _v $0))": "(_rflatten (map (lam (if (_rmatch _i $0) _v $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _o $0) _l $0))": "(_rflatten (map (lam (if (_rmatch _o $0) _l $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _r $0) _j $0))": "(_rflatten (map (lam (if (_rmatch _r $0) _j $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _t $0) _k $0))": "(_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rdot $0)) (lam (if (_rmatch _t $0) _k $0))": "(_rflatten (map (lam (if (_rmatch _t $0) _k $0)) (_rsplit _rdot (_rflatten (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _t $0) _o $0))": "(_rflatten (map (lam (if (_rmatch _t $0) _o $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _b)": "(_rflatten (map (lam _b) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _e)": "(_rflatten (map (lam _e) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _f)": "(_rflatten (map (lam _f) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _g)": "(_rflatten (map (lam _g) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _e $0)) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (_rsplit _e $0)))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rdot $0)) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (_rsplit _rdot $0)))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _k) (_rsplit _rdot $0))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (map (lam _k) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _o) (_rsplit _rdot $0))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (map (lam _o) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam _o)": "(_rflatten (map (lam _o) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (cons _d (cdr (_rsplit _rdot $0)))) (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rdot (_rflatten (cons _d (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _v) (_rsplit _rdot $0))) (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rdot (_rflatten (map (lam _v) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam _s)": "(_rflatten (map (lam _s) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _v)": "(_rflatten (map (lam _v) (_rsplit _rdot $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rrevcdr (_rsplit _rdot #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1))))))",
            "arity": 2,
            "name": "fn_2",
            "utility": 3333,
            "final_cost": 36985,
            "compression_ratio": 1.0901176152494254,
            "cumulative_compression_ratio": 1.4560497498986076,
            "num_uses": 51,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_2 $0 (_rconcat _a _o)": "(_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 (_rflatten (_rrevcdr (_rsplit _rdot $0))) (_rconcat _d _t)": "(_rflatten (_rappend (_rconcat _d _t) (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_2 $0 (_rconcat _i _y)": "(_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _o _m)": "(_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _a (_rsplit _k $0))) _a": "(_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _a (_rsplit _k $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _h (_rsplit _k $0))) _a": "(_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _h (_rsplit _k $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _r (_rsplit _k $0))) _a": "(_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _r (_rsplit _k $0)))))))"
                },
                {
                    "fn_2 $0 _e": "(_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 $0 _f": "(_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 (fn_1 $0 (lam _f)) _f": "(_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot (fn_1 $0 (lam _f))))))"
                },
                {
                    "fn_2 $0 _i": "(_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0))))))) _i": "(_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0))) _i": "(_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))) _i": "(_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0)))))))))))"
                },
                {
                    "fn_2 $0 _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 (_rflatten (_rrevcdr (_rsplit _rdot $0))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _c (_rsplit _k $0))) _k": "(_rflatten (_rappend _k (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _c (_rsplit _k $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _d (_rsplit _k $0))) _k": "(_rflatten (_rappend _k (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _d (_rsplit _k $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _l (_rsplit _k $0))) _k": "(_rflatten (_rappend _k (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _l (_rsplit _k $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _q (_rsplit _k $0))) _k": "(_rflatten (_rappend _k (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _q (_rsplit _k $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _a (_rappend _o (_rrevcdr (_rsplit _rdot $0))))) _m": "(_rflatten (_rappend _m (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _a (_rappend _o (_rrevcdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_2 $0 _o": "(_rflatten (_rappend _o (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 $0 _q": "(_rflatten (_rappend _q (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 $0 _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))) _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _o (_rrevcdr (_rsplit _rdot $0)))) _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))) _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_2 (_rflatten (_rsplit _rdot $0)) _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rempty $0))) _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 $0 _rempty": "(_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty $0))) _s": "(_rflatten (_rappend _s (_rrevcdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 $0 _t": "(_rflatten (_rappend _t (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 $0 _u": "(_rflatten (_rappend _u (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 $0 _x": "(_rflatten (_rappend _x (_rrevcdr (_rsplit _rdot $0))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #2 (_rappend #1 (_rrevcdr (_rrevcdr (_rsplit _rdot #0))))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2)))))))))",
            "arity": 3,
            "name": "fn_3",
            "utility": 2626,
            "final_cost": 34359,
            "compression_ratio": 1.0764283011729097,
            "cumulative_compression_ratio": 1.567333158706598,
            "num_uses": 18,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_3 $0 _b _j": "(_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 $0 _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))) _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))))))))"
                },
                {
                    "fn_3 (fn_2 $0 _j) _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot (fn_2 $0 _j)))))))"
                },
                {
                    "fn_3 $0 _r _q": "(_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 (fn_2 $0 _q) _r _q": "(_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot (fn_2 $0 _q)))))))"
                },
                {
                    "fn_3 (fn_2 $0 _r) _r _q": "(_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot (fn_2 $0 _r)))))))"
                },
                {
                    "fn_3 $0 _rempty _r": "(_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 $0 _j _rempty": "(_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 $0 _r _rempty": "(_rflatten (_rappend _rempty (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 $0 _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 (fn_2 $0 _t) _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot (fn_2 $0 _t)))))))"
                },
                {
                    "fn_3 $0 _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 (fn_2 $0 _f) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot (fn_2 $0 _f)))))))"
                },
                {
                    "fn_3 (fn_2 $0 _i) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot (fn_2 $0 _i)))))))"
                },
                {
                    "fn_3 (fn_2 $0 _u) _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot (fn_2 $0 _u)))))))"
                },
                {
                    "fn_3 (_rflatten (_rappend _i (_rsplit _k $0))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _i (_rsplit _k $0)))))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map (lam (_rconcat #2 #1)) (_rsplit _rempty #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2))))))",
            "arity": 3,
            "name": "fn_4",
            "utility": 2130,
            "final_cost": 32229,
            "compression_ratio": 1.06608954668156,
            "cumulative_compression_ratio": 1.6709174966644946,
            "num_uses": 36,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_4 $0 _v #0": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_4 $0 _rempty (_rconcat _h _r)": "(_rflatten (map (lam (_rconcat (_rconcat _h _r) _rempty)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_4 $0 _r (_rconcat _h _rempty)": "(_rflatten (map (lam (_rconcat (_rconcat _h _rempty) _r)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_4 $0 _rempty (_rconcat _h _x)": "(_rflatten (map (lam (_rconcat (_rconcat _h _x) _rempty)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_4 $0 _x (_rconcat _rempty _h)": "(_rflatten (map (lam (_rconcat (_rconcat _rempty _h) _x)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_4 $0 _j (_rconcat _rempty _q)": "(_rflatten (map (lam (_rconcat (_rconcat _rempty _q) _j)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_4 $0 _n _f": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_4 (_rflatten (cons _x (cdr (_rsplit _rdot $0)))) _n _f": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty (_rflatten (cons _x (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_4 $0 _i _g": "(_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_4 (fn_2 $0 _i) _i _g": "(_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty (fn_2 $0 _i))))"
                },
                {
                    "fn_4 $0 _r _h": "(_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_4 (fn_2 $0 _r) _r _h": "(_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rempty (fn_2 $0 _r))))"
                },
                {
                    "fn_4 $0 _s _h": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_4 (fn_1 $0 (lam _g)) _s _h": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty (fn_1 $0 (lam _g)))))"
                },
                {
                    "fn_4 (fn_1 $0 (lam _s)) _s _h": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty (fn_1 $0 (lam _s)))))"
                },
                {
                    "fn_4 $0 _x _h": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_4 (fn_1 $0 (lam _b)) _x _h": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty (fn_1 $0 (lam _b)))))"
                },
                {
                    "fn_4 $0 _rempty _p": "(_rflatten (map (lam (_rconcat _p _rempty)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_4 $0 #0 _q": "(_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_4 $0 _j _q": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_4 $0 _v _r": "(_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_4 $0 _p _rempty": "(_rflatten (map (lam (_rconcat _rempty _p)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_4 $0 _e _u": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_4 (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _e _u": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_4 (_rflatten (cons _b (cdr (_rsplit _rdot $0)))) _e _u": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_4 (fn_1 $0 (lam _e)) _e _u": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (fn_1 $0 (lam _e)))))"
                },
                {
                    "fn_4 (fn_2 $0 _e) _e _u": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (fn_2 $0 _e))))"
                },
                {
                    "fn_4 $0 _t _w": "(_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_1 #2 (lam (if (_rmatch #1 $0) #0 $0)))",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0))))))",
            "arity": 3,
            "name": "fn_5",
            "utility": 2025,
            "final_cost": 30204,
            "compression_ratio": 1.0670441001191895,
            "cumulative_compression_ratio": 1.7829426566017745,
            "num_uses": 12,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_5 (_rconcat _rempty _v) _i $0": "(fn_1 $0 (lam (if (_rmatch _i $0) (_rconcat _rempty _v) $0)))"
                },
                {
                    "fn_5 _v _i $0": "(fn_1 $0 (lam (if (_rmatch _i $0) _v $0)))"
                },
                {
                    "fn_5 _l _o $0": "(fn_1 $0 (lam (if (_rmatch _o $0) _l $0)))"
                },
                {
                    "fn_5 _j _r $0": "(fn_1 $0 (lam (if (_rmatch _r $0) _j $0)))"
                },
                {
                    "fn_5 _k _t $0": "(fn_1 $0 (lam (if (_rmatch _t $0) _k $0)))"
                },
                {
                    "fn_5 _o _t $0": "(fn_1 $0 (lam (if (_rmatch _t $0) _o $0)))"
                },
                {
                    "fn_5 _k _t (_rflatten (_rsplit _rdot $0))": "(fn_1 (_rflatten (_rsplit _rdot $0)) (lam (if (_rmatch _t $0) _k $0)))"
                },
                {
                    "fn_5 _v _i (fn_1 $0 (lam $0))": "(fn_1 (fn_1 $0 (lam $0)) (lam (if (_rmatch _i $0) _v $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rsplit _k #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _k $1)))))",
            "arity": 2,
            "name": "fn_6",
            "utility": 1818,
            "final_cost": 28386,
            "compression_ratio": 1.0640456563094483,
            "cumulative_compression_ratio": 1.8971323892059466,
            "num_uses": 22,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_6 $0 _a": "(_rflatten (_rappend _a (_rsplit _k $0)))"
                },
                {
                    "fn_6 $0 _c": "(_rflatten (_rappend _c (_rsplit _k $0)))"
                },
                {
                    "fn_6 $0 _d": "(_rflatten (_rappend _d (_rsplit _k $0)))"
                },
                {
                    "fn_6 $0 _h": "(_rflatten (_rappend _h (_rsplit _k $0)))"
                },
                {
                    "fn_6 $0 _i": "(_rflatten (_rappend _i (_rsplit _k $0)))"
                },
                {
                    "fn_6 $0 _k": "(_rflatten (_rappend _k (_rsplit _k $0)))"
                },
                {
                    "fn_6 $0 _l": "(_rflatten (_rappend _l (_rsplit _k $0)))"
                },
                {
                    "fn_6 (fn_2 $0 _o) _m": "(_rflatten (_rappend _m (_rsplit _k (fn_2 $0 _o))))"
                },
                {
                    "fn_6 $0 _o": "(_rflatten (_rappend _o (_rsplit _k $0)))"
                },
                {
                    "fn_6 $0 _q": "(_rflatten (_rappend _q (_rsplit _k $0)))"
                },
                {
                    "fn_6 (_rflatten (_rsplit _a $0)) _q": "(_rflatten (_rappend _q (_rsplit _k (_rflatten (_rsplit _a $0)))))"
                },
                {
                    "fn_6 (_rflatten (_rsplit _rdot $0)) _q": "(_rflatten (_rappend _q (_rsplit _k (_rflatten (_rsplit _rdot $0)))))"
                },
                {
                    "fn_6 (fn_1 $0 (lam $0)) _q": "(_rflatten (_rappend _q (_rsplit _k (fn_1 $0 (lam $0)))))"
                },
                {
                    "fn_6 (fn_3 $0 _r _rempty) _q": "(_rflatten (_rappend _q (_rsplit _k (fn_3 $0 _r _rempty))))"
                },
                {
                    "fn_6 (fn_3 $0 _rempty _r) _q": "(_rflatten (_rappend _q (_rsplit _k (fn_3 $0 _rempty _r))))"
                },
                {
                    "fn_6 $0 _r": "(_rflatten (_rappend _r (_rsplit _k $0)))"
                },
                {
                    "fn_6 (fn_5 _k _t $0) _rempty": "(_rflatten (_rappend _rempty (_rsplit _k (fn_5 _k _t $0))))"
                },
                {
                    "fn_6 (fn_2 $0 _x) _s": "(_rflatten (_rappend _s (_rsplit _k (fn_2 $0 _x))))"
                },
                {
                    "fn_6 (fn_2 $0 _i) _y": "(_rflatten (_rappend _y (_rsplit _k (fn_2 $0 _i))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (_rsplit _a #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1)))))",
            "arity": 2,
            "name": "fn_7",
            "utility": 1212,
            "final_cost": 27174,
            "compression_ratio": 1.0446014572753368,
            "cumulative_compression_ratio": 1.9817472584087732,
            "num_uses": 4,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_7 $0 _b": "(_rflatten (cons _b (_rsplit _a $0)))"
                },
                {
                    "fn_7 $0 _f": "(_rflatten (cons _f (_rsplit _a $0)))"
                },
                {
                    "fn_7 $0 _j": "(_rflatten (cons _j (_rsplit _a $0)))"
                },
                {
                    "fn_7 $0 _v": "(_rflatten (cons _v (_rsplit _a $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (cdr (_rsplit _rdot #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (cdr (_rsplit _rdot $1))))))",
            "arity": 2,
            "name": "fn_8",
            "utility": 707,
            "final_cost": 26467,
            "compression_ratio": 1.0267125099180112,
            "cumulative_compression_ratio": 2.0346847017040086,
            "num_uses": 54,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_8 $0 (_rconcat _a _w)": "(_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat _e _s)": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat _i _r)": "(_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat _j _o)": "(_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat _k _e)": "(_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat _m _i)": "(_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat _n _a)": "(_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat _q _a)": "(_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat _q _i)": "(_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat _r _m)": "(_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat _r _r)": "(_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat _w _i)": "(_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 $0 (_rconcat _x _e)": "(_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 (fn_0 $0 _o _n) (car (_rsplit _rdot $0))": "(_rflatten (cons (car (_rsplit _rdot $0)) (cdr (_rsplit _rdot (fn_0 $0 _o _n)))))"
                },
                {
                    "fn_8 $0 _a": "(_rflatten (cons _a (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 (_rflatten (_rsplit _rdot $0)) _a": "(_rflatten (cons _a (cdr (_rsplit _rdot (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_8 $0 _b": "(_rflatten (cons _b (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 (fn_0 $0 _w _b) _b": "(_rflatten (cons _b (cdr (_rsplit _rdot (fn_0 $0 _w _b)))))"
                },
                {
                    "fn_8 (fn_0 $0 _w _i) _b": "(_rflatten (cons _b (cdr (_rsplit _rdot (fn_0 $0 _w _i)))))"
                },
                {
                    "fn_8 (fn_0 $0 _w _w) _b": "(_rflatten (cons _b (cdr (_rsplit _rdot (fn_0 $0 _w _w)))))"
                },
                {
                    "fn_8 $0 _d": "(_rflatten (cons _d (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))) _e": "(_rflatten (cons _e (cdr (_rsplit _rdot (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_8 $0 _f": "(_rflatten (cons _f (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _f": "(_rflatten (cons _f (cdr (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_8 $0 _i": "(_rflatten (cons _i (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 (_rflatten (_rsplit _rdot $0)) _i": "(_rflatten (cons _i (cdr (_rsplit _rdot (_rflatten (_rsplit _rdot $0))))))"
                },
                {
                    "fn_8 (fn_0 $0 _r _b) _i": "(_rflatten (cons _i (cdr (_rsplit _rdot (fn_0 $0 _r _b)))))"
                },
                {
                    "fn_8 (fn_0 $0 _o _b) _j": "(_rflatten (cons _j (cdr (_rsplit _rdot (fn_0 $0 _o _b)))))"
                },
                {
                    "fn_8 (fn_0 $0 _o _u) _j": "(_rflatten (cons _j (cdr (_rsplit _rdot (fn_0 $0 _o _u)))))"
                },
                {
                    "fn_8 (fn_0 $0 _e _j) _k": "(_rflatten (cons _k (cdr (_rsplit _rdot (fn_0 $0 _e _j)))))"
                },
                {
                    "fn_8 (fn_0 $0 _e _x) _k": "(_rflatten (cons _k (cdr (_rsplit _rdot (fn_0 $0 _e _x)))))"
                },
                {
                    "fn_8 (fn_0 $0 _i _e) _m": "(_rflatten (cons _m (cdr (_rsplit _rdot (fn_0 $0 _i _e)))))"
                },
                {
                    "fn_8 (fn_0 $0 _i _n) _m": "(_rflatten (cons _m (cdr (_rsplit _rdot (fn_0 $0 _i _n)))))"
                },
                {
                    "fn_8 (fn_0 $0 _i _x) _m": "(_rflatten (cons _m (cdr (_rsplit _rdot (fn_0 $0 _i _x)))))"
                },
                {
                    "fn_8 (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0))))) _n": "(_rflatten (cons _n (cdr (_rsplit _rdot (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_8 (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0))))) _q": "(_rflatten (cons _q (cdr (_rsplit _rdot (_rflatten (cons _a (cons _a (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_8 (fn_1 $0 (lam (_rconcat _q $0))) _q": "(_rflatten (cons _q (cdr (_rsplit _rdot (fn_1 $0 (lam (_rconcat _q $0)))))))"
                },
                {
                    "fn_8 (fn_0 $0 _m _j) _r": "(_rflatten (cons _r (cdr (_rsplit _rdot (fn_0 $0 _m _j)))))"
                },
                {
                    "fn_8 (fn_0 $0 _r _j) _r": "(_rflatten (cons _r (cdr (_rsplit _rdot (fn_0 $0 _r _j)))))"
                },
                {
                    "fn_8 $0 _x": "(_rflatten (cons _x (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_8 (fn_0 $0 _e _b) _x": "(_rflatten (cons _x (cdr (_rsplit _rdot (fn_0 $0 _e _b)))))"
                },
                {
                    "fn_8 (fn_0 $0 _e _w) _x": "(_rflatten (cons _x (cdr (_rsplit _rdot (fn_0 $0 _e _w)))))"
                },
                {
                    "fn_8 (fn_0 $0 _w _b) _y": "(_rflatten (cons _y (cdr (_rsplit _rdot (fn_0 $0 _w _b)))))"
                },
                {
                    "fn_8 (fn_0 $0 _w _x) _y": "(_rflatten (cons _y (cdr (_rsplit _rdot (fn_0 $0 _w _x)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_1 #1 (lam (_rconcat #0 $0)))",
            "dreamcoder": "#(lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $2 $0)))))",
            "arity": 2,
            "name": "fn_9",
            "utility": 406,
            "final_cost": 26061,
            "compression_ratio": 1.0155788342734353,
            "cumulative_compression_ratio": 2.06638271747055,
            "num_uses": 7,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_9 _l $0": "(fn_1 $0 (lam (_rconcat _l $0)))"
                },
                {
                    "fn_9 _q $0": "(fn_1 $0 (lam (_rconcat _q $0)))"
                },
                {
                    "fn_9 _l (fn_1 $0 (lam $0))": "(fn_1 (fn_1 $0 (lam $0)) (lam (_rconcat _l $0)))"
                }
            ],
            "dc_comparison_millis": null
        }
    ]
}