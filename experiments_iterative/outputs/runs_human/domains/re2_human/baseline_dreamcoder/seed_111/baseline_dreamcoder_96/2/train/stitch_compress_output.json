{
    "cmd": "python run_iterative_experiment.py --experiment_name runs_human --experiment_type baseline_dreamcoder --domain re2_human --encoder re2 --iterations 16 --global_batch_sizes 96 --enumeration_timeout 1000 --stitch_params {\"iterations\": 10, \"max_arity\": 3} --random_seeds 111 222 333",
    "args": {
        "iterations": 10,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 3,
            "threads": 1,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": true,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": true,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": true,
            "rewrite_check": false,
            "utility_by_rewrite": true,
            "dreamcoder_comparison": false,
            "quiet": true
        }
    },
    "original_cost": 56073,
    "final_cost": 26770,
    "compression_ratio": 2.094620844228614,
    "num_abstractions": 10,
    "original": [
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _v (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (_rflatten (_rappend _rempty (_rappend _v (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _v (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _rempty (_rappend _v (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (_rappend _v (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _n (cons _rempty (cons _a (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (cons _i (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (cons _v (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (map (lam _k) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (map (lam _z) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (map (lam $0) (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (cons _rempty (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _d (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _i $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty (_rflatten (map (lam _a) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty (_rflatten (map (lam _i) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty (_rflatten (map (lam _q) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _rempty (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0)))))",
        "(lam (car (map (lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $1)))) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (car (map (lam (_rconcat $1 _v)) (_rsplit _rdot $1)))) (_rsplit _rdot $0))))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (_rflatten (_rappend _o (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (cons _j (_rsplit _a $0))))",
        "(lam (_rflatten (cons _j (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _j (_rsplit _j $0))))",
        "(lam (_rflatten (cons _j (_rsplit _t $0))))",
        "(lam (_rflatten (cons _j (cdr (_rsplit _rdot (_rflatten (cons _v (_rsplit _a $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _rempty (_rsplit _a (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty (_rflatten (map (lam _s) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty (_rflatten (map (lam _z) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit (_rnot _p) $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch _r $0) _j $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _y (cons _w (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _y) (cons _w (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _y (cdr (_rsplit _rdot (_rflatten (cons _a (cons _w (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons _y (cdr (_rsplit _rdot (_rflatten (cons _b (cons _w (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons _y (cons _w (cdr (_rsplit _rdot (_rflatten (cons _j (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _q (cons _a (cons _rempty (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rdot (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rdot (_rflatten (map (lam _r) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rdot (_rflatten (map (lam _n) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rdot (_rflatten (map (lam _p) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _i (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _i (cons _r (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _i) (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _i (cons _r (cdr (_rsplit _rdot (_rflatten (_rsplit _a $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _v (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _q (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rappend _j (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _t (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (map (lam $0) (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (cons _rempty (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _f (_rsplit _a $0))))",
        "(lam (_rflatten (cons _f (_rsplit _a $0))))",
        "(lam (_rflatten (cons _f (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons (_rconcat _rempty _f) (_rsplit _a $0))))",
        "(lam (_rflatten (cons (_rconcat _f _rempty) (_rsplit _a $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty (_rflatten (_rappend _v (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty (_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (if (_rmatch _s (_rtail (_rsplit _rempty $0))) (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rdot $0)))) $0))",
        "(lam (if (_rmatch _rdot (_rtail (_rsplit _s $0))) (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rdot $0)))) $0))",
        "(lam (if (_rmatch _s (_rtail (_rsplit _rdot $0))) (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rdot $0)))) $0))",
        "(lam (if (_rmatch _s (_rtail (_rsplit _s $0))) (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rdot $0)))) $0))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (cons _r (cons _m (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _rempty (cons (_rconcat _r _m) (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _e (_rflatten (cons _r (cons _m (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _r (cdr (_rsplit _rdot (_rflatten (cons _i (cons _m (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons _b (cons _w (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _b (_rsplit _a (_rflatten (cons _w (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat _b _w) (cons _rempty (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _b _rempty) (cons _w (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _f (cons _rempty (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _rempty (cons _f (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _f) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (map (lam (_rconcat _w _t)) (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _y (_rsplit _e (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _y (_rsplit _a (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _a (_rsplit _e $0))))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _n (_rsplit _e $0))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (_rflatten (map (lam _e) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (_rflatten (map (lam _s) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (_rflatten (map (lam _u) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _k (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _k (_rsplit _a (_rflatten (cons _e (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _rempty (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _k (_rsplit _a (_rflatten (cons _rempty (cons _e (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _x) (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _x (cons _e (cdr (_rsplit _rdot (_rflatten (_rsplit _a $0))))))))",
        "(lam (_rflatten (cons _m (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _m (_rsplit _a (_rflatten (cons _i (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat _m _rempty) (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _m) (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _m (_rsplit _a (_rflatten (cons _rempty (cons _i (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _rempty (_rsplit _a (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _q (_rconcat $0 _rempty))) (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _j (cons _o (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _j (_rsplit _a (_rflatten (cons _o (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _j (cons _o (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _j _rempty) (cons _o (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _j) (cons _o (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty (_rflatten (map (lam _i) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _m (_rsplit _rempty (_rflatten (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _m (_rsplit _g (_rflatten (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty (_rflatten (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty (_rflatten (map (lam _n) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty (_rflatten (map (lam _x) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _e (_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _r (cdr (_rsplit _rdot (_rflatten (cons _i (cons _r (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons _r (cdr (_rsplit _rdot (_rflatten (cons _o (cons _r (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _g $0) _c $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _rempty (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _i (cons _rempty (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _rempty (cons _i (cdr (_rsplit _rdot (_rflatten (_rsplit _a $0))))))))",
        "(lam (_rflatten (_rsplit _a (_rflatten (cons _rempty (cons _i (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cons _rempty (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _e (cons _rempty (cons _a (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _d $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _x $0))))",
        "(lam (if (_rmatch _s (_rtail (_rsplit _rempty $0))) (_rflatten (_rappend _y (_rrevcdr (_rsplit _rdot $0)))) $0))",
        "(lam (if (_rmatch _rdot (_rtail (_rsplit _s $0))) (_rflatten (_rappend _y (_rrevcdr (_rsplit _rdot $0)))) $0))",
        "(lam (if (_rmatch _s (_rtail (_rsplit _rdot $0))) (_rflatten (_rappend _y (_rrevcdr (_rsplit _rdot $0)))) $0))",
        "(lam (if (_rmatch _s (_rtail (_rsplit _s $0))) (_rflatten (_rappend _y (_rrevcdr (_rsplit _rdot $0)))) $0))",
        "(lam (if (_rmatch _s (_rtail (cdr (_rsplit _rdot $0)))) (_rflatten (_rappend _y (_rrevcdr (_rsplit _rdot $0)))) $0))",
        "(lam (_rflatten (cons _a (cons _w (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _rempty (cons _a (cons _w (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _a (cons _w (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _a (cons (_rconcat _w _rempty) (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _a) (cons _w (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rempty $0)) (cons _o (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rdot $0)) (cons _o (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (car (_rsplit _rdot $0)) (_rsplit _a (_rflatten (cons _o (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (car (map (lam $0) (_rsplit _rempty $0))) (cons _o (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (car (map (lam $0) (_rsplit _rdot $0))) (cons _o (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _q (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _q (cons (_rconcat _i _rempty) (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _q (cons _i (cdr (_rsplit _rdot (_rflatten (cons _rdot (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons _q (cons _i (cdr (_rsplit _rdot (_rflatten (cons _j (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons _q (cons _i (cdr (_rsplit _rdot (_rflatten (cons _q (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (map (lam $0) (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _e (cons _rempty (cons _s (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch _i $0) _v $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rsplit _j (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rsplit _t (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _e (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (_rappend _q (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (_rappend _q (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _m (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _rempty (_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (map (lam _r) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (_rappend _k (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _b $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _x $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _g $0))))",
        "(lam (_rflatten (_rappend _s (_rsplit _e (_rflatten (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _s (_rsplit _k (_rflatten (_rappend _x (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _s (_rsplit _e $0))))))))))",
        "(lam (_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _g (_rsplit _e $0))))))))))",
        "(lam (_rflatten (_rappend _s (_rsplit _e (_rflatten (_rappend _x (_rrevcdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))))))",
        "(lam (_rflatten (_rappend _a (_rsplit _e $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _k $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _n $0))))",
        "(lam (_rflatten (_rappend _a (_rsplit _x $0))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _rempty (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _a (cons _rempty (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _v (_rsplit _a $0))))",
        "(lam (_rflatten (cons _v (_rsplit _b $0))))",
        "(lam (_rflatten (cons _v (_rsplit _e $0))))",
        "(lam (_rflatten (cons _v (_rsplit _c $0))))",
        "(lam (_rflatten (cons _v (_rsplit _g $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch _t $0) _o $0)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (cons _b (_rsplit _a $0))))",
        "(lam (_rflatten (cons _b (_rsplit _a (_rflatten (map (lam $0) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _b (_rsplit _a $0))))",
        "(lam (_rflatten (cons (_rconcat _b _rempty) (_rsplit _a $0))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot (_rflatten (cons _v (_rsplit _a $0))))))))"
    ],
    "rewritten": [
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (fn_3 $0 _rempty _v)))",
        "(lam (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (fn_3 $0 _v _rempty)))",
        "(lam (fn_9 (fn_3 $0 _rempty _v) $0))",
        "(lam (fn_9 (fn_3 $0 _v _rempty) $0))",
        "(lam (fn_9 (fn_1 (fn_3 $0 _rempty _v) (lam $0)) $0))",
        "(lam (fn_0 $0 _a _n))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _n (cons _rempty (cons _a (cdr (_rsplit _rdot $0)))))))",
        "(lam (fn_1 $0 (lam _k)))",
        "(lam (fn_1 (_rflatten (cons _i (cdr (_rsplit _rdot $0)))) (lam _k)))",
        "(lam (fn_1 (_rflatten (cons _v (cdr (_rsplit _rdot $0)))) (lam _k)))",
        "(lam (fn_1 (fn_1 $0 (lam _k)) (lam _k)))",
        "(lam (fn_1 (fn_1 $0 (lam _z)) (lam _k)))",
        "(lam (fn_2 $0 _r))",
        "(lam (fn_2 (fn_1 $0 (lam $0)) _r))",
        "(lam (_rflatten (_rsplit _rempty (fn_2 $0 _r))))",
        "(lam (fn_2 (fn_2 $0 _e) _r))",
        "(lam (fn_3 $0 _o _u))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (map (lam $0) (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _u (_rappend _o (_rrevcdr (cons _rempty (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (fn_7 $0 _e _d))",
        "(lam (fn_7 $0 _a _d))",
        "(lam (fn_7 $0 _b _d))",
        "(lam (fn_7 $0 _i _d))",
        "(lam (fn_7 $0 _c _d))",
        "(lam (fn_6 $0 _j _q))",
        "(lam (fn_6 (fn_1 $0 (lam _a)) _j _q))",
        "(lam (fn_6 (fn_1 $0 (lam _i)) _j _q))",
        "(lam (fn_6 (fn_1 $0 (lam _j)) _j _q))",
        "(lam (fn_6 (fn_1 $0 (lam _q)) _j _q))",
        "(lam (fn_1 $0 (lam (_rconcat $0 _v))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _rempty (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0)))))",
        "(lam (car (map (lam (fn_1 $1 (lam (_rconcat $0 _v)))) (_rsplit _rdot $0))))",
        "(lam (fn_1 $0 (lam (car (map (lam (_rconcat $1 _v)) (_rsplit _rdot $1))))))",
        "(lam (fn_9 (fn_7 $0 _rdot _o) $0))",
        "(lam (fn_2 $0 _f))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (fn_8 $0 _j))",
        "(lam (_rflatten (cons _j (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _j (_rsplit _j $0))))",
        "(lam (_rflatten (cons _j (_rsplit _t $0))))",
        "(lam (_rflatten (cons _j (cdr (_rsplit _rdot (fn_8 $0 _v))))))",
        "(lam (fn_6 $0 _s _h))",
        "(lam (fn_1 $0 (lam (_rconcat _h _s))))",
        "(lam (fn_8 (fn_6 $0 _s _h) _rempty))",
        "(lam (fn_6 (fn_1 $0 (lam _s)) _s _h))",
        "(lam (fn_6 (fn_1 $0 (lam _z)) _s _h))",
        "(lam (fn_0 $0 _i _w))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit (_rnot _p) $0)))))",
        "(lam (fn_4 _j _r $0))",
        "(lam (fn_0 $0 _w _y))",
        "(lam (fn_0 $0 _w (_rconcat _rempty _y)))",
        "(lam (_rflatten (cons _y (cdr (_rsplit _rdot (fn_0 $0 _w _a))))))",
        "(lam (_rflatten (cons _y (cdr (_rsplit _rdot (fn_0 $0 _w _b))))))",
        "(lam (fn_0 (_rflatten (cons _j (cdr (_rsplit _rdot $0)))) _w _y))",
        "(lam (fn_0 $0 _a _q))",
        "(lam (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _q (cons _a (cons _rempty (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_1 $0 (lam _p)))",
        "(lam (fn_1 (fn_2 $0 _r) (lam _p)))",
        "(lam (fn_1 (fn_1 $0 (lam _r)) (lam _p)))",
        "(lam (fn_1 (fn_1 $0 (lam _n)) (lam _p)))",
        "(lam (fn_1 (fn_1 $0 (lam _p)) (lam _p)))",
        "(lam (fn_0 $0 _r _i))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_0 (fn_1 $0 (lam $0)) _r _i))",
        "(lam (fn_0 $0 _r (_rconcat _rempty _i)))",
        "(lam (fn_0 (_rflatten (_rsplit _a $0)) _r _i))",
        "(lam (fn_6 $0 _v _r))",
        "(lam (fn_1 $0 (lam (_rconcat _r _v))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _v (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (cons _q (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rappend _j (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (fn_3 $0 _d _t))",
        "(lam (fn_3 (fn_1 $0 (lam $0)) _d _t))",
        "(lam (fn_3 (fn_2 $0 _t) _d _t))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (map (lam $0) (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend _t (_rappend _d (_rrevcdr (cons _rempty (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (fn_8 $0 _f))",
        "(lam (fn_8 $0 _f))",
        "(lam (_rflatten (cons _f (_rsplit _rdot $0))))",
        "(lam (fn_8 $0 (_rconcat _rempty _f)))",
        "(lam (fn_8 $0 (_rconcat _f _rempty)))",
        "(lam (fn_6 $0 _n _f))",
        "(lam (fn_1 $0 (lam (_rconcat _f _n))))",
        "(lam (fn_6 (fn_1 $0 (lam $0)) _n _f))",
        "(lam (fn_6 (fn_2 $0 _v) _n _f))",
        "(lam (fn_6 (fn_2 $0 _f) _n _f))",
        "(lam (if (_rmatch _s (_rtail (_rsplit _rempty $0))) (fn_2 $0 _rempty) $0))",
        "(lam (if (_rmatch _rdot (_rtail (_rsplit _s $0))) (fn_2 $0 _rempty) $0))",
        "(lam (if (_rmatch _s (_rtail (_rsplit _rdot $0))) (fn_2 $0 _rempty) $0))",
        "(lam (fn_5 $0 _rempty))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))",
        "(lam (fn_0 $0 _m _r))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_0 $0 (_rconcat _r _m) _rempty))",
        "(lam (fn_7 (fn_0 $0 _m _r) _e _rempty))",
        "(lam (_rflatten (cons _r (cdr (_rsplit _rdot (fn_0 $0 _m _i))))))",
        "(lam (fn_0 $0 _w _b))",
        "(lam (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_8 (_rflatten (cons _w (cdr (_rsplit _rdot $0)))) _b))",
        "(lam (fn_0 $0 _rempty (_rconcat _b _w)))",
        "(lam (fn_0 $0 _w (_rconcat _b _rempty)))",
        "(lam (fn_2 $0 (_rconcat _a _o)))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot (fn_2 $0 _a)))))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_0 $0 _rempty _f))",
        "(lam (fn_0 $0 _f _rempty))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot (fn_1 $0 (lam $0)))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _f) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_6 $0 _t _w))",
        "(lam (fn_1 $0 (lam (_rconcat _w _t))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (map (lam (_rconcat _w _t)) (_rsplit _rdot $0)))))",
        "(lam (fn_2 $0 (_rconcat _i _y)))",
        "(lam (fn_7 (fn_2 $0 _i) _e _y))",
        "(lam (fn_7 (fn_2 $0 _i) _a _y))",
        "(lam (fn_3 (fn_7 $0 _e _a) _i _y))",
        "(lam (fn_3 (fn_7 $0 _e _n) _i _y))",
        "(lam (fn_6 $0 _e _u))",
        "(lam (fn_1 $0 (lam (_rconcat _u _e))))",
        "(lam (fn_6 (fn_1 $0 (lam _e)) _e _u))",
        "(lam (fn_6 (fn_1 $0 (lam _s)) _e _u))",
        "(lam (fn_6 (fn_1 $0 (lam _u)) _e _u))",
        "(lam (fn_0 $0 _e _k))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_8 (_rflatten (cons _e (cdr (_rsplit _rdot $0)))) _k))",
        "(lam (fn_0 $0 (_rconcat _k _e) _rempty))",
        "(lam (fn_8 (fn_0 $0 _e _rempty) _k))",
        "(lam (fn_0 $0 _e _x))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_0 (fn_1 $0 (lam $0)) _e _x))",
        "(lam (fn_0 $0 _e (_rconcat _rempty _x)))",
        "(lam (fn_0 (_rflatten (_rsplit _a $0)) _e _x))",
        "(lam (fn_0 $0 _i _m))",
        "(lam (fn_8 (_rflatten (cons _i (cdr (_rsplit _rdot $0)))) _m))",
        "(lam (fn_0 $0 _i (_rconcat _m _rempty)))",
        "(lam (fn_0 $0 _i (_rconcat _rempty _m)))",
        "(lam (fn_8 (fn_0 $0 _i _rempty) _m))",
        "(lam (fn_1 $0 (lam (_rconcat _q $0))))",
        "(lam (fn_1 (fn_1 $0 (lam $0)) (lam (_rconcat _q $0))))",
        "(lam (fn_1 (fn_1 $0 (lam (_rconcat _q $0))) (lam $0)))",
        "(lam (fn_8 (fn_1 $0 (lam (_rconcat _q $0))) _rempty))",
        "(lam (fn_1 $0 (lam (_rconcat _q (_rconcat $0 _rempty)))))",
        "(lam (fn_0 $0 _o _j))",
        "(lam (fn_8 (_rflatten (cons _o (cdr (_rsplit _rdot $0)))) _j))",
        "(lam (fn_0 (fn_1 $0 (lam $0)) _o _j))",
        "(lam (fn_0 $0 _o (_rconcat _j _rempty)))",
        "(lam (fn_0 $0 _o (_rconcat _rempty _j)))",
        "(lam (fn_6 $0 _i _g))",
        "(lam (fn_1 $0 (lam (_rconcat _g _i))))",
        "(lam (fn_2 (fn_6 $0 _i _g) _i))",
        "(lam (fn_6 (fn_2 $0 _i) _i _g))",
        "(lam (fn_6 (fn_1 $0 (lam _i)) _i _g))",
        "(lam (fn_2 $0 (_rconcat _o _m)))",
        "(lam (fn_7 (fn_2 $0 _o) _rempty _m))",
        "(lam (fn_7 (fn_2 $0 _o) _g _m))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (fn_6 $0 _x _h))",
        "(lam (fn_1 $0 (lam (_rconcat _h _x))))",
        "(lam (fn_6 (fn_2 $0 _x) _x _h))",
        "(lam (fn_6 (fn_1 $0 (lam _n)) _x _h))",
        "(lam (fn_6 (fn_1 $0 (lam _x)) _x _h))",
        "(lam (fn_0 $0 _r _r))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_7 (fn_0 $0 _r _r) _e _rempty))",
        "(lam (_rflatten (cons _r (cdr (_rsplit _rdot (fn_0 $0 _r _i))))))",
        "(lam (_rflatten (cons _r (cdr (_rsplit _rdot (fn_0 $0 _r _o))))))",
        "(lam (fn_4 _c _g $0))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_0 $0 _i _rempty))",
        "(lam (fn_0 $0 _rempty _i))",
        "(lam (fn_0 (_rflatten (_rsplit _a $0)) _i _rempty))",
        "(lam (_rflatten (_rsplit _a (fn_0 $0 _i _rempty))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons _e (cons _a (cons _rempty (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _e (cons _rempty (cons _a (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _rempty (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lam (fn_7 $0 _rempty _q))",
        "(lam (fn_7 $0 _a _q))",
        "(lam (fn_7 $0 _b _q))",
        "(lam (fn_7 $0 _d _q))",
        "(lam (fn_7 $0 _x _q))",
        "(lam (if (_rmatch _s (_rtail (_rsplit _rempty $0))) (fn_2 $0 _y) $0))",
        "(lam (if (_rmatch _rdot (_rtail (_rsplit _s $0))) (fn_2 $0 _y) $0))",
        "(lam (if (_rmatch _s (_rtail (_rsplit _rdot $0))) (fn_2 $0 _y) $0))",
        "(lam (fn_5 $0 _y))",
        "(lam (if (_rmatch _s (_rtail (cdr (_rsplit _rdot $0)))) (fn_2 $0 _y) $0))",
        "(lam (fn_0 $0 _w _a))",
        "(lam (_rflatten (cons _rempty (cons _a (cons _w (cdr (_rsplit _rdot $0)))))))",
        "(lam (fn_0 (fn_1 $0 (lam $0)) _w _a))",
        "(lam (fn_0 $0 (_rconcat _w _rempty) _a))",
        "(lam (fn_0 $0 _w (_rconcat _rempty _a)))",
        "(lam (fn_0 $0 _o (car (_rsplit _rempty $0))))",
        "(lam (fn_0 $0 _o (car (_rsplit _rdot $0))))",
        "(lam (fn_8 (_rflatten (cons _o (cdr (_rsplit _rdot $0)))) (car (_rsplit _rdot $0))))",
        "(lam (fn_0 $0 _o (car (map (lam $0) (_rsplit _rempty $0)))))",
        "(lam (fn_0 $0 _o (car (map (lam $0) (_rsplit _rdot $0)))))",
        "(lam (fn_0 $0 _i _q))",
        "(lam (fn_0 $0 (_rconcat _i _rempty) _q))",
        "(lam (fn_0 (_rflatten (cons _rdot (cdr (_rsplit _rdot $0)))) _i _q))",
        "(lam (fn_0 (_rflatten (cons _j (cdr (_rsplit _rdot $0)))) _i _q))",
        "(lam (fn_0 (_rflatten (cons _q (cdr (_rsplit _rdot $0)))) _i _q))",
        "(lam (fn_3 $0 _j _rempty))",
        "(lam (fn_3 $0 _rempty _j))",
        "(lam (fn_2 (_rflatten (_rrevcdr (_rsplit _rdot $0))) _j))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (map (lam $0) (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lam (fn_2 $0 _i))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lam (fn_0 $0 _s _e))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _e (cons _rempty (cons _s (cdr (_rsplit _rdot $0)))))))",
        "(lam (fn_4 _v _i $0))",
        "(lam (fn_1 $0 (lam (_rconcat _l $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0))))",
        "(lam (fn_1 $0 (lam (_rconcat _l $0))))",
        "(lam (_rflatten (_rsplit _j (fn_1 $0 (lam (_rconcat _l $0))))))",
        "(lam (_rflatten (_rsplit _t (fn_1 $0 (lam (_rconcat _l $0))))))",
        "(lam (fn_3 $0 _r _q))",
        "(lam (fn_7 (fn_3 $0 _rempty _r) _e _q))",
        "(lam (fn_2 (fn_3 $0 _r _j) _q))",
        "(lam (fn_2 (fn_3 $0 _r _m) _q))",
        "(lam (fn_7 (fn_3 $0 _rempty _r) _rempty _q))",
        "(lam (fn_3 $0 _b _j))",
        "(lam (fn_2 (fn_3 $0 _b _j) _j))",
        "(lam (fn_3 (fn_2 $0 _j) _b _j))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lam (fn_6 $0 _r _h))",
        "(lam (fn_1 $0 (lam (_rconcat _h _r))))",
        "(lam (fn_2 (fn_1 $0 (lam (_rconcat _h _r))) _r))",
        "(lam (fn_1 (fn_2 $0 _r) (lam (_rconcat _h _r))))",
        "(lam (fn_1 (fn_1 $0 (lam _r)) (lam (_rconcat _h _r))))",
        "(lam (fn_7 $0 _e _k))",
        "(lam (fn_7 $0 _rempty _k))",
        "(lam (fn_7 $0 _b _k))",
        "(lam (fn_7 $0 _x _k))",
        "(lam (fn_7 $0 _g _k))",
        "(lam (fn_7 (fn_2 $0 _x) _e _s))",
        "(lam (fn_7 (fn_2 $0 _x) _k _s))",
        "(lam (fn_3 (fn_7 $0 _e _s) _x _s))",
        "(lam (fn_3 (fn_7 $0 _e _g) _x _s))",
        "(lam (fn_7 (fn_2 (fn_1 $0 (lam $0)) _x) _e _s))",
        "(lam (fn_7 $0 _e _a))",
        "(lam (fn_7 $0 _rempty _a))",
        "(lam (fn_7 $0 _k _a))",
        "(lam (fn_7 $0 _n _a))",
        "(lam (fn_7 $0 _x _a))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_0 $0 _a _rempty))",
        "(lam (fn_0 $0 _rempty _a))",
        "(lam (fn_8 $0 _v))",
        "(lam (_rflatten (cons _v (_rsplit _b $0))))",
        "(lam (_rflatten (cons _v (_rsplit _e $0))))",
        "(lam (_rflatten (cons _v (_rsplit _c $0))))",
        "(lam (_rflatten (cons _v (_rsplit _g $0))))",
        "(lam (fn_4 _o _t $0))",
        "(lam (fn_8 $0 _b))",
        "(lam (fn_8 (fn_1 $0 (lam $0)) _b))",
        "(lam (fn_8 $0 _b))",
        "(lam (fn_8 $0 (_rconcat _b _rempty)))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot (fn_8 $0 _v))))))"
    ],
    "rewritten_dreamcoder": [
        "(lambda (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _rempty _v)))",
        "(lambda (if (_rmatch _e (_rtail (_rsplit _rempty $0))) $0 (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _v _rempty)))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 $1))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _rempty _v) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 $1))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _v _rempty) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 $1))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _rempty _v) (lambda $0)) $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _n))",
        "(lambda (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _n (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _n (cons _rempty (cons _a (cdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (_rflatten (cons _i (cdr (_rsplit _rdot $0)))) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (_rflatten (cons _v (cdr (_rsplit _rdot $0)))) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _k)) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _z)) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _r))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) _r))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _r))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _e) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _o _u))",
        "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (map (lambda $0) (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lambda (_rflatten (_rappend _u (_rappend _o (_rrevcdr (cons _rempty (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) $0 _e _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) $0 _a _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) $0 _b _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) $0 _i _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) $0 _c _d))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _j _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _a)) _j _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _i)) _j _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _j)) _j _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _q)) _j _q))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat $0 _v))))",
        "(lambda (_rflatten (map (lambda (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lambda (_rflatten (_rappend _rempty (map (lambda (_rconcat $0 _v)) (_rsplit _rdot $0)))))",
        "(lambda (car (map (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $1 (lambda (_rconcat $0 _v)))) (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (car (map (lambda (_rconcat $1 _v)) (_rsplit _rdot $1))))))",
        "(lambda (#(lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 $1))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) $0 _rdot _o) $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _f))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (_rflatten (_rappend _f (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _j))",
        "(lambda (_rflatten (cons _j (_rsplit _rempty $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _j $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _t $0))))",
        "(lambda (_rflatten (cons _j (cdr (_rsplit _rdot (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _v))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _s _h))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _h _s))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _s _h) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _s)) _s _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _z)) _s _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _w))",
        "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit (_rnot _p) $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _j _r $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w (_rconcat _rempty _y)))",
        "(lambda (_rflatten (cons _y (cdr (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _a))))))",
        "(lambda (_rflatten (cons _y (cdr (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _b))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cons _j (cdr (_rsplit _rdot $0)))) _w _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _q))",
        "(lambda (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _q (cons _a (cons _rempty (cdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (cons _q (cons _a (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _p)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _r) (lambda _p)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _r)) (lambda _p)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _n)) (lambda _p)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _p)) (lambda _p)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _i))",
        "(lambda (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) _r _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r (_rconcat _rempty _i)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _a $0)) _r _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _v _r))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _r _v))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (cons _v (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (cons _q (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rappend _j (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _d _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) _d _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _t) _d _t))",
        "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (map (lambda $0) (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lambda (_rflatten (_rappend _t (_rappend _d (_rrevcdr (cons _rempty (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _f))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _f))",
        "(lambda (_rflatten (cons _f (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 (_rconcat _rempty _f)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 (_rconcat _f _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _n _f))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _f _n))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) _n _f))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _v) _n _f))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _f) _n _f))",
        "(lambda (if (_rmatch _s (_rtail (_rsplit _rempty $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _rempty) $0))",
        "(lambda (if (_rmatch _rdot (_rtail (_rsplit _s $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _rempty) $0))",
        "(lambda (if (_rmatch _s (_rtail (_rsplit _rdot $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _rempty) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _s (_rtail (_rsplit _s $1))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $1 $0) $1))) $0 _rempty))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _m _r))",
        "(lambda (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _r _m) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _m _r) _e _rempty))",
        "(lambda (_rflatten (cons _r (cdr (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _m _i))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _b))",
        "(lambda (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (_rflatten (cons _w (cdr (_rsplit _rdot $0)))) _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty (_rconcat _b _w)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w (_rconcat _b _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _a _o)))",
        "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (_rappend _o (_rappend _a (_rrevcdr (_rsplit _rdot (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _a)))))))",
        "(lambda (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _f))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _f _rempty))",
        "(lambda (_rflatten (cons _f (cdr (_rsplit _rdot (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)))))))",
        "(lambda (_rflatten (cons (_rconcat _rempty _f) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _t _w))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _w _t))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rappend _a (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _w _t)) (map (lambda (_rconcat _w _t)) (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _i _y)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i) _e _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i) _a _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) $0 _e _a) _i _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) $0 _e _n) _i _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _e _u))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _u _e))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _e)) _e _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _s)) _e _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _u)) _e _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _k))",
        "(lambda (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (_rflatten (cons _e (cdr (_rsplit _rdot $0)))) _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _k _e) _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _rempty) _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e _x))",
        "(lambda (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) _e _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _e (_rconcat _rempty _x)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _a $0)) _e _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _m))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (_rflatten (cons _i (cdr (_rsplit _rdot $0)))) _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i (_rconcat _m _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i (_rconcat _rempty _m)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _rempty) _m))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _q $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) (lambda (_rconcat _q $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _q $0))) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _q $0))) _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _q (_rconcat $0 _rempty)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o _j))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (_rflatten (cons _o (cdr (_rsplit _rdot $0)))) _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) _o _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o (_rconcat _j _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o (_rconcat _rempty _j)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i _g))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _g _i))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _i _g) _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i) _i _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _i)) _i _g))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 (_rconcat _o _m)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _o) _rempty _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _o) _g _m))",
        "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (_rappend _m (_rappend _o (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _x _h))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _h _x))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _x) _x _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _n)) _x _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _x)) _x _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _r))",
        "(lambda (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _r) _e _rempty))",
        "(lambda (_rflatten (cons _r (cdr (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _i))))))",
        "(lambda (_rflatten (cons _r (cdr (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _r _o))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _c _g $0))",
        "(lambda (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (_rsplit _a $0)) _i _rempty))",
        "(lambda (_rflatten (_rsplit _a (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _rempty))))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (cons _e (cons _a (cons _rempty (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lambda (_rflatten (cons _e (cons _rempty (cons _a (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lambda (_rflatten (cons _rempty (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) $0 _rempty _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) $0 _a _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) $0 _b _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) $0 _d _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) $0 _x _q))",
        "(lambda (if (_rmatch _s (_rtail (_rsplit _rempty $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _y) $0))",
        "(lambda (if (_rmatch _rdot (_rtail (_rsplit _s $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _y) $0))",
        "(lambda (if (_rmatch _s (_rtail (_rsplit _rdot $0))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _y) $0))",
        "(lambda (#(lambda (lambda (if (_rmatch _s (_rtail (_rsplit _s $1))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $1 $0) $1))) $0 _y))",
        "(lambda (if (_rmatch _s (_rtail (cdr (_rsplit _rdot $0)))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _y) $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w _a))",
        "(lambda (_rflatten (cons _rempty (cons _a (cons _w (cdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) _w _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _w _rempty) _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _w (_rconcat _rempty _a)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o (car (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o (car (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (_rflatten (cons _o (cdr (_rsplit _rdot $0)))) (car (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o (car (map (lambda $0) (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _o (car (map (lambda $0) (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _i _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _i _rempty) _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cons _rdot (cdr (_rsplit _rdot $0)))) _i _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cons _j (cdr (_rsplit _rdot $0)))) _i _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) (_rflatten (cons _q (cdr (_rsplit _rdot $0)))) _i _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _j _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _rempty _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (_rflatten (_rrevcdr (_rsplit _rdot $0))) _j))",
        "(lambda (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (map (lambda $0) (_rrevcdr (_rsplit _rdot $0))))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _i))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _a) $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _rdot) $0)))))",
        "(lambda (_rflatten (_rappend _i (_rrevcdr (_rsplit (_rnot _b) $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _s _e))",
        "(lambda (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _e (cons _s (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _e (cons _rempty (cons _s (cdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _v _i $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _l $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _l $0)) (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _l $0))))",
        "(lambda (_rflatten (_rsplit _j (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _l $0))))))",
        "(lambda (_rflatten (_rsplit _t (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _l $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _r _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _rempty _r) _e _q))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _r _j) _q))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _r _m) _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _rempty _r) _rempty _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _b _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) $0 _b _j) _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _j) _b _j))",
        "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rempty $0)))))))",
        "(lambda (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2)))))) $0 _r _h))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _h _r))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (_rconcat _h _r))) _r))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _r) (lambda (_rconcat _h _r))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda _r)) (lambda (_rconcat _h _r))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) $0 _e _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) $0 _rempty _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) $0 _b _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) $0 _x _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) $0 _g _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _x) _e _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $0 _x) _k _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) $0 _e _s) _x _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2))))))))) (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) $0 _e _g) _x _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) _x) _e _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) $0 _e _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) $0 _rempty _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) $0 _k _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) $0 _n _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2)))))) $0 _x _a))",
        "(lambda (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _a _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2)))))))) $0 _rempty _a))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _v))",
        "(lambda (_rflatten (cons _v (_rsplit _b $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _e $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _c $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _g $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0)))))) _o _t $0))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda $0)) _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _b))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 (_rconcat _b _rempty)))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit _rdot (#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1))))) $0 _v))))))"
    ],
    "abstractions": [
        {
            "body": "(_rflatten (cons #2 (cons #1 (cdr (_rsplit _rdot #0)))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (cons $0 (cons $1 (cdr (_rsplit _rdot $2))))))))",
            "arity": 3,
            "name": "fn_0",
            "utility": 8989,
            "final_cost": 47084,
            "compression_ratio": 1.1909141109506414,
            "cumulative_compression_ratio": 1.1909141109506414,
            "num_uses": 60,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_0 $0 _w (_rconcat _b _rempty)": "(_rflatten (cons (_rconcat _b _rempty) (cons _w (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _rempty (_rconcat _b _w)": "(_rflatten (cons (_rconcat _b _w) (cons _rempty (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _o (_rconcat _j _rempty)": "(_rflatten (cons (_rconcat _j _rempty) (cons _o (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _i (_rconcat _m _rempty)": "(_rflatten (cons (_rconcat _m _rempty) (cons _i (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _w (_rconcat _rempty _a)": "(_rflatten (cons (_rconcat _rempty _a) (cons _w (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _r (_rconcat _rempty _i)": "(_rflatten (cons (_rconcat _rempty _i) (cons _r (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _o (_rconcat _rempty _j)": "(_rflatten (cons (_rconcat _rempty _j) (cons _o (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _i (_rconcat _rempty _m)": "(_rflatten (cons (_rconcat _rempty _m) (cons _i (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _e (_rconcat _rempty _x)": "(_rflatten (cons (_rconcat _rempty _x) (cons _e (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _w (_rconcat _rempty _y)": "(_rflatten (cons (_rconcat _rempty _y) (cons _w (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _o (car (_rsplit _rdot $0))": "(_rflatten (cons (car (_rsplit _rdot $0)) (cons _o (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _o (car (_rsplit _rempty $0))": "(_rflatten (cons (car (_rsplit _rempty $0)) (cons _o (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _o (car (map (lam $0) (_rsplit _rdot $0)))": "(_rflatten (cons (car (map (lam $0) (_rsplit _rdot $0))) (cons _o (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _o (car (map (lam $0) (_rsplit _rempty $0)))": "(_rflatten (cons (car (map (lam $0) (_rsplit _rempty $0))) (cons _o (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _w _rempty) _a": "(_rflatten (cons _a (cons (_rconcat _w _rempty) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _rempty _a": "(_rflatten (cons _a (cons _rempty (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _w _a": "(_rflatten (cons _a (cons _w (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rdot $0))) _w _a": "(_rflatten (cons _a (cons _w (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 $0 _w _b": "(_rflatten (cons _b (cons _w (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _s _e": "(_rflatten (cons _e (cons _s (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _rempty _f": "(_rflatten (cons _f (cons _rempty (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _m _i": "(_rflatten (cons _i (cons _m (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _r _i": "(_rflatten (cons _i (cons _r (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _a $0)) _r _i": "(_rflatten (cons _i (cons _r (cdr (_rsplit _rdot (_rflatten (_rsplit _a $0)))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rdot $0))) _r _i": "(_rflatten (cons _i (cons _r (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 $0 _rempty _i": "(_rflatten (cons _i (cons _rempty (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _o _j": "(_rflatten (cons _j (cons _o (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rdot $0))) _o _j": "(_rflatten (cons _j (cons _o (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 $0 _e _k": "(_rflatten (cons _k (cons _e (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _i _m": "(_rflatten (cons _m (cons _i (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _a _n": "(_rflatten (cons _n (cons _a (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _r _o": "(_rflatten (cons _o (cons _r (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _i _rempty) _q": "(_rflatten (cons _q (cons (_rconcat _i _rempty) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _a _q": "(_rflatten (cons _q (cons _a (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _i _q": "(_rflatten (cons _q (cons _i (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 (_rflatten (cons _j (cdr (_rsplit _rdot $0)))) _i _q": "(_rflatten (cons _q (cons _i (cdr (_rsplit _rdot (_rflatten (cons _j (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _q (cdr (_rsplit _rdot $0)))) _i _q": "(_rflatten (cons _q (cons _i (cdr (_rsplit _rdot (_rflatten (cons _q (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_0 (_rflatten (cons _rdot (cdr (_rsplit _rdot $0)))) _i _q": "(_rflatten (cons _q (cons _i (cdr (_rsplit _rdot (_rflatten (cons _rdot (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_0 $0 _m _r": "(_rflatten (cons _r (cons _m (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _r _r": "(_rflatten (cons _r (cons _r (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _k _e) _rempty": "(_rflatten (cons _rempty (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 (_rconcat _r _m) _rempty": "(_rflatten (cons _rempty (cons (_rconcat _r _m) (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _a _rempty": "(_rflatten (cons _rempty (cons _a (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _e _rempty": "(_rflatten (cons _rempty (cons _e (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _f _rempty": "(_rflatten (cons _rempty (cons _f (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _i _rempty": "(_rflatten (cons _rempty (cons _i (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _a $0)) _i _rempty": "(_rflatten (cons _rempty (cons _i (cdr (_rsplit _rdot (_rflatten (_rsplit _a $0)))))))"
                },
                {
                    "fn_0 $0 _i _w": "(_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 $0 _e _x": "(_rflatten (cons _x (cons _e (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 (_rflatten (_rsplit _a $0)) _e _x": "(_rflatten (cons _x (cons _e (cdr (_rsplit _rdot (_rflatten (_rsplit _a $0)))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rdot $0))) _e _x": "(_rflatten (cons _x (cons _e (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_0 $0 _w _y": "(_rflatten (cons _y (cons _w (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_0 (_rflatten (cons _j (cdr (_rsplit _rdot $0)))) _w _y": "(_rflatten (cons _y (cons _w (cdr (_rsplit _rdot (_rflatten (cons _j (cdr (_rsplit _rdot $0)))))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map #1 (_rsplit _rdot #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1)))))",
            "arity": 2,
            "name": "fn_1",
            "utility": 5151,
            "final_cost": 41933,
            "compression_ratio": 1.122838814299001,
            "cumulative_compression_ratio": 1.337204588271767,
            "num_uses": 68,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_1 $0 (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (_rappend _v (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (_rappend _v (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rdot (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $1 (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rdot $1)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _f _n))": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _g _i))": "(_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _h _r))": "(_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))) (lam (_rconcat _h _r))": "(_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _r) (_rsplit _rdot $0))) (lam (_rconcat _h _r))": "(_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (map (lam _r) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _h _s))": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _h _x))": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _l $0))": "(_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _q $0))": "(_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rdot $0))) (lam (_rconcat _q $0))": "(_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _q (_rconcat $0 _rempty)))": "(_rflatten (map (lam (_rconcat _q (_rconcat $0 _rempty))) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _r _v))": "(_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _u _e))": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (_rconcat _w _t))": "(_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (car (map (lam (_rconcat $1 _v)) (_rsplit _rdot $1))))": "(_rflatten (map (lam (car (map (lam (_rconcat $1 _v)) (_rsplit _rdot $1)))) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _g $0) _c $0))": "(_rflatten (map (lam (if (_rmatch _g $0) _c $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _i $0) _v $0))": "(_rflatten (map (lam (if (_rmatch _i $0) _v $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _r $0) _j $0))": "(_rflatten (map (lam (if (_rmatch _r $0) _j $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam (if (_rmatch _t $0) _o $0))": "(_rflatten (map (lam (if (_rmatch _t $0) _o $0)) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _a)": "(_rflatten (map (lam _a) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _e)": "(_rflatten (map (lam _e) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _i)": "(_rflatten (map (lam _i) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (cons _i (cdr (_rsplit _rdot $0)))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_1 (_rflatten (cons _v (cdr (_rsplit _rdot $0)))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (cons _v (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _k) (_rsplit _rdot $0))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (map (lam _k) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _z) (_rsplit _rdot $0))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rdot (_rflatten (map (lam _z) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam _n)": "(_rflatten (map (lam _n) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))) (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rdot (_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _n) (_rsplit _rdot $0))) (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rdot (_rflatten (map (lam _n) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _p) (_rsplit _rdot $0))) (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rdot (_rflatten (map (lam _p) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam _r) (_rsplit _rdot $0))) (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rdot (_rflatten (map (lam _r) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_1 $0 (lam _q)": "(_rflatten (map (lam _q) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _r)": "(_rflatten (map (lam _r) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _s)": "(_rflatten (map (lam _s) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _u)": "(_rflatten (map (lam _u) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _x)": "(_rflatten (map (lam _x) (_rsplit _rdot $0)))"
                },
                {
                    "fn_1 $0 (lam _z)": "(_rflatten (map (lam _z) (_rsplit _rdot $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rrevcdr (_rsplit _rdot #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1))))))",
            "arity": 2,
            "name": "fn_2",
            "utility": 3737,
            "final_cost": 38196,
            "compression_ratio": 1.0978374698921354,
            "cumulative_compression_ratio": 1.468033301916431,
            "num_uses": 41,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_2 $0 (_rconcat _a _o)": "(_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _i _y)": "(_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _o _m)": "(_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 $0 _a": "(_rflatten (_rappend _a (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 $0 _e": "(_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 $0 _f": "(_rflatten (_rappend _f (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 $0 _i": "(_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0))) _i": "(_rflatten (_rappend _i (_rrevcdr (_rsplit _rdot (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 $0 _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))))))"
                },
                {
                    "fn_2 (_rflatten (_rrevcdr (_rsplit _rdot $0))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rdot (_rflatten (_rrevcdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_2 $0 _o": "(_rflatten (_rappend _o (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))) _q": "(_rflatten (_rappend _q (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _m (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0)))))) _q": "(_rflatten (_rappend _q (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _m (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))))))"
                },
                {
                    "fn_2 $0 _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot $0)))) _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _e (_rrevcdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_2 (fn_1 $0 (lam $0)) _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (fn_1 $0 (lam $0))))))"
                },
                {
                    "fn_2 (fn_1 $0 (lam (_rconcat _h _r))) _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rdot (fn_1 $0 (lam (_rconcat _h _r)))))))"
                },
                {
                    "fn_2 $0 _rempty": "(_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 $0 _t": "(_rflatten (_rappend _t (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 $0 _v": "(_rflatten (_rappend _v (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 $0 _x": "(_rflatten (_rappend _x (_rrevcdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_2 (fn_1 $0 (lam $0)) _x": "(_rflatten (_rappend _x (_rrevcdr (_rsplit _rdot (fn_1 $0 (lam $0))))))"
                },
                {
                    "fn_2 $0 _y": "(_rflatten (_rappend _y (_rrevcdr (_rsplit _rdot $0))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #2 (_rappend #1 (_rrevcdr (_rrevcdr (_rsplit _rdot #0))))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rappend $1 (_rrevcdr (_rrevcdr (_rsplit _rdot $2)))))))))",
            "arity": 3,
            "name": "fn_3",
            "utility": 3333,
            "final_cost": 34863,
            "compression_ratio": 1.0956027880561052,
            "cumulative_compression_ratio": 1.608381378538852,
            "num_uses": 23,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_3 $0 _b _j": "(_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 (fn_2 $0 _j) _b _j": "(_rflatten (_rappend _j (_rappend _b (_rrevcdr (_rrevcdr (_rsplit _rdot (fn_2 $0 _j)))))))"
                },
                {
                    "fn_3 $0 _r _j": "(_rflatten (_rappend _j (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 $0 _rempty _j": "(_rflatten (_rappend _j (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 $0 _r _m": "(_rflatten (_rappend _m (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 $0 _r _q": "(_rflatten (_rappend _q (_rappend _r (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 $0 _rempty _r": "(_rflatten (_rappend _r (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 $0 _j _rempty": "(_rflatten (_rappend _rempty (_rappend _j (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 $0 _v _rempty": "(_rflatten (_rappend _rempty (_rappend _v (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 (_rflatten (_rappend _g (_rsplit _e $0))) _x _s": "(_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _g (_rsplit _e $0)))))))))"
                },
                {
                    "fn_3 (_rflatten (_rappend _s (_rsplit _e $0))) _x _s": "(_rflatten (_rappend _s (_rappend _x (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _s (_rsplit _e $0)))))))))"
                },
                {
                    "fn_3 $0 _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 (fn_1 $0 (lam $0)) _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot (fn_1 $0 (lam $0))))))))"
                },
                {
                    "fn_3 (fn_2 $0 _t) _d _t": "(_rflatten (_rappend _t (_rappend _d (_rrevcdr (_rrevcdr (_rsplit _rdot (fn_2 $0 _t)))))))"
                },
                {
                    "fn_3 $0 _o _u": "(_rflatten (_rappend _u (_rappend _o (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 $0 _rempty _v": "(_rflatten (_rappend _v (_rappend _rempty (_rrevcdr (_rrevcdr (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 (_rflatten (_rappend _a (_rsplit _e $0))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _a (_rsplit _e $0)))))))))"
                },
                {
                    "fn_3 (_rflatten (_rappend _n (_rsplit _e $0))) _i _y": "(_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rrevcdr (_rsplit _rdot (_rflatten (_rappend _n (_rsplit _e $0)))))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_1 #2 (lam (if (_rmatch #1 $0) #0 $0)))",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rdot $1))))) $0 (lambda (if (_rmatch $2 $0) $3 $0))))))",
            "arity": 3,
            "name": "fn_4",
            "utility": 1620,
            "final_cost": 33243,
            "compression_ratio": 1.0487320638931505,
            "cumulative_compression_ratio": 1.6867611226423609,
            "num_uses": 4,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_4 _c _g $0": "(fn_1 $0 (lam (if (_rmatch _g $0) _c $0)))"
                },
                {
                    "fn_4 _v _i $0": "(fn_1 $0 (lam (if (_rmatch _i $0) _v $0)))"
                },
                {
                    "fn_4 _j _r $0": "(fn_1 $0 (lam (if (_rmatch _r $0) _j $0)))"
                },
                {
                    "fn_4 _o _t $0": "(fn_1 $0 (lam (if (_rmatch _t $0) _o $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(if (_rmatch _s (_rtail (_rsplit _s #0))) (fn_2 #0 #1) #0)",
            "dreamcoder": "#(lambda (lambda (if (_rmatch _s (_rtail (_rsplit _s $1))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rdot $1)))))) $1 $0) $1)))",
            "arity": 2,
            "name": "fn_5",
            "utility": 1616,
            "final_cost": 31627,
            "compression_ratio": 1.0510955828880386,
            "cumulative_compression_ratio": 1.7729471653966549,
            "num_uses": 2,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_5 $0 _rempty": "(if (_rmatch _s (_rtail (_rsplit _s $0))) (fn_2 $0 _rempty) $0)"
                },
                {
                    "fn_5 $0 _y": "(if (_rmatch _s (_rtail (_rsplit _s $0))) (fn_2 $0 _y) $0)"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map (lam (_rconcat #2 #1)) (_rsplit _rempty #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (map (lambda (_rconcat $1 $2)) (_rsplit _rempty $2))))))",
            "arity": 3,
            "name": "fn_6",
            "utility": 1221,
            "final_cost": 30406,
            "compression_ratio": 1.040156548049727,
            "cumulative_compression_ratio": 1.8441426034335329,
            "num_uses": 30,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_6 $0 _v #0": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 _n _f": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 (fn_1 $0 (lam $0)) _n _f": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty (fn_1 $0 (lam $0)))))"
                },
                {
                    "fn_6 (fn_2 $0 _f) _n _f": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty (fn_2 $0 _f))))"
                },
                {
                    "fn_6 (fn_2 $0 _v) _n _f": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty (fn_2 $0 _v))))"
                },
                {
                    "fn_6 $0 _i _g": "(_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 (fn_1 $0 (lam _i)) _i _g": "(_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty (fn_1 $0 (lam _i)))))"
                },
                {
                    "fn_6 (fn_2 $0 _i) _i _g": "(_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty (fn_2 $0 _i))))"
                },
                {
                    "fn_6 $0 _r _h": "(_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 _s _h": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 (fn_1 $0 (lam _s)) _s _h": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty (fn_1 $0 (lam _s)))))"
                },
                {
                    "fn_6 (fn_1 $0 (lam _z)) _s _h": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty (fn_1 $0 (lam _z)))))"
                },
                {
                    "fn_6 $0 _x _h": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 (fn_1 $0 (lam _n)) _x _h": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty (fn_1 $0 (lam _n)))))"
                },
                {
                    "fn_6 (fn_1 $0 (lam _x)) _x _h": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty (fn_1 $0 (lam _x)))))"
                },
                {
                    "fn_6 (fn_2 $0 _x) _x _h": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty (fn_2 $0 _x))))"
                },
                {
                    "fn_6 $0 #0 _l": "(_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 _j _q": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 (fn_1 $0 (lam _a)) _j _q": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty (fn_1 $0 (lam _a)))))"
                },
                {
                    "fn_6 (fn_1 $0 (lam _i)) _j _q": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty (fn_1 $0 (lam _i)))))"
                },
                {
                    "fn_6 (fn_1 $0 (lam _j)) _j _q": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty (fn_1 $0 (lam _j)))))"
                },
                {
                    "fn_6 (fn_1 $0 (lam _q)) _j _q": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty (fn_1 $0 (lam _q)))))"
                },
                {
                    "fn_6 $0 _v _r": "(_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 $0 _e _u": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_6 (fn_1 $0 (lam _e)) _e _u": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (fn_1 $0 (lam _e)))))"
                },
                {
                    "fn_6 (fn_1 $0 (lam _s)) _e _u": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (fn_1 $0 (lam _s)))))"
                },
                {
                    "fn_6 (fn_1 $0 (lam _u)) _e _u": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (fn_1 $0 (lam _u)))))"
                },
                {
                    "fn_6 $0 _t _w": "(_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #2 (_rsplit #1 #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (_rappend $0 (_rsplit $1 $2))))))",
            "arity": 3,
            "name": "fn_7",
            "utility": 1212,
            "final_cost": 29194,
            "compression_ratio": 1.0415153798725765,
            "cumulative_compression_ratio": 1.9207028841542784,
            "num_uses": 36,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_7 $0 _e _a": "(_rflatten (_rappend _a (_rsplit _e $0)))"
                },
                {
                    "fn_7 $0 _k _a": "(_rflatten (_rappend _a (_rsplit _k $0)))"
                },
                {
                    "fn_7 $0 _n _a": "(_rflatten (_rappend _a (_rsplit _n $0)))"
                },
                {
                    "fn_7 $0 _rempty _a": "(_rflatten (_rappend _a (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 $0 _x _a": "(_rflatten (_rappend _a (_rsplit _x $0)))"
                },
                {
                    "fn_7 $0 _a _d": "(_rflatten (_rappend _d (_rsplit _a $0)))"
                },
                {
                    "fn_7 $0 _b _d": "(_rflatten (_rappend _d (_rsplit _b $0)))"
                },
                {
                    "fn_7 $0 _c _d": "(_rflatten (_rappend _d (_rsplit _c $0)))"
                },
                {
                    "fn_7 $0 _e _d": "(_rflatten (_rappend _d (_rsplit _e $0)))"
                },
                {
                    "fn_7 $0 _i _d": "(_rflatten (_rappend _d (_rsplit _i $0)))"
                },
                {
                    "fn_7 $0 _e _g": "(_rflatten (_rappend _g (_rsplit _e $0)))"
                },
                {
                    "fn_7 $0 _b _k": "(_rflatten (_rappend _k (_rsplit _b $0)))"
                },
                {
                    "fn_7 $0 _e _k": "(_rflatten (_rappend _k (_rsplit _e $0)))"
                },
                {
                    "fn_7 $0 _g _k": "(_rflatten (_rappend _k (_rsplit _g $0)))"
                },
                {
                    "fn_7 $0 _rempty _k": "(_rflatten (_rappend _k (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 $0 _x _k": "(_rflatten (_rappend _k (_rsplit _x $0)))"
                },
                {
                    "fn_7 (fn_2 $0 _o) _g _m": "(_rflatten (_rappend _m (_rsplit _g (fn_2 $0 _o))))"
                },
                {
                    "fn_7 (fn_2 $0 _o) _rempty _m": "(_rflatten (_rappend _m (_rsplit _rempty (fn_2 $0 _o))))"
                },
                {
                    "fn_7 $0 _e _n": "(_rflatten (_rappend _n (_rsplit _e $0)))"
                },
                {
                    "fn_7 $0 _rdot _o": "(_rflatten (_rappend _o (_rsplit _rdot $0)))"
                },
                {
                    "fn_7 $0 _a _q": "(_rflatten (_rappend _q (_rsplit _a $0)))"
                },
                {
                    "fn_7 $0 _b _q": "(_rflatten (_rappend _q (_rsplit _b $0)))"
                },
                {
                    "fn_7 $0 _d _q": "(_rflatten (_rappend _q (_rsplit _d $0)))"
                },
                {
                    "fn_7 (fn_3 $0 _rempty _r) _e _q": "(_rflatten (_rappend _q (_rsplit _e (fn_3 $0 _rempty _r))))"
                },
                {
                    "fn_7 $0 _rempty _q": "(_rflatten (_rappend _q (_rsplit _rempty $0)))"
                },
                {
                    "fn_7 (fn_3 $0 _rempty _r) _rempty _q": "(_rflatten (_rappend _q (_rsplit _rempty (fn_3 $0 _rempty _r))))"
                },
                {
                    "fn_7 $0 _x _q": "(_rflatten (_rappend _q (_rsplit _x $0)))"
                },
                {
                    "fn_7 (fn_0 $0 _m _r) _e _rempty": "(_rflatten (_rappend _rempty (_rsplit _e (fn_0 $0 _m _r))))"
                },
                {
                    "fn_7 (fn_0 $0 _r _r) _e _rempty": "(_rflatten (_rappend _rempty (_rsplit _e (fn_0 $0 _r _r))))"
                },
                {
                    "fn_7 $0 _e _s": "(_rflatten (_rappend _s (_rsplit _e $0)))"
                },
                {
                    "fn_7 (fn_2 $0 _x) _e _s": "(_rflatten (_rappend _s (_rsplit _e (fn_2 $0 _x))))"
                },
                {
                    "fn_7 (fn_2 (fn_1 $0 (lam $0)) _x) _e _s": "(_rflatten (_rappend _s (_rsplit _e (fn_2 (fn_1 $0 (lam $0)) _x))))"
                },
                {
                    "fn_7 (fn_2 $0 _x) _k _s": "(_rflatten (_rappend _s (_rsplit _k (fn_2 $0 _x))))"
                },
                {
                    "fn_7 (fn_2 $0 _i) _a _y": "(_rflatten (_rappend _y (_rsplit _a (fn_2 $0 _i))))"
                },
                {
                    "fn_7 (fn_2 $0 _i) _e _y": "(_rflatten (_rappend _y (_rsplit _e (fn_2 $0 _i))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (_rsplit _a #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (_rsplit _a $1)))))",
            "arity": 2,
            "name": "fn_8",
            "utility": 1212,
            "final_cost": 27982,
            "compression_ratio": 1.0433135587163176,
            "cumulative_compression_ratio": 2.0038953613036954,
            "num_uses": 21,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_8 $0 (_rconcat _b _rempty)": "(_rflatten (cons (_rconcat _b _rempty) (_rsplit _a $0)))"
                },
                {
                    "fn_8 $0 (_rconcat _f _rempty)": "(_rflatten (cons (_rconcat _f _rempty) (_rsplit _a $0)))"
                },
                {
                    "fn_8 $0 (_rconcat _rempty _f)": "(_rflatten (cons (_rconcat _rempty _f) (_rsplit _a $0)))"
                },
                {
                    "fn_8 (_rflatten (cons _o (cdr (_rsplit _rdot $0)))) (car (_rsplit _rdot $0))": "(_rflatten (cons (car (_rsplit _rdot $0)) (_rsplit _a (_rflatten (cons _o (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_8 $0 _b": "(_rflatten (cons _b (_rsplit _a $0)))"
                },
                {
                    "fn_8 (_rflatten (cons _w (cdr (_rsplit _rdot $0)))) _b": "(_rflatten (cons _b (_rsplit _a (_rflatten (cons _w (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_8 (fn_1 $0 (lam $0)) _b": "(_rflatten (cons _b (_rsplit _a (fn_1 $0 (lam $0)))))"
                },
                {
                    "fn_8 $0 _f": "(_rflatten (cons _f (_rsplit _a $0)))"
                },
                {
                    "fn_8 $0 _j": "(_rflatten (cons _j (_rsplit _a $0)))"
                },
                {
                    "fn_8 (_rflatten (cons _o (cdr (_rsplit _rdot $0)))) _j": "(_rflatten (cons _j (_rsplit _a (_rflatten (cons _o (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_8 (_rflatten (cons _e (cdr (_rsplit _rdot $0)))) _k": "(_rflatten (cons _k (_rsplit _a (_rflatten (cons _e (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_8 (fn_0 $0 _e _rempty) _k": "(_rflatten (cons _k (_rsplit _a (fn_0 $0 _e _rempty))))"
                },
                {
                    "fn_8 (_rflatten (cons _i (cdr (_rsplit _rdot $0)))) _m": "(_rflatten (cons _m (_rsplit _a (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_8 (fn_0 $0 _i _rempty) _m": "(_rflatten (cons _m (_rsplit _a (fn_0 $0 _i _rempty))))"
                },
                {
                    "fn_8 (fn_1 $0 (lam (_rconcat _q $0))) _rempty": "(_rflatten (cons _rempty (_rsplit _a (fn_1 $0 (lam (_rconcat _q $0))))))"
                },
                {
                    "fn_8 (fn_6 $0 _s _h) _rempty": "(_rflatten (cons _rempty (_rsplit _a (fn_6 $0 _s _h))))"
                },
                {
                    "fn_8 $0 _v": "(_rflatten (cons _v (_rsplit _a $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(if (_rmatch _e (_rtail (_rsplit _rdot #1))) #1 #0)",
            "dreamcoder": "#(lambda (lambda (if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 $1)))",
            "arity": 2,
            "name": "fn_9",
            "utility": 1212,
            "final_cost": 26770,
            "compression_ratio": 1.0452745610758312,
            "cumulative_compression_ratio": 2.094620844228614,
            "num_uses": 4,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_9 (fn_1 (fn_3 $0 _rempty _v) (lam $0)) $0": "(if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (fn_1 (fn_3 $0 _rempty _v) (lam $0)))"
                },
                {
                    "fn_9 (fn_3 $0 _rempty _v) $0": "(if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (fn_3 $0 _rempty _v))"
                },
                {
                    "fn_9 (fn_3 $0 _v _rempty) $0": "(if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (fn_3 $0 _v _rempty))"
                },
                {
                    "fn_9 (fn_7 $0 _rdot _o) $0": "(if (_rmatch _e (_rtail (_rsplit _rdot $0))) $0 (fn_7 $0 _rdot _o))"
                }
            ],
            "dc_comparison_millis": null
        }
    ]
}