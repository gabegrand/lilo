{
    "cmd": "python run_iterative_experiment.py --experiment_name runs_human --experiment_type baseline_dreamcoder --domain re2_human --encoder re2 --iterations 16 --global_batch_sizes 96 --enumeration_timeout 1000 --stitch_params {\"iterations\": 10, \"max_arity\": 3} --random_seeds 111 222 333",
    "args": {
        "iterations": 10,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 3,
            "threads": 1,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": true,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": true,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": true,
            "rewrite_check": false,
            "utility_by_rewrite": true,
            "dreamcoder_comparison": false,
            "quiet": true
        }
    },
    "original_cost": 125703,
    "final_cost": 57681,
    "compression_ratio": 2.1792791387111876,
    "num_abstractions": 10,
    "original": [
        "(lam (_rflatten (_rappend _w (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _w (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _w (_rsplit _c $0)))))))",
        "(lam (_rflatten (_rappend (_rconcat _rempty _w) (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _w (_rsplit _a $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _k $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _k $0) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _k $0) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _r _u) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _r (_rconcat _u _rempty)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _r (_rconcat _rempty _u)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _r _u) _rempty) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _l _n) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons (_rconcat _l _n) (cdr (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _rempty _l) _n) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _l (_rconcat _rempty _n)) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _l (_rsplit _rempty (_rflatten (cons _n (cdr (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _k _rempty)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _k)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (cons _rempty (cons _s (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _rempty _r) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _r _rempty) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _u) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _u (_rsplit _c (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _u) (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _u) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _f _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat (_rconcat _rempty _f) _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _rempty (_rconcat _f _w)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _f (_rconcat _rempty _w)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _c $0)))))))",
        "(lam (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _i $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _c (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _q $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _q $0) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _q $0) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat (_rconcat _rempty _q) $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat (_rconcat _q _rempty) $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _d $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat (_rconcat _rempty _d) $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _c)) (_rconcat _d $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _d _c) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat (_rconcat _rempty _d) _c) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _rempty $0) _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _v (_rrevcdr (_rsplit _rempty (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend (_rconcat _t _m) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _m (_rsplit _c (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend (_rconcat _t _m) (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend (_rconcat _t _m) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend (_rconcat _rempty _m) (_rsplit _c (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _j (_rsplit _g $0))))",
        "(lam (_rflatten (cons _j (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _j (_rsplit _a $0))))",
        "(lam (_rflatten (cons _j (_rsplit _i $0))))",
        "(lam (_rflatten (cons _j (_rsplit _e $0))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _j)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (map (lam _s) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (cons _rempty (cons _s (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _w (map (lam $0) (cons _i (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _w (cons (_rconcat _i _rempty) (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat $0 _x) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat $0 _x) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat $0 _x) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat $0 _x) $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _y (_rconcat _w _rempty)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rsplit _c $0))))))))",
        "(lam (_rflatten (cons (_rconcat _c _v) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons (_rconcat _c _v) (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat _c _v) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _rempty _c) _v) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _c _rempty) _v) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat _q (_rconcat _rempty _a)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _q (_rsplit _g (_rflatten (cons _a (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat _g _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _g (_rconcat _rempty _a)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _g _a) _rempty) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _rempty (_rconcat _g _a)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam _p) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _c $0)))))))",
        "(lam (_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (map (lam _p) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _y) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat $0 _y) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat $0 _y) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat $0 _y) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _c (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat $0 _y) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _i (_rconcat _r _rempty)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _i _rempty) _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _rempty _i) _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _t (_rsplit _c (_rflatten (_rappend _d (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _t (_rsplit _c (_rflatten (_rappend _d (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _t (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _d (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))))))",
        "(lam (_rflatten (_rappend _t (_rsplit _c (_rflatten (_rappend _d (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))))))))",
        "(lam (_rflatten (_rappend _t (_rsplit _c (_rflatten (_rappend _d (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat $0 $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (_rsplit _g $0))))",
        "(lam (_rflatten (cons _f (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _f (_rsplit _g $0)))))))",
        "(lam (_rflatten (cons _f (_rsplit _a $0))))",
        "(lam (_rflatten (cons _f (_rsplit _i $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty (_rconcat _f _n))) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _f _rempty) _n)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) _g $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _p) _g $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) _g $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _g _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _rempty _g) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _p (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend (_rconcat _rempty _p) (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend (_rconcat _p _rempty) (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _p (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _c $0))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b $0) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b _r) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat (_rconcat _rempty _b) $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _r)) (_rconcat _b $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat (_rconcat _c _rempty) _g) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat (_rconcat _rempty _c) _g) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c (_rconcat _rempty _g)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _rempty (_rconcat _c _g)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) (_rconcat _rempty _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _c (_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _v _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat (_rconcat _rempty _v) _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _rempty (_rconcat _v _q)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _v (_rconcat _rempty _q)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _l)) (_rconcat _v _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (_rconcat _rempty _b) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _b _rempty) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _b (_rsplit _g (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _k _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat (_rconcat _k _b) _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat (_rconcat _k _rempty) _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _k (_rconcat _rempty _b)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _rempty (_rconcat _k _b)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _n) _q $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) _q $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 (_rconcat _n _rempty)) _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _q _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _t _u) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _r (_rconcat _m _rempty)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _r (_rsplit _g (_rflatten (cons _m (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _r (_rsplit _rempty (_rflatten (cons _m (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _w _w) (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _x _w) (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _o (_rsplit _c (_rflatten (_rappend _a (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend (_rconcat (_rconcat _a _rempty) _o) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat (_rconcat _a _o) _rempty) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _o (_rsplit _c (_rflatten (_rappend (_rconcat _a _rempty) (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _f (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _f (_rsplit _c $0)))))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rsplit _c $0))))))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _u (_rsplit _c $0))))))))",
        "(lam (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _f (_rsplit _c $0))))))))",
        "(lam (_rflatten (cons (_rconcat (car (_rsplit _rempty $0)) _d) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (car (map (lam $0) (_rsplit _rempty $0))) _d) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (car (map (lam (_rconcat $0 _d)) (_rsplit _rempty $0))) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _b) _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _f (cdr (map (lam $0) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam $0) (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _w) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat _y _c) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons (_rconcat _y _c) (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat _y _c) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _rempty _y) _c) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _y _c) (cdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rsplit _c $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _y _t)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _y _t)) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _c $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _y $0)) (_rsplit _rempty (_rflatten (map (lam _t) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _t)) (_rsplit _rempty (_rflatten (map (lam _y) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _y _t)) (_rsplit _rempty (_rflatten (map (lam _y) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty (_rflatten (map (lam _i) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty (_rflatten (map (lam _t) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty (_rflatten (_rsplit _e $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) _l $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) (_rconcat _l _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) (_rconcat _rempty _l) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) (_rconcat (_rconcat _rempty _rempty) _l) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _m) (_rconcat _rempty (_rconcat _rempty _l)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _y (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _y (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (_rflatten (_rappend _e (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (_rflatten (cons _a (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons _y (_rsplit _g $0))))",
        "(lam (_rflatten (cons _y (_rsplit _g (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _y (_rsplit _g $0)))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _y) (_rsplit _g $0))))",
        "(lam (_rflatten (cons (_rconcat _y _rempty) (_rsplit _g $0))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _rempty (_rconcat _k _e)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _k _rempty) _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _rempty _h) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _h _rempty) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _h (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _h (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _rempty _x) _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _x _rempty) _e) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _m _l) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _m _l) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _m _l) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat (_rconcat _e _d) _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat (_rconcat _e _rempty) _d) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat (_rconcat _c _rempty) _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat (_rconcat _rempty _c) _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c (_rconcat _e _rempty)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat $0 _e) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _m _rempty) _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _s _i) (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _n _i) (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _rempty _j) _o) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _j (_rsplit _g (_rflatten (cons _o (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _q) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _q) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat (_rconcat _rempty _t) _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) _q $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t $0) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _g _rempty) _i)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _g _i) _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) _g $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _n) _g $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) _g $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 (_rconcat _n _rempty)) _g $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _rempty _g) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _m (_rsplit _c (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend (_rconcat _o (_rconcat _m _rempty)) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _m (_rsplit _c (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _k _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty (_rflatten (map (lam _h) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty (_rflatten (_rsplit _rdot $0))))))",
        "(lam (_rflatten (_rsplit _rdot (_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _h) _y $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _h) (_rconcat _rempty _y) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _h) (_rconcat _y _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _r (_rconcat _r _rempty)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _r _rempty) _r) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (_rconcat _g _b) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons (_rconcat _g _b) (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat _g (_rconcat _rempty _b)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons (_rconcat _g _b) (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _i $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _i $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _i _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _rempty _i) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _rempty (_rconcat _i _rempty)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (_rconcat _rempty _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _i _rempty) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _i (_rconcat _rempty _rempty)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _rempty _rempty) _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _g (_rsplit _c (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _g (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _a) (_rconcat _u _c) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _a) (_rconcat _rempty (_rconcat _u _c)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _a) (_rconcat _u (_rconcat _c _rempty)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _a) (_rconcat _u (_rconcat _rempty _c)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _a)) (_rconcat _u _c) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (_rconcat _e _a) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _a) (cdr (_rsplit _rdot (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons (_rconcat _e _a) (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons (_rconcat _e _a) (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _q (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _c (_rflatten (_rappend _q (_rsplit _c $0)))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _c (_rflatten (_rappend _rempty (_rsplit _c $0)))))))",
        "(lam (_rflatten (_rappend _q (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _q (_rsplit _c $0))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _w $0) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (_rconcat _i _s) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _i _s) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _i _s) (cdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rsplit _c $0))))))))",
        "(lam (_rflatten (cons (_rconcat _i _s) (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _i _s) (cdr (_rsplit _rdot (_rflatten (_rsplit _e $0)))))))",
        "(lam (_rflatten (cons (_rconcat _g _l) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons (_rconcat _g _l) (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat _g _l) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _g _rempty) _l) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _rempty _m) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _m _rempty) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _m $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _i) _m $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _m $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) (_rconcat _m _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _rempty _j) _u)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _j (_rconcat _rempty _u))) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _j _u) _rempty)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _a _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _a _w) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat (_rconcat _rempty _a) _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _rempty (_rconcat _a _w)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _a _w) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _u _f) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat (_rconcat _u _rempty) _f) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _u (_rconcat _rempty _f)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat (_rconcat _rempty _u) _f) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _rempty (_rconcat _u _f)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _a (cons _w (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _i _w) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend (_rconcat _r _j) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _j (_rsplit _c (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _j (_rsplit _c (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _j (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _j (_rsplit _c (_rflatten (cons _rempty (_rsplit _g (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _p (_rrevcdr (_rsplit _rempty (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat (_rconcat _rempty _n) _g)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _n $0)) (_rsplit _rempty (_rflatten (map (lam _g) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat (car (_rsplit _rempty $0)) _o) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (car (_rsplit _rdot $0)) _o) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons (_rconcat (car (_rsplit _rempty $0)) _o) (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat (car (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))) _o) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (car (_rsplit _rempty $0)) (_rconcat _rempty _o)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _x _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _rempty _x) _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _x _rempty) _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _x (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _n _i) (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _q (_rconcat _i _rempty)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _q (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _q (_rconcat _i _rempty)) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _rempty _i) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _i _rempty) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _k $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rsplit _c $0))))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot (_rflatten (_rsplit _i $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) _h $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) _h $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) _h $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _rempty _h) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _h _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _r _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _r (_rconcat _q _rempty)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _r (_rconcat _rempty _q)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _rempty (_rconcat _r _q)) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat $0 _q) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) _b $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) _b $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _b _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _rempty _b) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot (_rflatten (cons _i (cdr (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _e _rempty) (cdr (cdr (_rsplit _rdot $0))))))))))",
        "(lam (_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) (_rconcat _rempty _v) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _i) (_rconcat _v _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _c $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons (_rconcat _f _s) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _f (_rsplit _g (_rflatten (cons _s (cdr (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _rempty (_rconcat _f _s)) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _f (_rconcat _rempty _s)) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _f (_rsplit _g (_rflatten (cons (_rconcat _rempty _s) (cdr (cdr (_rsplit _rdot $0)))))))))",
        "(lam (_rflatten (cons _q (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _q (cdr (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons (_rconcat _q _rempty) (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _q (cdr (cdr (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _q (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend (_rconcat _r _q) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend (_rconcat _r _q) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend (_rconcat _r _q) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend (_rconcat _r _q) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))))",
        "(lam (_rflatten (_rappend _q (_rsplit _c (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))))))))",
        "(lam (_rflatten (_rappend (_rconcat _b _j) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend (_rconcat (_rconcat _rempty _b) _j) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _b _j) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))))",
        "(lam (_rflatten (_rappend (_rconcat _b _j) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty $0)))))))))))))",
        "(lam (_rflatten (_rappend (_rconcat _b _j) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _b (_rrevcdr (_rsplit _rempty (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (map (lam _r) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (_rflatten (map (lam _y) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (_rappend _k (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _k (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _k (_rsplit _c $0)))))))",
        "(lam (_rflatten (_rappend _k (_rsplit _c (_rflatten (_rsplit _rempty $0))))))",
        "(lam (_rflatten (_rappend _k (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _k (_rsplit _c $0))))))))",
        "(lam (_rflatten (_rappend (_rconcat _x _s) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _s (_rsplit _c (_rflatten (_rappend _x (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _s (_rsplit _c (_rflatten (_rappend _x (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (_rappend _s (_rsplit _c (_rflatten (_rappend _x (_rrevcdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))))",
        "(lam (_rflatten (_rappend _a (_rsplit _c $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _a (_rsplit _c $0)))))))",
        "(lam (_rflatten (_rappend (_rconcat _a _rempty) (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend (_rconcat _rempty _a) (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _a (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _a (_rsplit _c $0))))))))",
        "(lam (_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _a _rempty) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _a (cdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _u (_rsplit _c $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _u (_rsplit _c $0)))))))",
        "(lam (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _i $0))))",
        "(lam (_rflatten (_rappend (_rconcat _x _p) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _p (_rsplit _c (_rflatten (_rappend _x (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _p (_rsplit _c (_rflatten (_rappend (_rconcat _x _rempty) (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend _p (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _x _s) (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (_rappend _p (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _x _y) (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (cons _v (_rsplit _g $0))))",
        "(lam (_rflatten (cons _v (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _v (_rsplit _a $0))))",
        "(lam (_rflatten (cons _v (_rsplit _i $0))))",
        "(lam (_rflatten (cons _v (_rsplit _r $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _o $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) _o $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) _o $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _o _rempty) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _rempty _o) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _b (_rsplit _g $0))))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _b (_rsplit _g $0)))))))",
        "(lam (_rflatten (cons _b (_rsplit _a $0))))",
        "(lam (_rflatten (cons (_rconcat _rempty _b) (_rsplit _g $0))))",
        "(lam (_rflatten (cons _a (_rsplit _g $0))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot (_rflatten (cons _a (_rsplit _g $0))))))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot (_rflatten (cons _t (_rsplit _g $0))))))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot (_rflatten (cons _c (_rsplit _g $0))))))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot (_rflatten (cons _f (_rsplit _g $0))))))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _c $0)))))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rempty (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rempty (_rflatten (map (lam _l) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam _l) (_rsplit _rempty (_rflatten (cons _m (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend (_rconcat _o _j) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _o _j) (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend (_rconcat _o (_rconcat _j _rempty)) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat (_rconcat _o _rempty) _j) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend (_rconcat _o _j) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty $0)))))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _r _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _r _a) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _r _a) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _s)) (_rconcat _r _a) $0)) (_rsplit _rempty $0))))",
        "(lam (_rflatten (_rappend _rempty (_rsplit _c (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _r _a) $0)) (_rsplit _rempty $0)))))))",
        "(lam (_rflatten (cons (_rconcat _s _b) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat _rempty (_rconcat _s _b)) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons (_rconcat (_rconcat _s _b) _rempty) (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _s (_rsplit _g (_rflatten (cons _b (cdr (_rsplit _rdot $0))))))))",
        "(lam (_rflatten (_rappend (_rconcat _c _v) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _v (_rsplit _c (_rflatten (_rappend _c (_rrevcdr (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rappend (_rconcat (_rconcat _rempty _c) _v) (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (_rappend _v (_rsplit _c (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _c (_rrevcdr (_rsplit _rempty $0)))))))))))",
        "(lam (_rflatten (_rappend _v (_rsplit _c (_rflatten (_rappend _c (_rsplit _c (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))"
    ],
    "rewritten": [
        "(lam (fn_5 $0 _w))",
        "(lam (fn_5 (fn_3 $0 (lam $0)) _w))",
        "(lam (fn_3 (fn_5 $0 _w) (lam $0)))",
        "(lam (fn_5 $0 (_rconcat _rempty _w)))",
        "(lam (_rflatten (_rappend _w (_rsplit _a $0))))",
        "(lam (fn_6 _k _b $0))",
        "(lam (fn_3 (fn_6 _k _b $0) (lam $0)))",
        "(lam (fn_6 _k _b (fn_3 $0 (lam $0))))",
        "(lam (fn_1 $0 _u _r))",
        "(lam (fn_1 $0 (_rconcat _u _rempty) _r))",
        "(lam (fn_1 $0 (_rconcat _rempty _u) _r))",
        "(lam (fn_1 $0 _rempty (_rconcat _r _u)))",
        "(lam (fn_4 $0 _n _l))",
        "(lam (fn_3 (fn_4 $0 _n _l) (lam $0)))",
        "(lam (fn_4 $0 _n (_rconcat _rempty _l)))",
        "(lam (fn_4 $0 (_rconcat _rempty _n) _l))",
        "(lam (_rflatten (cons _l (_rsplit _rempty (_rflatten (cons _n (cdr (cdr (_rsplit _rdot $0)))))))))",
        "(lam (fn_1 $0 _a _n))",
        "(lam (fn_3 (fn_1 $0 _a _n) (lam $0)))",
        "(lam (fn_1 (fn_3 $0 (lam $0)) _a _n))",
        "(lam (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_1 (_rflatten (cons _a (cdr (_rsplit _rempty $0)))) _a _n))",
        "(lam (fn_3 $0 (lam _k)))",
        "(lam (fn_3 (fn_3 $0 (lam _k)) (lam _k)))",
        "(lam (_rflatten (map (lam (_rconcat _k _rempty)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _rempty _k)) (_rsplit _rdot $0))))",
        "(lam (fn_3 (_rflatten (cons _rempty (cons _s (cdr (_rsplit _rempty $0))))) (lam _k)))",
        "(lam (fn_2 $0 _r))",
        "(lam (fn_9 _r _rempty $0))",
        "(lam (fn_9 _rempty _r $0))",
        "(lam (fn_2 (fn_3 $0 (lam $0)) _r))",
        "(lam (fn_3 (fn_2 $0 _r) (lam $0)))",
        "(lam (fn_9 _u _o (fn_2 $0 _rempty)))",
        "(lam (fn_5 (fn_2 (fn_2 $0 _rempty) _o) _u))",
        "(lam (fn_9 _u _o (_rflatten (_rrevcdr (_rsplit _rempty $0)))))",
        "(lam (fn_9 _u _o (fn_9 _rempty _rempty $0)))",
        "(lam (fn_0 $0 (_rconcat _f _w) _p))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _rempty _f) _w) _p))",
        "(lam (fn_0 $0 (_rconcat _rempty (_rconcat _f _w)) _p))",
        "(lam (fn_0 $0 (_rconcat _f (_rconcat _rempty _w)) _p))",
        "(lam (fn_5 $0 _d))",
        "(lam (fn_5 (fn_3 $0 (lam $0)) _d))",
        "(lam (fn_3 (fn_5 $0 _d) (lam $0)))",
        "(lam (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _d (_rsplit _i $0))))",
        "(lam (fn_8 _j _q $0))",
        "(lam (fn_8 _j _q (fn_3 $0 (lam $0))))",
        "(lam (fn_3 (fn_8 _j _q $0) (lam $0)))",
        "(lam (fn_5 (fn_8 _j _q $0) _rempty))",
        "(lam (fn_3 (fn_3 $0 (lam _j)) (lam (_rconcat _q $0))))",
        "(lam (fn_6 _q _g $0))",
        "(lam (fn_3 (fn_6 _q _g $0) (lam $0)))",
        "(lam (fn_6 _q _g (fn_3 $0 (lam $0))))",
        "(lam (fn_6 (_rconcat _rempty _q) _g $0))",
        "(lam (fn_6 (_rconcat _q _rempty) _g $0))",
        "(lam (fn_6 _d _c $0))",
        "(lam (fn_6 (_rconcat _rempty _d) _c $0))",
        "(lam (fn_6 _d (_rconcat _rempty _c) $0))",
        "(lam (fn_0 $0 (_rconcat _d _c) _c))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _rempty _d) _c) _c))",
        "(lam (fn_3 $0 (lam (_rconcat $0 _v))))",
        "(lam (fn_3 (fn_3 $0 (lam $0)) (lam (_rconcat $0 _v))))",
        "(lam (fn_3 (fn_3 $0 (lam (_rconcat $0 _v))) (lam $0)))",
        "(lam (fn_3 $0 (lam (_rconcat (_rconcat _rempty $0) _v))))",
        "(lam (fn_2 (fn_3 $0 (lam (_rconcat $0 _v))) _v))",
        "(lam (fn_2 $0 _f))",
        "(lam (fn_2 (fn_3 $0 (lam $0)) _f))",
        "(lam (fn_2 (_rflatten (_rsplit _rempty $0)) _f))",
        "(lam (fn_2 (fn_2 $0 _i) _f))",
        "(lam (fn_2 (fn_2 $0 _f) _f))",
        "(lam (fn_9 _m _t $0))",
        "(lam (fn_5 (fn_2 $0 _t) _m))",
        "(lam (fn_3 (fn_9 _m _t $0) (lam $0)))",
        "(lam (fn_9 _m _t (fn_2 $0 _t)))",
        "(lam (fn_5 (fn_2 $0 _t) (_rconcat _rempty _m)))",
        "(lam (fn_1 $0 _e _e))",
        "(lam (fn_1 (fn_3 $0 (lam $0)) _e _e))",
        "(lam (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_7 $0 _j))",
        "(lam (_rflatten (cons _j (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _j (_rsplit _a $0))))",
        "(lam (_rflatten (cons _j (_rsplit _i $0))))",
        "(lam (_rflatten (cons _j (_rsplit _e $0))))",
        "(lam (fn_3 $0 (lam _j)))",
        "(lam (fn_8 _j _rempty $0))",
        "(lam (fn_2 (fn_3 $0 (lam _j)) _j))",
        "(lam (fn_3 (fn_3 $0 (lam _j)) (lam _j)))",
        "(lam (_rflatten (map (lam _j) (_rsplit _rdot $0))))",
        "(lam (fn_8 _s _h $0))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0))))",
        "(lam (fn_3 (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0))) (lam $0)))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (fn_3 $0 (lam _s))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot (_rflatten (cons _rempty (cons _s (cdr (_rsplit _rempty $0)))))))))",
        "(lam (fn_1 $0 _i _w))",
        "(lam (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _w (map (lam $0) (cons _i (cdr (_rsplit _rdot $0)))))))",
        "(lam (_rflatten (cons _w (cons (_rconcat _i _rempty) (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_0 $0 (_rconcat _t _x) _t))",
        "(lam (fn_3 $0 (lam (if (_rmatch $0 _t) (_rconcat $0 _x) $0))))",
        "(lam (fn_3 (fn_3 $0 (lam $0)) (lam (if (_rmatch $0 _t) (_rconcat $0 _x) $0))))",
        "(lam (fn_3 (fn_3 $0 (lam (if (_rmatch $0 _t) (_rconcat $0 _x) $0))) (lam $0)))",
        "(lam (_rflatten (_rsplit _rempty (fn_3 $0 (lam (if (_rmatch $0 _t) (_rconcat $0 _x) $0))))))",
        "(lam (fn_1 $0 _w _y))",
        "(lam (fn_3 (fn_1 $0 _w _y) (lam $0)))",
        "(lam (fn_1 (fn_3 $0 (lam $0)) _w _y))",
        "(lam (fn_1 $0 (_rconcat _w _rempty) _y))",
        "(lam (fn_1 (fn_5 $0 _rempty) _w _y))",
        "(lam (fn_1 $0 _v _c))",
        "(lam (fn_3 (fn_1 $0 _v _c) (lam $0)))",
        "(lam (fn_1 (fn_3 $0 (lam $0)) _v _c))",
        "(lam (fn_1 $0 _v (_rconcat _rempty _c)))",
        "(lam (fn_1 $0 _v (_rconcat _c _rempty)))",
        "(lam (fn_1 $0 _a _q))",
        "(lam (fn_3 (fn_1 $0 _a _q) (lam $0)))",
        "(lam (fn_1 $0 (_rconcat _rempty _a) _q))",
        "(lam (fn_7 (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _q))",
        "(lam (fn_1 $0 _a _g))",
        "(lam (fn_1 $0 (_rconcat _rempty _a) _g))",
        "(lam (fn_1 $0 _rempty (_rconcat _g _a)))",
        "(lam (fn_1 $0 (_rconcat _g _a) _rempty))",
        "(lam (fn_3 $0 (lam _p)))",
        "(lam (fn_3 (fn_3 $0 (lam $0)) (lam _p)))",
        "(lam (fn_3 (fn_3 $0 (lam _p)) (lam $0)))",
        "(lam (fn_3 (fn_5 $0 _rempty) (lam _p)))",
        "(lam (fn_3 (fn_3 $0 (lam _p)) (lam _p)))",
        "(lam (fn_0 $0 (_rconcat _t _y) _t))",
        "(lam (fn_3 $0 (lam (if (_rmatch $0 _t) (_rconcat $0 _y) $0))))",
        "(lam (fn_3 (fn_3 $0 (lam $0)) (lam (if (_rmatch $0 _t) (_rconcat $0 _y) $0))))",
        "(lam (fn_3 (fn_3 $0 (lam (if (_rmatch $0 _t) (_rconcat $0 _y) $0))) (lam $0)))",
        "(lam (fn_5 (fn_3 $0 (lam (if (_rmatch $0 _t) (_rconcat $0 _y) $0))) _rempty))",
        "(lam (fn_1 $0 _r _i))",
        "(lam (fn_1 (fn_3 $0 (lam $0)) _r _i))",
        "(lam (fn_1 $0 (_rconcat _r _rempty) _i))",
        "(lam (fn_1 $0 _r (_rconcat _i _rempty)))",
        "(lam (fn_1 $0 _r (_rconcat _rempty _i)))",
        "(lam (fn_8 _v _r $0))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rdot (fn_2 $0 _r)))))",
        "(lam (fn_5 (fn_2 (fn_2 $0 _rempty) _d) _t))",
        "(lam (fn_5 (fn_2 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _d) _t))",
        "(lam (fn_5 (fn_3 (fn_2 (fn_2 $0 _rempty) _d) (lam $0)) _t))",
        "(lam (fn_5 (fn_2 (fn_2 (fn_2 $0 _rempty) _t) _d) _t))",
        "(lam (fn_5 (fn_2 (fn_2 (fn_2 $0 _t) _rempty) _d) _t))",
        "(lam (fn_3 $0 (lam (if (_rmatch $0 _p) (_rconcat $0 $0) $0))))",
        "(lam (fn_7 $0 _f))",
        "(lam (_rflatten (cons _f (_rsplit _rempty $0))))",
        "(lam (fn_3 (fn_7 $0 _f) (lam $0)))",
        "(lam (_rflatten (cons _f (_rsplit _a $0))))",
        "(lam (_rflatten (cons _f (_rsplit _i $0))))",
        "(lam (fn_8 _n _f $0))",
        "(lam (fn_8 (_rconcat _f _n) _rempty $0))",
        "(lam (fn_8 _n (_rconcat _f _rempty) $0))",
        "(lam (fn_8 _n _f (fn_2 $0 _i)))",
        "(lam (fn_8 _n _f (_rflatten (cons _b (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_0 $0 _g _p))",
        "(lam (fn_3 (fn_0 $0 _g _p) (lam $0)))",
        "(lam (fn_0 (fn_3 $0 (lam $0)) _g _p))",
        "(lam (fn_0 $0 (_rconcat _g _rempty) _p))",
        "(lam (fn_0 $0 (_rconcat _rempty _g) _p))",
        "(lam (fn_5 $0 _p))",
        "(lam (fn_5 (fn_3 $0 (lam $0)) _p))",
        "(lam (fn_5 $0 (_rconcat _rempty _p)))",
        "(lam (fn_5 $0 (_rconcat _p _rempty)))",
        "(lam (fn_2 (fn_5 $0 _d) _p))",
        "(lam (fn_6 _b _r $0))",
        "(lam (fn_6 _b _r (fn_3 $0 (lam $0))))",
        "(lam (fn_0 $0 (_rconcat _b _r) _r))",
        "(lam (fn_6 (_rconcat _rempty _b) _r $0))",
        "(lam (fn_6 _b (_rconcat _rempty _r) $0))",
        "(lam (fn_0 $0 (_rconcat _c _g) _o))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _c _rempty) _g) _o))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _rempty _c) _g) _o))",
        "(lam (fn_0 $0 (_rconcat _c (_rconcat _rempty _g)) _o))",
        "(lam (fn_0 $0 (_rconcat _rempty (_rconcat _c _g)) _o))",
        "(lam (fn_0 $0 _rempty _m))",
        "(lam (fn_3 (fn_0 $0 _rempty _m) (lam $0)))",
        "(lam (fn_0 (fn_3 $0 (lam $0)) _rempty _m))",
        "(lam (fn_0 $0 (_rconcat _rempty _rempty) _m))",
        "(lam (fn_5 (fn_0 $0 _rempty _m) _rempty))",
        "(lam (fn_0 $0 (_rconcat _v _q) _l))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _rempty _v) _q) _l))",
        "(lam (fn_0 $0 (_rconcat _rempty (_rconcat _v _q)) _l))",
        "(lam (fn_0 $0 (_rconcat _v (_rconcat _rempty _q)) _l))",
        "(lam (fn_0 $0 (_rconcat _v _q) (_rconcat _rempty _l)))",
        "(lam (fn_1 $0 _b _rempty))",
        "(lam (fn_1 $0 _rempty _b))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_7 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _b))",
        "(lam (fn_0 $0 (_rconcat _k _b) _c))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _k _b) _rempty) _c))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _k _rempty) _b) _c))",
        "(lam (fn_0 $0 (_rconcat _k (_rconcat _rempty _b)) _c))",
        "(lam (fn_0 $0 (_rconcat _rempty (_rconcat _k _b)) _c))",
        "(lam (fn_0 $0 _q _n))",
        "(lam (fn_3 (fn_0 $0 _q _n) (lam $0)))",
        "(lam (fn_0 (fn_3 $0 (lam $0)) _q _n))",
        "(lam (fn_0 $0 _q (_rconcat _n _rempty)))",
        "(lam (fn_0 $0 (_rconcat _q _rempty) _n))",
        "(lam (fn_0 $0 (_rconcat _t _u) _e))",
        "(lam (fn_1 $0 _m _r))",
        "(lam (fn_1 $0 (_rconcat _m _rempty) _r))",
        "(lam (fn_7 (_rflatten (cons _m (cdr (_rsplit _rdot $0)))) _r))",
        "(lam (_rflatten (cons _r (_rsplit _rempty (_rflatten (cons _m (cdr (_rsplit _rdot $0))))))))",
        "(lam (fn_1 $0 _w _b))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot (fn_1 $0 _w _a))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot (fn_1 $0 _w _w))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot (fn_1 $0 _w _y))))))",
        "(lam (_rflatten (cons _b (cdr (_rsplit _rdot (fn_1 $0 _w _x))))))",
        "(lam (fn_9 _o _a $0))",
        "(lam (fn_5 (fn_2 $0 _a) _o))",
        "(lam (fn_9 _o (_rconcat _a _rempty) $0))",
        "(lam (fn_9 _rempty (_rconcat _a _o) $0))",
        "(lam (fn_5 (fn_9 _rempty _a $0) _o))",
        "(lam (fn_5 $0 _f))",
        "(lam (fn_3 (fn_5 $0 _f) (lam $0)))",
        "(lam (fn_2 (fn_5 $0 _i) _f))",
        "(lam (fn_2 (fn_5 $0 _u) _f))",
        "(lam (fn_2 (fn_5 $0 _f) _f))",
        "(lam (fn_1 $0 _d (car (_rsplit _rempty $0))))",
        "(lam (fn_1 $0 _d (car (map (lam $0) (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons (car (map (lam (_rconcat $0 _d)) (_rsplit _rempty $0))) (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_0 $0 _q _b))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _f (cdr (map (lam $0) (_rsplit _rempty $0))))))",
        "(lam (_rflatten (map (lam $0) (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lam (_rflatten (cons _f (cdr (_rsplit _rempty (fn_3 $0 (lam $0)))))))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_3 (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))) (lam $0)))",
        "(lam (fn_4 $0 _w _rempty))",
        "(lam (_rflatten (cons _w (cdr (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))))",
        "(lam (_rflatten (_rsplit _rempty (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lam (fn_1 $0 _c _y))",
        "(lam (fn_3 (fn_1 $0 _c _y) (lam $0)))",
        "(lam (fn_1 (fn_3 $0 (lam $0)) _c _y))",
        "(lam (fn_1 $0 _c (_rconcat _rempty _y)))",
        "(lam (fn_1 (fn_5 $0 _rempty) _c _y))",
        "(lam (fn_8 _t _y $0))",
        "(lam (fn_8 _t _y (fn_5 $0 _rempty)))",
        "(lam (fn_3 (fn_3 $0 (lam _t)) (lam (_rconcat _y $0))))",
        "(lam (fn_3 (fn_3 $0 (lam _y)) (lam (_rconcat $0 _t))))",
        "(lam (fn_8 _t _y (fn_3 $0 (lam _y))))",
        "(lam (fn_8 _i _n $0))",
        "(lam (fn_8 _i _n (fn_3 $0 (lam $0))))",
        "(lam (fn_2 (fn_8 _i _n $0) _i))",
        "(lam (fn_8 _i _n (fn_2 $0 _i)))",
        "(lam (fn_8 _i _n (fn_3 $0 (lam _i))))",
        "(lam (fn_8 _t _w $0))",
        "(lam (fn_2 (fn_8 _t _w $0) _t))",
        "(lam (fn_8 _t _w (fn_2 $0 _t)))",
        "(lam (fn_8 _t _w (fn_3 $0 (lam _t))))",
        "(lam (fn_8 _t _w (_rflatten (_rsplit _e $0))))",
        "(lam (fn_0 $0 _l _m))",
        "(lam (fn_0 $0 (_rconcat _l _rempty) _m))",
        "(lam (fn_0 $0 (_rconcat _rempty _l) _m))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _rempty _rempty) _l) _m))",
        "(lam (fn_0 $0 (_rconcat _rempty (_rconcat _rempty _l)) _m))",
        "(lam (fn_9 _y _i $0))",
        "(lam (fn_9 _y _i (_rflatten (_rsplit _rempty $0))))",
        "(lam (fn_2 (fn_9 _y _i $0) _y))",
        "(lam (fn_9 _y _i (fn_2 $0 _y)))",
        "(lam (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))",
        "(lam (fn_8 _e _u $0))",
        "(lam (fn_8 _e _u (fn_2 $0 _e)))",
        "(lam (fn_8 _e _u (_rflatten (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_8 _e _u (_rflatten (cons _b (cdr (_rsplit _rdot $0))))))",
        "(lam (fn_7 $0 _y))",
        "(lam (fn_7 (fn_3 $0 (lam $0)) _y))",
        "(lam (fn_3 (fn_7 $0 _y) (lam $0)))",
        "(lam (fn_7 $0 (_rconcat _rempty _y)))",
        "(lam (fn_7 $0 (_rconcat _y _rempty)))",
        "(lam (fn_1 $0 _e _k))",
        "(lam (fn_1 (fn_3 $0 (lam $0)) _e _k))",
        "(lam (fn_1 $0 (_rconcat _k _e) _rempty))",
        "(lam (fn_1 $0 _e (_rconcat _k _rempty)))",
        "(lam (fn_1 $0 _h _rempty))",
        "(lam (fn_1 $0 _rempty _h))",
        "(lam (_rflatten (cons _h (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _h (cdr (_rsplit _rdot (fn_3 $0 (lam $0)))))))",
        "(lam (fn_1 $0 _e _x))",
        "(lam (fn_1 $0 _e (_rconcat _rempty _x)))",
        "(lam (fn_1 $0 _e (_rconcat _x _rempty)))",
        "(lam (fn_1 (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _e _x))",
        "(lam (fn_0 $0 (_rconcat _m _l) _r))",
        "(lam (fn_3 (fn_0 $0 (_rconcat _m _l) _r) (lam $0)))",
        "(lam (fn_0 (fn_3 $0 (lam $0)) (_rconcat _m _l) _r))",
        "(lam (fn_0 $0 (_rconcat _e _d) _r))",
        "(lam (fn_3 (fn_0 $0 (_rconcat _e _d) _r) (lam $0)))",
        "(lam (fn_0 (fn_3 $0 (lam $0)) (_rconcat _e _d) _r))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _e _d) _rempty) _r))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _e _rempty) _d) _r))",
        "(lam (fn_0 $0 (_rconcat _c _e) _c))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _c _rempty) _e) _c))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _rempty _c) _e) _c))",
        "(lam (fn_0 $0 (_rconcat _c (_rconcat _e _rempty)) _c))",
        "(lam (fn_3 $0 (lam (if (_rmatch $0 _c) (_rconcat $0 _e) $0))))",
        "(lam (fn_1 $0 _i _m))",
        "(lam (fn_1 $0 _i (_rconcat _m _rempty)))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rdot (fn_1 $0 _i _s))))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rdot (fn_1 $0 _i _n))))))",
        "(lam (fn_3 $0 (lam (_rconcat _q $0))))",
        "(lam (fn_3 (fn_3 $0 (lam $0)) (lam (_rconcat _q $0))))",
        "(lam (fn_3 (fn_3 $0 (lam (_rconcat _q $0))) (lam $0)))",
        "(lam (fn_3 (_rflatten (_rsplit _rempty $0)) (lam (_rconcat _q $0))))",
        "(lam (_rflatten (_rsplit _rempty (fn_3 $0 (lam (_rconcat _q $0))))))",
        "(lam (fn_1 $0 _o _j))",
        "(lam (fn_3 (fn_1 $0 _o _j) (lam $0)))",
        "(lam (fn_1 $0 _o (_rconcat _rempty _j)))",
        "(lam (fn_7 (_rflatten (cons _o (cdr (_rsplit _rdot $0)))) _j))",
        "(lam (fn_0 $0 (_rconcat _t _q) _s))",
        "(lam (fn_3 (fn_0 $0 (_rconcat _t _q) _s) (lam $0)))",
        "(lam (fn_0 (fn_3 $0 (lam $0)) (_rconcat _t _q) _s))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _rempty _t) _q) _s))",
        "(lam (fn_0 (fn_6 _t _s $0) _q _s))",
        "(lam (fn_8 _i _g $0))",
        "(lam (fn_8 _i _g (fn_3 $0 (lam $0))))",
        "(lam (fn_8 _i (_rconcat _g _rempty) $0))",
        "(lam (fn_8 _rempty (_rconcat _g _i) $0))",
        "(lam (fn_8 _i _g (fn_2 $0 _i)))",
        "(lam (fn_0 $0 _g _n))",
        "(lam (fn_3 (fn_0 $0 _g _n) (lam $0)))",
        "(lam (fn_0 (fn_3 $0 (lam $0)) _g _n))",
        "(lam (fn_0 $0 _g (_rconcat _n _rempty)))",
        "(lam (fn_0 $0 (_rconcat _rempty _g) _n))",
        "(lam (fn_9 _m _o $0))",
        "(lam (fn_5 (fn_2 $0 _o) _m))",
        "(lam (fn_3 (fn_9 _m _o $0) (lam $0)))",
        "(lam (fn_9 (_rconcat _m _rempty) _o $0))",
        "(lam (fn_3 (fn_5 (fn_2 $0 _o) _m) (lam $0)))",
        "(lam (fn_0 $0 (_rconcat _k _a) _g))",
        "(lam (fn_8 _x _h $0))",
        "(lam (fn_8 _x _h $0))",
        "(lam (fn_8 _x _h (fn_3 $0 (lam _h))))",
        "(lam (fn_8 _x _h (_rflatten (_rsplit _rdot $0))))",
        "(lam (_rflatten (_rsplit _rdot (fn_8 _x _h $0))))",
        "(lam (fn_0 $0 _y _h))",
        "(lam (fn_0 $0 (_rconcat _rempty _y) _h))",
        "(lam (fn_0 $0 (_rconcat _y _rempty) _h))",
        "(lam (fn_1 $0 _r _r))",
        "(lam (fn_1 $0 (_rconcat _r _rempty) _r))",
        "(lam (fn_1 $0 _r (_rconcat _r _rempty)))",
        "(lam (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_1 $0 _b _g))",
        "(lam (fn_3 (fn_1 $0 _b _g) (lam $0)))",
        "(lam (fn_1 $0 (_rconcat _rempty _b) _g))",
        "(lam (_rflatten (_rsplit _rempty (fn_1 $0 _b _g))))",
        "(lam (fn_0 $0 _i _t))",
        "(lam (fn_0 (fn_3 $0 (lam $0)) _i _t))",
        "(lam (fn_0 $0 (_rconcat _i _rempty) _t))",
        "(lam (fn_0 $0 (_rconcat _rempty _i) _t))",
        "(lam (fn_0 $0 (_rconcat _rempty (_rconcat _i _rempty)) _t))",
        "(lam (fn_1 $0 _i _rempty))",
        "(lam (fn_1 $0 _rempty _i))",
        "(lam (fn_1 $0 (_rconcat _rempty _rempty) _i))",
        "(lam (fn_1 $0 _i (_rconcat _rempty _rempty)))",
        "(lam (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_9 _g _o $0))",
        "(lam (fn_5 (fn_2 $0 _o) _g))",
        "(lam (fn_3 (fn_9 _g _o $0) (lam $0)))",
        "(lam (fn_9 _g _o (fn_3 $0 (lam $0))))",
        "(lam (fn_5 (fn_3 (fn_2 $0 _o) (lam $0)) _g))",
        "(lam (fn_0 $0 (_rconcat _u _c) _a))",
        "(lam (fn_0 $0 (_rconcat _rempty (_rconcat _u _c)) _a))",
        "(lam (fn_0 $0 (_rconcat _u (_rconcat _c _rempty)) _a))",
        "(lam (fn_0 $0 (_rconcat _u (_rconcat _rempty _c)) _a))",
        "(lam (fn_0 $0 (_rconcat _u _c) (_rconcat _rempty _a)))",
        "(lam (fn_4 $0 _a _e))",
        "(lam (fn_1 (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))) _a _e))",
        "(lam (fn_1 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _a _e))",
        "(lam (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lam (fn_1 (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))) _a _e))",
        "(lam (fn_5 $0 _q))",
        "(lam (fn_5 (fn_3 $0 (lam $0)) _q))",
        "(lam (fn_5 (fn_5 $0 _q) _rempty))",
        "(lam (fn_5 (fn_5 $0 _rempty) _q))",
        "(lam (fn_2 (fn_5 $0 _q) _q))",
        "(lam (fn_6 _w _g $0))",
        "(lam (fn_1 $0 _s _i))",
        "(lam (fn_1 (fn_3 $0 (lam $0)) _s _i))",
        "(lam (fn_1 (fn_5 $0 _rempty) _s _i))",
        "(lam (fn_1 (_rflatten (_rsplit _rempty $0)) _s _i))",
        "(lam (fn_1 (_rflatten (_rsplit _e $0)) _s _i))",
        "(lam (fn_1 $0 _l _g))",
        "(lam (fn_3 (fn_1 $0 _l _g) (lam $0)))",
        "(lam (fn_1 (fn_3 $0 (lam $0)) _l _g))",
        "(lam (fn_1 $0 _l (_rconcat _g _rempty)))",
        "(lam (fn_1 $0 _m _rempty))",
        "(lam (fn_1 $0 _rempty _m))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rdot $0)))))",
        "(lam (_rflatten (cons _m (cdr (_rsplit _rempty (fn_3 $0 (lam $0)))))))",
        "(lam (fn_0 $0 _m _i))",
        "(lam (fn_3 (fn_0 $0 _m _i) (lam $0)))",
        "(lam (fn_0 (fn_3 $0 (lam $0)) _m _i))",
        "(lam (fn_0 $0 (_rconcat _m _rempty) _i))",
        "(lam (fn_8 _u _j $0))",
        "(lam (fn_8 _u (_rconcat _rempty _j) $0))",
        "(lam (fn_8 (_rconcat _rempty _u) _j $0))",
        "(lam (fn_8 _rempty (_rconcat _j _u) $0))",
        "(lam (fn_0 $0 (_rconcat _a _w) _p))",
        "(lam (fn_3 (fn_0 $0 (_rconcat _a _w) _p) (lam $0)))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _rempty _a) _w) _p))",
        "(lam (fn_0 $0 (_rconcat _rempty (_rconcat _a _w)) _p))",
        "(lam (fn_0 $0 (_rconcat _a _w) _p))",
        "(lam (fn_0 $0 (_rconcat _u _f) _g))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _u _rempty) _f) _g))",
        "(lam (fn_0 $0 (_rconcat _u (_rconcat _rempty _f)) _g))",
        "(lam (fn_0 $0 (_rconcat (_rconcat _rempty _u) _f) _g))",
        "(lam (fn_0 $0 (_rconcat _rempty (_rconcat _u _f)) _g))",
        "(lam (fn_1 $0 _w _a))",
        "(lam (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _a (cons _w (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _i _w) (cdr (_rsplit _rempty $0)))))))))",
        "(lam (fn_9 _j _r $0))",
        "(lam (fn_5 (fn_2 $0 _r) _j))",
        "(lam (fn_5 (fn_2 (fn_3 $0 (lam $0)) _r) _j))",
        "(lam (fn_5 (fn_3 (fn_2 $0 _r) (lam $0)) _j))",
        "(lam (fn_5 (fn_7 (fn_2 $0 _r) _rempty) _j))",
        "(lam (fn_8 _p _i $0))",
        "(lam (fn_3 (fn_8 _p _i $0) (lam $0)))",
        "(lam (fn_8 _p _i (fn_3 $0 (lam $0))))",
        "(lam (fn_2 (fn_8 _p _i $0) _p))",
        "(lam (fn_8 _g _n $0))",
        "(lam (fn_8 _g _n (fn_3 $0 (lam $0))))",
        "(lam (fn_3 (fn_8 _g _n $0) (lam $0)))",
        "(lam (fn_8 _g (_rconcat _rempty _n) $0))",
        "(lam (fn_3 (fn_3 $0 (lam _g)) (lam (_rconcat _n $0))))",
        "(lam (fn_1 $0 _o (car (_rsplit _rempty $0))))",
        "(lam (fn_1 $0 _o (car (_rsplit _rdot $0))))",
        "(lam (fn_3 (fn_1 $0 _o (car (_rsplit _rempty $0))) (lam $0)))",
        "(lam (fn_1 $0 _o (car (_rsplit _rempty (fn_3 $0 (lam $0))))))",
        "(lam (fn_1 $0 (_rconcat _rempty _o) (car (_rsplit _rempty $0))))",
        "(lam (fn_1 $0 _i _x))",
        "(lam (fn_1 $0 _i (_rconcat _rempty _x)))",
        "(lam (fn_1 $0 _i (_rconcat _x _rempty)))",
        "(lam (_rflatten (cons _x (cdr (_rsplit _rdot (fn_1 $0 _i _n))))))",
        "(lam (fn_1 $0 _i _q))",
        "(lam (fn_1 $0 (_rconcat _i _rempty) _q))",
        "(lam (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _q (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons (_rconcat _q (_rconcat _i _rempty)) (cdr (_rsplit _rempty $0)))))",
        "(lam (fn_2 (fn_2 $0 _rempty) _j))",
        "(lam (fn_2 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _j))",
        "(lam (fn_2 (fn_2 (fn_3 $0 (lam $0)) _rempty) _j))",
        "(lam (fn_2 (fn_3 (fn_2 $0 _rempty) (lam $0)) _j))",
        "(lam (fn_3 (fn_2 (fn_2 $0 _rempty) _j) (lam $0)))",
        "(lam (fn_2 $0 _i))",
        "(lam (fn_9 _i _rempty $0))",
        "(lam (fn_9 _rempty _i $0))",
        "(lam (fn_2 (fn_3 $0 (lam $0)) _i))",
        "(lam (fn_2 (fn_2 $0 _i) _i))",
        "(lam (fn_0 $0 _k _t))",
        "(lam (fn_1 $0 _s _e))",
        "(lam (fn_3 (fn_1 $0 _s _e) (lam $0)))",
        "(lam (fn_1 (fn_3 $0 (lam $0)) _s _e))",
        "(lam (fn_1 (fn_5 $0 _rempty) _s _e))",
        "(lam (fn_1 (_rflatten (_rsplit _i $0)) _s _e))",
        "(lam (fn_0 $0 _h _s))",
        "(lam (fn_3 (fn_0 $0 _h _s) (lam $0)))",
        "(lam (fn_0 (fn_3 $0 (lam $0)) _h _s))",
        "(lam (fn_0 $0 (_rconcat _rempty _h) _s))",
        "(lam (fn_0 $0 (_rconcat _h _rempty) _s))",
        "(lam (fn_0 $0 (_rconcat _r _q) _r))",
        "(lam (fn_0 $0 (_rconcat _r (_rconcat _q _rempty)) _r))",
        "(lam (fn_0 $0 (_rconcat _r (_rconcat _rempty _q)) _r))",
        "(lam (fn_0 $0 (_rconcat _rempty (_rconcat _r _q)) _r))",
        "(lam (fn_3 $0 (lam (if (_rmatch $0 _r) (_rconcat $0 _q) $0))))",
        "(lam (fn_0 $0 _b _u))",
        "(lam (fn_0 (fn_3 $0 (lam $0)) _b _u))",
        "(lam (fn_0 $0 (_rconcat _b _rempty) _u))",
        "(lam (fn_0 $0 (_rconcat _rempty _b) _u))",
        "(lam (fn_4 $0 _s _e))",
        "(lam (fn_1 (_rflatten (cons _i (cdr (cdr (_rsplit _rdot $0))))) _s _e))",
        "(lam (fn_1 (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))) _s _e))",
        "(lam (fn_1 (fn_4 $0 _rempty _e) _s _e))",
        "(lam (fn_1 (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))) _s _e))",
        "(lam (fn_0 $0 _v _i))",
        "(lam (fn_3 (fn_0 $0 _v _i) (lam $0)))",
        "(lam (fn_0 (fn_3 $0 (lam $0)) _v _i))",
        "(lam (fn_0 $0 (_rconcat _rempty _v) _i))",
        "(lam (fn_0 $0 (_rconcat _v _rempty) _i))",
        "(lam (fn_3 $0 (lam (_rconcat _l $0))))",
        "(lam (fn_3 (fn_3 $0 (lam $0)) (lam (_rconcat _l $0))))",
        "(lam (fn_3 (fn_3 $0 (lam (_rconcat _l $0))) (lam $0)))",
        "(lam (fn_3 (fn_5 $0 _rempty) (lam (_rconcat _l $0))))",
        "(lam (fn_3 (_rflatten (_rsplit _rempty $0)) (lam (_rconcat _l $0))))",
        "(lam (fn_4 $0 _s _f))",
        "(lam (fn_7 (_rflatten (cons _s (cdr (cdr (_rsplit _rdot $0))))) _f))",
        "(lam (fn_4 $0 (_rconcat _f _s) _rempty))",
        "(lam (fn_4 $0 (_rconcat _rempty _s) _f))",
        "(lam (fn_7 (fn_4 $0 _s _rempty) _f))",
        "(lam (_rflatten (cons _q (cdr (cdr (_rsplit _rdot $0))))))",
        "(lam (_rflatten (cons _q (cdr (cdr (_rsplit _rdot (fn_3 $0 (lam $0))))))))",
        "(lam (fn_4 $0 _rempty _q))",
        "(lam (_rflatten (cons _q (cdr (cdr (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rempty $0))))))))))",
        "(lam (_rflatten (cons _q (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))",
        "(lam (fn_9 _q _r (fn_2 $0 _rempty)))",
        "(lam (fn_9 _q _r (fn_9 _rempty _rempty $0)))",
        "(lam (fn_9 _q _r (fn_2 (fn_3 $0 (lam $0)) _rempty)))",
        "(lam (fn_9 _q _r (fn_2 (fn_2 $0 _rempty) _j)))",
        "(lam (fn_5 (fn_2 (fn_2 (fn_2 $0 _rempty) _j) _r) _q))",
        "(lam (fn_9 _j _b (fn_2 $0 _rempty)))",
        "(lam (fn_9 _j (_rconcat _rempty _b) (fn_2 $0 _rempty)))",
        "(lam (fn_2 (fn_9 _j _b (fn_2 $0 _rempty)) _j))",
        "(lam (fn_9 _j _b (fn_2 (fn_2 $0 _j) _rempty)))",
        "(lam (fn_9 _j _b (fn_2 (fn_2 $0 _rempty) _j)))",
        "(lam (fn_3 $0 (lam (_rconcat $0 _b))))",
        "(lam (fn_3 (fn_3 $0 (lam $0)) (lam (_rconcat $0 _b))))",
        "(lam (fn_3 (fn_3 $0 (lam (_rconcat $0 _b))) (lam $0)))",
        "(lam (fn_2 (fn_3 $0 (lam (_rconcat $0 _b))) _b))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot $0))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (fn_3 $0 (lam $0))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (fn_2 $0 _r)))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (fn_3 $0 (lam _r))))))",
        "(lam (_rflatten (map (lam (_rconcat _h _r)) (_rsplit _rdot (fn_3 $0 (lam _y))))))",
        "(lam (fn_5 $0 _k))",
        "(lam (fn_5 (fn_3 $0 (lam $0)) _k))",
        "(lam (fn_3 (fn_5 $0 _k) (lam $0)))",
        "(lam (fn_5 (_rflatten (_rsplit _rempty $0)) _k))",
        "(lam (fn_2 (fn_5 $0 _k) _k))",
        "(lam (fn_9 _s _x $0))",
        "(lam (fn_5 (fn_2 $0 _x) _s))",
        "(lam (fn_3 (fn_5 (fn_2 $0 _x) _s) (lam $0)))",
        "(lam (_rflatten (_rsplit _rempty (fn_5 (fn_2 $0 _x) _s))))",
        "(lam (fn_2 (fn_2 $0 _rempty) _j))",
        "(lam (fn_2 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _j))",
        "(lam (fn_2 (fn_2 (fn_3 $0 (lam $0)) _rempty) _j))",
        "(lam (fn_2 (fn_3 (fn_2 $0 _rempty) (lam $0)) _j))",
        "(lam (fn_3 (fn_2 (fn_2 $0 _rempty) _j) (lam $0)))",
        "(lam (fn_5 $0 _a))",
        "(lam (fn_3 (fn_5 $0 _a) (lam $0)))",
        "(lam (fn_5 $0 (_rconcat _a _rempty)))",
        "(lam (fn_5 $0 (_rconcat _rempty _a)))",
        "(lam (fn_2 (fn_5 $0 _a) _a))",
        "(lam (fn_1 $0 _a _rempty))",
        "(lam (fn_1 $0 _rempty _a))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lam (fn_3 (_rflatten (cons _a (cdr (_rsplit _rempty $0)))) (lam $0)))",
        "(lam (fn_5 $0 _u))",
        "(lam (fn_5 (fn_3 $0 (lam $0)) _u))",
        "(lam (fn_3 (fn_5 $0 _u) (lam $0)))",
        "(lam (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lam (_rflatten (_rappend _u (_rsplit _i $0))))",
        "(lam (fn_9 _p _x $0))",
        "(lam (fn_5 (fn_2 $0 _x) _p))",
        "(lam (fn_5 (fn_9 _rempty _x $0) _p))",
        "(lam (fn_2 (fn_9 _s _x $0) _p))",
        "(lam (fn_2 (fn_9 _y _x $0) _p))",
        "(lam (fn_7 $0 _v))",
        "(lam (_rflatten (cons _v (_rsplit _rempty $0))))",
        "(lam (_rflatten (cons _v (_rsplit _a $0))))",
        "(lam (_rflatten (cons _v (_rsplit _i $0))))",
        "(lam (_rflatten (cons _v (_rsplit _r $0))))",
        "(lam (fn_0 $0 _o _t))",
        "(lam (fn_3 (fn_0 $0 _o _t) (lam $0)))",
        "(lam (fn_0 (fn_3 $0 (lam $0)) _o _t))",
        "(lam (fn_0 $0 (_rconcat _o _rempty) _t))",
        "(lam (fn_0 $0 (_rconcat _rempty _o) _t))",
        "(lam (fn_7 $0 _b))",
        "(lam (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lam (fn_3 (fn_7 $0 _b) (lam $0)))",
        "(lam (_rflatten (cons _b (_rsplit _a $0))))",
        "(lam (fn_7 $0 (_rconcat _rempty _b)))",
        "(lam (fn_7 $0 _a))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot (fn_7 $0 _a))))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot (fn_7 $0 _t))))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot (fn_7 $0 _c))))))",
        "(lam (_rflatten (cons _a (cdr (_rsplit _rdot (fn_7 $0 _f))))))",
        "(lam (fn_3 $0 (lam _l)))",
        "(lam (fn_3 (fn_5 $0 _rempty) (lam _l)))",
        "(lam (fn_3 (fn_2 $0 _t) (lam _l)))",
        "(lam (fn_3 (fn_3 $0 (lam _l)) (lam _l)))",
        "(lam (fn_3 (_rflatten (cons _m (cdr (_rsplit _rdot $0)))) (lam _l)))",
        "(lam (fn_9 _j _o $0))",
        "(lam (fn_9 _j _o (fn_3 $0 (lam $0))))",
        "(lam (fn_9 (_rconcat _j _rempty) _o $0))",
        "(lam (fn_9 _j (_rconcat _o _rempty) $0))",
        "(lam (fn_9 _j _o (fn_2 $0 _j)))",
        "(lam (fn_0 $0 (_rconcat _r _a) _s))",
        "(lam (fn_3 (fn_0 $0 (_rconcat _r _a) _s) (lam $0)))",
        "(lam (fn_0 (fn_3 $0 (lam $0)) (_rconcat _r _a) _s))",
        "(lam (fn_0 $0 (_rconcat _r _a) (_rconcat _rempty _s)))",
        "(lam (fn_5 (fn_0 $0 (_rconcat _r _a) _s) _rempty))",
        "(lam (fn_1 $0 _b _s))",
        "(lam (fn_1 $0 (_rconcat _s _b) _rempty))",
        "(lam (fn_1 $0 _rempty (_rconcat _s _b)))",
        "(lam (fn_7 (_rflatten (cons _b (cdr (_rsplit _rdot $0)))) _s))",
        "(lam (fn_9 _v _c $0))",
        "(lam (fn_5 (fn_2 $0 _c) _v))",
        "(lam (fn_9 _v (_rconcat _rempty _c) $0))",
        "(lam (fn_5 (fn_3 (fn_2 $0 _c) (lam $0)) _v))",
        "(lam (fn_5 (fn_5 (fn_2 $0 _rempty) _c) _v))"
    ],
    "rewritten_dreamcoder": [
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _w))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _w))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _w) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 (_rconcat _rempty _w)))",
        "(lambda (_rflatten (_rappend _w (_rsplit _a $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _k _b $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _k _b $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _k _b (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _u _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _u _rempty) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _rempty _u) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _rempty (_rconcat _r _u)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (cdr (_rsplit _rdot $2)))))))) $0 _n _l))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (cdr (_rsplit _rdot $2)))))))) $0 _n _l) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (cdr (_rsplit _rdot $2)))))))) $0 _n (_rconcat _rempty _l)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _n) _l))",
        "(lambda (_rflatten (cons _l (_rsplit _rempty (_rflatten (cons _n (cdr (cdr (_rsplit _rdot $0)))))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _a _n))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _a _n) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _a _n))",
        "(lambda (_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (_rflatten (cons _a (cdr (_rsplit _rempty $0)))) _a _n))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _k)) (lambda _k)))",
        "(lambda (_rflatten (map (lambda (_rconcat _k _rempty)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _rempty _k)) (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (_rflatten (cons _rempty (cons _s (cdr (_rsplit _rempty $0))))) (lambda _k)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _r))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _r _rempty $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _rempty _r $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _r))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _r) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _u _o (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) _o) _u))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _u _o (_rflatten (_rrevcdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _u _o (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _rempty _rempty $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f _w) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _rempty _f) _w) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty (_rconcat _f _w)) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _f (_rconcat _rempty _w)) _p))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _d))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _d))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _d) (lambda $0)))",
        "(lambda (_rflatten (_rappend _d (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _d (_rsplit _i $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _j _q $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _j _q (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _j _q $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _j _q $0) _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _j)) (lambda (_rconcat _q $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _q _g $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _q _g $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _q _g (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) (_rconcat _rempty _q) _g $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) (_rconcat _q _rempty) _g $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _d _c $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) (_rconcat _rempty _d) _c $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _d (_rconcat _rempty _c) $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _d _c) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _rempty _d) _c) _c))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $0 _v))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (lambda (_rconcat $0 _v))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $0 _v))) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat (_rconcat _rempty $0) _v))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $0 _v))) _v))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _f))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _f))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (_rflatten (_rsplit _rempty $0)) _f))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _i) _f))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _f) _f))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _m _t $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _t) _m))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _m _t $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _m _t (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _t)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _t) (_rconcat _rempty _m)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _e _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _e _e))",
        "(lambda (_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _e (cons _e (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) $0 _j))",
        "(lambda (_rflatten (cons _j (_rsplit _rempty $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _i $0))))",
        "(lambda (_rflatten (cons _j (_rsplit _e $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _j)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _j _rempty $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _j)) _j))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _j)) (lambda _j)))",
        "(lambda (_rflatten (map (lambda _j) (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _s _h $0))",
        "(lambda (_rflatten (map (lambda (_rconcat _h _s)) (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (_rflatten (map (lambda (_rconcat _h _s)) (_rsplit _rdot $0))) (lambda $0)))",
        "(lambda (_rflatten (map (lambda (_rconcat _h _s)) (_rsplit _rdot (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _s))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _h _s)) (_rsplit _rdot (_rflatten (cons _rempty (cons _s (cdr (_rsplit _rempty $0)))))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _i _w))",
        "(lambda (_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _w (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons _w (map (lambda $0) (cons _i (cdr (_rsplit _rdot $0)))))))",
        "(lambda (_rflatten (cons _w (cons (_rconcat _i _rempty) (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _x) _t))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 _t) (_rconcat $0 _x) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (lambda (if (_rmatch $0 _t) (_rconcat $0 _x) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 _t) (_rconcat $0 _x) $0))) (lambda $0)))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 _t) (_rconcat $0 _x) $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _w _y))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _w _y) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _w _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _w _rempty) _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _rempty) _w _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _v _c))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _v _c) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _v _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _v (_rconcat _rempty _c)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _v (_rconcat _c _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _a _q))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _a _q) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _rempty _a) _q))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _a _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _rempty _a) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _rempty (_rconcat _g _a)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _g _a) _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _p)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (lambda _p)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _p)) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _rempty) (lambda _p)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _p)) (lambda _p)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _y) _t))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 _t) (_rconcat $0 _y) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (lambda (if (_rmatch $0 _t) (_rconcat $0 _y) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 _t) (_rconcat $0 _y) $0))) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 _t) (_rconcat $0 _y) $0))) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _r _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _r _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _r _rempty) _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _r (_rconcat _i _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _r (_rconcat _rempty _i)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _v _r $0))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _r _v)) (_rsplit _rdot (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _r)))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) _d) _t))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (_rflatten (_rrevcdr (_rsplit _rempty $0))) _d) _t))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) _d) (lambda $0)) _t))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) _t) _d) _t))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _t) _rempty) _d) _t))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 _p) (_rconcat $0 $0) $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) $0 _f))",
        "(lambda (_rflatten (cons _f (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) $0 _f) (lambda $0)))",
        "(lambda (_rflatten (cons _f (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _f (_rsplit _i $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _n _f $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) (_rconcat _f _n) _rempty $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _n (_rconcat _f _rempty) $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _n _f (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _i)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _n _f (_rflatten (cons _b (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _g _p))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _g _p) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _g _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _g _rempty) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _g) _p))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _p))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _p))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 (_rconcat _rempty _p)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 (_rconcat _p _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _d) _p))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _b _r $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _b _r (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _r) _r))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) (_rconcat _rempty _b) _r $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _b (_rconcat _rempty _r) $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _g) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _c _rempty) _g) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _rempty _c) _g) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c (_rconcat _rempty _g)) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty (_rconcat _c _g)) _o))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _rempty _m))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _rempty _m) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _rempty _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _rempty) _m))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _rempty _m) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _v _q) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _rempty _v) _q) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty (_rconcat _v _q)) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _v (_rconcat _rempty _q)) _l))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _v _q) (_rconcat _rempty _l)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _b _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _rempty _b))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _b))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _k _b) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _k _b) _rempty) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _k _rempty) _b) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _k (_rconcat _rempty _b)) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty (_rconcat _k _b)) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _q _n))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _q _n) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _q _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _q (_rconcat _n _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _q _rempty) _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _u) _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _m _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _m _rempty) _r))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) (_rflatten (cons _m (cdr (_rsplit _rdot $0)))) _r))",
        "(lambda (_rflatten (cons _r (_rsplit _rempty (_rflatten (cons _m (cdr (_rsplit _rdot $0))))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _w _b))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _w _a))))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _w _w))))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _w _y))))))",
        "(lambda (_rflatten (cons _b (cdr (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _w _x))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _o _a $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _a) _o))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _o (_rconcat _a _rempty) $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _rempty (_rconcat _a _o) $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _rempty _a $0) _o))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _f))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _f) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _i) _f))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _u) _f))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _f) _f))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _d (car (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _d (car (map (lambda $0) (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons (car (map (lambda (_rconcat $0 _d)) (_rsplit _rempty $0))) (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _q _b))",
        "(lambda (_rflatten (cons _f (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _f (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _f (cdr (map (lambda $0) (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (map (lambda $0) (cons _f (cdr (_rsplit _rempty $0))))))",
        "(lambda (_rflatten (cons _f (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)))))))",
        "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (cdr (_rsplit _rdot $2)))))))) $0 _w _rempty))",
        "(lambda (_rflatten (cons _w (cdr (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))))",
        "(lambda (_rflatten (_rsplit _rempty (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _c _y))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _c _y) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _c _y))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _c (_rconcat _rempty _y)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _rempty) _c _y))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _t _y $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _t _y (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _t)) (lambda (_rconcat _y $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _y)) (lambda (_rconcat $0 _t))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _t _y (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _y))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _i _n $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _i _n (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _i _n $0) _i))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _i _n (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _i)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _i _n (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _i))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _t _w $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _t _w $0) _t))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _t _w (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _t)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _t _w (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _t))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _t _w (_rflatten (_rsplit _e $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _l _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _l _rempty) _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _l) _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _rempty _rempty) _l) _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty (_rconcat _rempty _l)) _m))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _y _i $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _y _i (_rflatten (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _y _i $0) _y))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _y _i (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _y)))",
        "(lambda (_rflatten (_rappend _y (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _e _u $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _e _u (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _e)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _e _u (_rflatten (cons _a (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _e _u (_rflatten (cons _b (cdr (_rsplit _rdot $0))))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) $0 _y))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _y))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) $0 _y) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) $0 (_rconcat _rempty _y)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) $0 (_rconcat _y _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _e _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _e _k))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _k _e) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _e (_rconcat _k _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _h _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _rempty _h))",
        "(lambda (_rflatten (cons _h (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _h (cdr (_rsplit _rdot (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _e _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _e (_rconcat _rempty _x)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _e (_rconcat _x _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _e _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _m _l) _r))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _m _l) _r) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (_rconcat _m _l) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _d) _r))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _e _d) _r) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (_rconcat _e _d) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _e _d) _rempty) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _e _rempty) _d) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c _e) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _c _rempty) _e) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _rempty _c) _e) _c))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _c (_rconcat _e _rempty)) _c))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 _c) (_rconcat $0 _e) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _i _m))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _i (_rconcat _m _rempty)))",
        "(lambda (_rflatten (cons _m (cdr (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _i _s))))))",
        "(lambda (_rflatten (cons _m (cdr (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _i _n))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _q $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (lambda (_rconcat _q $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _q $0))) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (_rflatten (_rsplit _rempty $0)) (lambda (_rconcat _q $0))))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _q $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _o _j))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _o _j) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _o (_rconcat _rempty _j)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) (_rflatten (cons _o (cdr (_rsplit _rdot $0)))) _j))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _q) _s))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _t _q) _s) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (_rconcat _t _q) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _rempty _t) _q) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _t _s $0) _q _s))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _i _g $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _i _g (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _i (_rconcat _g _rempty) $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _rempty (_rconcat _g _i) $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _i _g (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _i)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _g _n))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _g _n) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _g _n))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _g (_rconcat _n _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _g) _n))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _m _o $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _o) _m))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _m _o $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) (_rconcat _m _rempty) _o $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _o) _m) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _k _a) _g))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _x _h $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _x _h $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _x _h (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _h))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _x _h (_rflatten (_rsplit _rdot $0))))",
        "(lambda (_rflatten (_rsplit _rdot (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _x _h $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _y _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _y) _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _y _rempty) _h))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _r _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _r _rempty) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _r (_rconcat _r _rempty)))",
        "(lambda (_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _b _g))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _b _g) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _rempty _b) _g))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _b _g))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _i _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _i _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _i _rempty) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _i) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty (_rconcat _i _rempty)) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _i _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _rempty _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _rempty _rempty) _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _i (_rconcat _rempty _rempty)))",
        "(lambda (_rflatten (cons _i (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _g _o $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _o) _g))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _g _o $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _g _o (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _o) (lambda $0)) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _u _c) _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty (_rconcat _u _c)) _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _u (_rconcat _c _rempty)) _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _u (_rconcat _rempty _c)) _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _u _c) (_rconcat _rempty _a)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (cdr (_rsplit _rdot $2)))))))) $0 _a _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))) _a _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _a _e))",
        "(lambda (_rflatten (cons _e (cons _a (cdr (cdr (_rsplit _rdot $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))) _a _e))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _q))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _q))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _q) _rempty))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _rempty) _q))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _q) _q))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0)))))) _w _g $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _s _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _s _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _rempty) _s _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (_rflatten (_rsplit _rempty $0)) _s _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (_rflatten (_rsplit _e $0)) _s _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _l _g))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _l _g) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _l _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _l (_rconcat _g _rempty)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _m _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _rempty _m))",
        "(lambda (_rflatten (cons _m (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _m (cdr (_rsplit _rdot $0)))))",
        "(lambda (_rflatten (cons _m (cdr (_rsplit _rempty (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _m _i))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _m _i) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _m _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _m _rempty) _i))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _u _j $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _u (_rconcat _rempty _j) $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) (_rconcat _rempty _u) _j $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _rempty (_rconcat _j _u) $0))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a _w) _p))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a _w) _p) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _rempty _a) _w) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty (_rconcat _a _w)) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _a _w) _p))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _u _f) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _u _rempty) _f) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _u (_rconcat _rempty _f)) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat (_rconcat _rempty _u) _f) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty (_rconcat _u _f)) _g))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _w _a))",
        "(lambda (_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _a (cons _w (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons _a (cdr (_rsplit _rempty (_rflatten (cons (_rconcat _i _w) (cdr (_rsplit _rempty $0)))))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _j _r $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _r) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _r) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _r) (lambda $0)) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _r) _rempty) _j))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _p _i $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _p _i $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _p _i (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _p _i $0) _p))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _g _n $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _g _n (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _g _n $0) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3)))))) _g (_rconcat _rempty _n) $0))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _g)) (lambda (_rconcat _n $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _o (car (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _o (car (_rsplit _rdot $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _o (car (_rsplit _rempty $0))) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _o (car (_rsplit _rempty (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _rempty _o) (car (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _i _x))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _i (_rconcat _rempty _x)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _i (_rconcat _x _rempty)))",
        "(lambda (_rflatten (cons _x (cdr (_rsplit _rdot (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _i _n))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _i _q))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _i _rempty) _q))",
        "(lambda (_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _q (cons _i (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons (_rconcat _q (_rconcat _i _rempty)) (cdr (_rsplit _rempty $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (_rflatten (_rrevcdr (_rsplit _rempty $0))) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _rempty) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) (lambda $0)) _j))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) _j) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _i))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _i _rempty $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _rempty _i $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _i))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _i) _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _k _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _s _e))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _s _e) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _s _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _rempty) _s _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (_rflatten (_rsplit _i $0)) _s _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _h _s))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _h _s) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _h _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _h) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _h _rempty) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _q) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r (_rconcat _q _rempty)) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r (_rconcat _rempty _q)) _r))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty (_rconcat _r _q)) _r))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 _r) (_rconcat $0 _q) $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _b _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _b _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _b _rempty) _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _b) _u))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (cdr (_rsplit _rdot $2)))))))) $0 _s _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (_rflatten (cons _i (cdr (cdr (_rsplit _rdot $0))))) _s _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))) _s _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (cdr (_rsplit _rdot $2)))))))) $0 _rempty _e) _s _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))) _s _e))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _v _i))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _v _i) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _v _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _v) _i))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _v _rempty) _i))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _l $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (lambda (_rconcat _l $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat _l $0))) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _rempty) (lambda (_rconcat _l $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (_rflatten (_rsplit _rempty $0)) (lambda (_rconcat _l $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (cdr (_rsplit _rdot $2)))))))) $0 _s _f))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) (_rflatten (cons _s (cdr (cdr (_rsplit _rdot $0))))) _f))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _f _s) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (cdr (_rsplit _rdot $2)))))))) $0 (_rconcat _rempty _s) _f))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (cdr (_rsplit _rdot $2)))))))) $0 _s _rempty) _f))",
        "(lambda (_rflatten (cons _q (cdr (cdr (_rsplit _rdot $0))))))",
        "(lambda (_rflatten (cons _q (cdr (cdr (_rsplit _rdot (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (cdr (_rsplit _rdot $2)))))))) $0 _rempty _q))",
        "(lambda (_rflatten (cons _q (cdr (cdr (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rempty $0))))))))))",
        "(lambda (_rflatten (cons _q (cdr (_rsplit _rempty (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _q _r (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _q _r (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _rempty _rempty $0)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _q _r (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _rempty)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _q _r (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) _j)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) _j) _r) _q))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _j _b (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _j (_rconcat _rempty _b) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _j _b (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty)) _j))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _j _b (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _j) _rempty)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _j _b (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) _j)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $0 _b))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (lambda (_rconcat $0 _b))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $0 _b))) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $0 _b))) _b))",
        "(lambda (_rflatten (map (lambda (_rconcat _h _r)) (_rsplit _rdot $0))))",
        "(lambda (_rflatten (map (lambda (_rconcat _h _r)) (_rsplit _rdot (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _h _r)) (_rsplit _rdot (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _r)))))",
        "(lambda (_rflatten (map (lambda (_rconcat _h _r)) (_rsplit _rdot (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _r))))))",
        "(lambda (_rflatten (map (lambda (_rconcat _h _r)) (_rsplit _rdot (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _y))))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _k))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _k))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _k) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (_rflatten (_rsplit _rempty $0)) _k))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _k) _k))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _s _x $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _x) _s))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _x) _s) (lambda $0)))",
        "(lambda (_rflatten (_rsplit _rempty (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _x) _s))))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (_rflatten (_rrevcdr (_rsplit _rempty $0))) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _rempty) _j))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) (lambda $0)) _j))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) _j) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _a))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _a) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 (_rconcat _a _rempty)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 (_rconcat _rempty _a)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _a) _a))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _a _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _rempty _a))",
        "(lambda (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))",
        "(lambda (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (_rflatten (cons _a (cdr (_rsplit _rempty $0)))) (lambda $0)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _u))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _u))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _u) (lambda $0)))",
        "(lambda (_rflatten (_rappend _u (_rsplit _a $0))))",
        "(lambda (_rflatten (_rappend _u (_rsplit _i $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _p _x $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _x) _p))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _rempty _x $0) _p))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _s _x $0) _p))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _y _x $0) _p))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) $0 _v))",
        "(lambda (_rflatten (cons _v (_rsplit _rempty $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _a $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _i $0))))",
        "(lambda (_rflatten (cons _v (_rsplit _r $0))))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _o _t))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 _o _t) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) _o _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _o _rempty) _t))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _rempty _o) _t))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) $0 _b))",
        "(lambda (_rflatten (cons _b (_rsplit _rempty $0))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) $0 _b) (lambda $0)))",
        "(lambda (_rflatten (cons _b (_rsplit _a $0))))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) $0 (_rconcat _rempty _b)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) $0 _a))",
        "(lambda (_rflatten (cons _a (cdr (_rsplit _rdot (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) $0 _a))))))",
        "(lambda (_rflatten (cons _a (cdr (_rsplit _rdot (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) $0 _t))))))",
        "(lambda (_rflatten (cons _a (cdr (_rsplit _rdot (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) $0 _c))))))",
        "(lambda (_rflatten (cons _a (cdr (_rsplit _rdot (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) $0 _f))))))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _l)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) $0 _rempty) (lambda _l)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _t) (lambda _l)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda _l)) (lambda _l)))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (_rflatten (cons _m (cdr (_rsplit _rdot $0)))) (lambda _l)))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _j _o $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _j _o (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0))))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) (_rconcat _j _rempty) _o $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _j (_rconcat _o _rempty) $0))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _j _o (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _j)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _a) _s))",
        "(lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _a) _s) (lambda $0)))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda $0)) (_rconcat _r _a) _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _a) (_rconcat _rempty _s)))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2)))))) $0 (_rconcat _r _a) _s) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _b _s))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 (_rconcat _s _b) _rempty))",
        "(lambda (#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2))))))) $0 _rempty (_rconcat _s _b)))",
        "(lambda (#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1))))) (_rflatten (cons _b (cdr (_rsplit _rdot $0)))) _s))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _v _c $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _c) _v))",
        "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2))))) _v (_rconcat _rempty _c) $0))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _c) (lambda $0)) _v))",
        "(lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1))))) (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 _rempty) _c) _v))"
    ],
    "abstractions": [
        {
            "body": "(_rflatten (map (lam (if (_rmatch $0 #2) #1 $0)) (_rsplit _rempty #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (map (lambda (if (_rmatch $0 $1) $2 $0)) (_rsplit _rempty $2))))))",
            "arity": 3,
            "name": "fn_0",
            "utility": 23364,
            "final_cost": 102339,
            "compression_ratio": 1.228300061560109,
            "cumulative_compression_ratio": 1.228300061560109,
            "num_uses": 153,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_0 $0 _g (_rconcat _n _rempty)": "(_rflatten (map (lam (if (_rmatch $0 (_rconcat _n _rempty)) _g $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _q (_rconcat _n _rempty)": "(_rflatten (map (lam (if (_rmatch $0 (_rconcat _n _rempty)) _q $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _u _c) (_rconcat _rempty _a)": "(_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _a)) (_rconcat _u _c) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d #0) (_rconcat _rempty _c)": "(_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _c)) (_rconcat _d $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _v _q) (_rconcat _rempty _l)": "(_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _l)) (_rconcat _v _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b #0) (_rconcat _rempty _r)": "(_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _r)) (_rconcat _b $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _r _a) (_rconcat _rempty _s)": "(_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _s)) (_rconcat _r _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty (_rconcat _u _c)) _a": "(_rflatten (map (lam (if (_rmatch $0 _a) (_rconcat _rempty (_rconcat _u _c)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _u (_rconcat _c _rempty)) _a": "(_rflatten (map (lam (if (_rmatch $0 _a) (_rconcat _u (_rconcat _c _rempty)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _u (_rconcat _rempty _c)) _a": "(_rflatten (map (lam (if (_rmatch $0 _a) (_rconcat _u (_rconcat _rempty _c)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _u _c) _a": "(_rflatten (map (lam (if (_rmatch $0 _a) (_rconcat _u _c) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _k #0) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _k $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat _k #0) _b": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _k $0) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _q _b": "(_rflatten (map (lam (if (_rmatch $0 _b) _q $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat #0 _e) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat $0 _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _c _rempty) _e) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat (_rconcat _c _rempty) _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _k _b) _rempty) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat (_rconcat _k _b) _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _k _rempty) _b) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat (_rconcat _k _rempty) _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _rempty _c) _e) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat (_rconcat _rempty _c) _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _rempty _d) #0) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat (_rconcat _rempty _d) $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _rempty _d) _c) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat (_rconcat _rempty _d) _c) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c (_rconcat _e _rempty)) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c (_rconcat _e _rempty)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _e) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _c _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d #0) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _d $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _d _c) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _d _c) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _k (_rconcat _rempty _b)) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _k (_rconcat _rempty _b)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _k _b) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _k _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty (_rconcat _k _b)) _c": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _rempty (_rconcat _k _b)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t _u) _e": "(_rflatten (map (lam (if (_rmatch $0 _e) (_rconcat _t _u) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _q _rempty) #0) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat (_rconcat _q _rempty) $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _rempty _q) #0) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat (_rconcat _rempty _q) $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _rempty _u) _f) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat (_rconcat _rempty _u) _f) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _u _rempty) _f) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat (_rconcat _u _rempty) _f) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _k _a) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _k _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _q #0) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _q $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat _q #0) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _q $0) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty (_rconcat _u _f)) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _rempty (_rconcat _u _f)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _u (_rconcat _rempty _f)) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _u (_rconcat _rempty _f)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _u _f) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _u _f) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _w #0) _g": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _w $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _y) _h": "(_rflatten (map (lam (if (_rmatch $0 _h) (_rconcat _rempty _y) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _y _rempty) _h": "(_rflatten (map (lam (if (_rmatch $0 _h) (_rconcat _y _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _y _h": "(_rflatten (map (lam (if (_rmatch $0 _h) _y $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _m _rempty) _i": "(_rflatten (map (lam (if (_rmatch $0 _i) (_rconcat _m _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _v) _i": "(_rflatten (map (lam (if (_rmatch $0 _i) (_rconcat _rempty _v) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _v _rempty) _i": "(_rflatten (map (lam (if (_rmatch $0 _i) (_rconcat _v _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _m _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _m $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _m _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _m $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _v _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _v _i": "(_rflatten (map (lam (if (_rmatch $0 _i) _v $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _rempty _v) _q) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat (_rconcat _rempty _v) _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty (_rconcat _v _q)) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _rempty (_rconcat _v _q)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _v (_rconcat _rempty _q)) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _v (_rconcat _rempty _q)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _v _q) _l": "(_rflatten (map (lam (if (_rmatch $0 _l) (_rconcat _v _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _rempty _rempty) _l) _m": "(_rflatten (map (lam (if (_rmatch $0 _m) (_rconcat (_rconcat _rempty _rempty) _l) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _l _rempty) _m": "(_rflatten (map (lam (if (_rmatch $0 _m) (_rconcat _l _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty (_rconcat _rempty _l)) _m": "(_rflatten (map (lam (if (_rmatch $0 _m) (_rconcat _rempty (_rconcat _rempty _l)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _l) _m": "(_rflatten (map (lam (if (_rmatch $0 _m) (_rconcat _rempty _l) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _rempty) _m": "(_rflatten (map (lam (if (_rmatch $0 _m) (_rconcat _rempty _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _l _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _l $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _rempty _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _rempty _m": "(_rflatten (map (lam (if (_rmatch $0 _m) _rempty $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _q _rempty) _n": "(_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _q _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _g) _n": "(_rflatten (map (lam (if (_rmatch $0 _n) (_rconcat _rempty _g) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _g _n": "(_rflatten (map (lam (if (_rmatch $0 _n) _g $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _g _n": "(_rflatten (map (lam (if (_rmatch $0 _n) _g $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _q _n": "(_rflatten (map (lam (if (_rmatch $0 _n) _q $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _q _n": "(_rflatten (map (lam (if (_rmatch $0 _n) _q $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _c _rempty) _g) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat (_rconcat _c _rempty) _g) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _rempty _c) _g) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat (_rconcat _rempty _c) _g) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c (_rconcat _rempty _g)) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c (_rconcat _rempty _g)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _c _g) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _c _g) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty (_rconcat _c _g)) _o": "(_rflatten (map (lam (if (_rmatch $0 _o) (_rconcat _rempty (_rconcat _c _g)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat #0 #0) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat $0 $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _rempty _a) _w) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat (_rconcat _rempty _a) _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _rempty _f) _w) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat (_rconcat _rempty _f) _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _a _w) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _a _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f (_rconcat _rempty _w)) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _f (_rconcat _rempty _w)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _f _w) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _f _w) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _g _rempty) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _g _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty (_rconcat _a _w)) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _rempty (_rconcat _a _w)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty (_rconcat _f _w)) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _rempty (_rconcat _f _w)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _g) _p": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat _rempty _g) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _g _p": "(_rflatten (map (lam (if (_rmatch $0 _p) _g $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _g _p": "(_rflatten (map (lam (if (_rmatch $0 _p) _g $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat #0 _q) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat $0 _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _e _d) _rempty) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat (_rconcat _e _d) _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _e _rempty) _d) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat (_rconcat _e _rempty) _d) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _rempty _b) #0) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat (_rconcat _rempty _b) $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _b #0) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat _b #0) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b $0) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _b _r) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b _r) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _e _d) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat _e _d) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _e _d) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _m _l) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _m _l) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat _m _l) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _m _l) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _r (_rconcat _q _rempty)) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _r (_rconcat _q _rempty)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _r (_rconcat _rempty _q)) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _r (_rconcat _rempty _q)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _r _q) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _r _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty (_rconcat _r _q)) _r": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _rempty (_rconcat _r _q)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat (_rconcat _rempty _t) _q) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat (_rconcat _rempty _t) _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _h _rempty) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _h _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _r _a) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _r _a) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat _r _a) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _r _a) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _h) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _rempty _h) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t #0) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t _q) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat _t _q) _s": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t _q) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _h _s": "(_rflatten (map (lam (if (_rmatch $0 _s) _h $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _h _s": "(_rflatten (map (lam (if (_rmatch $0 _s) _h $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t $0) $0)) (_rsplit _rempty $0))) _q _s": "(_rflatten (map (lam (if (_rmatch $0 _s) _q $0)) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t $0) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat #0 _x) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat $0 _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat #0 _x) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat $0 _x) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat #0 _y) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat $0 _y) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat #0 _y) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat $0 _y) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _i _rempty) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _i _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _o _rempty) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _o _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty (_rconcat _i _rempty)) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _rempty (_rconcat _i _rempty)) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _i) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _rempty _i) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _o) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _rempty _o) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t _x) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _t _y) _t": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat _t _y) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _i _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _i $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _i _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _i $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 _k _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _k $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _o _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _o $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _o _t": "(_rflatten (map (lam (if (_rmatch $0 _t) _o $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_0 $0 (_rconcat _b _rempty) _u": "(_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _b _rempty) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 (_rconcat _rempty _b) _u": "(_rflatten (map (lam (if (_rmatch $0 _u) (_rconcat _rempty _b) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 $0 _b _u": "(_rflatten (map (lam (if (_rmatch $0 _u) _b $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_0 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _b _u": "(_rflatten (map (lam (if (_rmatch $0 _u) _b $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons (_rconcat #2 #1) (cdr (_rsplit _rdot #0))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (_rsplit _rdot $2)))))))",
            "arity": 3,
            "name": "fn_1",
            "utility": 15150,
            "final_cost": 87189,
            "compression_ratio": 1.1737604514330937,
            "cumulative_compression_ratio": 1.4417300347520903,
            "num_uses": 117,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_1 $0 _v (_rconcat _c _rempty)": "(_rflatten (cons (_rconcat (_rconcat _c _rempty) _v) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _rempty (_rconcat _g _a)": "(_rflatten (cons (_rconcat (_rconcat _g _a) _rempty) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _l (_rconcat _g _rempty)": "(_rflatten (cons (_rconcat (_rconcat _g _rempty) _l) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _r (_rconcat _i _rempty)": "(_rflatten (cons (_rconcat (_rconcat _i _rempty) _r) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _e (_rconcat _k _rempty)": "(_rflatten (cons (_rconcat (_rconcat _k _rempty) _e) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _i (_rconcat _m _rempty)": "(_rflatten (cons (_rconcat (_rconcat _m _rempty) _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _r (_rconcat _r _rempty)": "(_rflatten (cons (_rconcat (_rconcat _r _rempty) _r) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _rempty (_rconcat _r _u)": "(_rflatten (cons (_rconcat (_rconcat _r _u) _rempty) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _v (_rconcat _rempty _c)": "(_rflatten (cons (_rconcat (_rconcat _rempty _c) _v) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _r (_rconcat _rempty _i)": "(_rflatten (cons (_rconcat (_rconcat _rempty _i) _r) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _o (_rconcat _rempty _j)": "(_rflatten (cons (_rconcat (_rconcat _rempty _j) _o) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _i (_rconcat _rempty _rempty)": "(_rflatten (cons (_rconcat (_rconcat _rempty _rempty) _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _e (_rconcat _rempty _x)": "(_rflatten (cons (_rconcat (_rconcat _rempty _x) _e) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _i (_rconcat _rempty _x)": "(_rflatten (cons (_rconcat (_rconcat _rempty _x) _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _c (_rconcat _rempty _y)": "(_rflatten (cons (_rconcat (_rconcat _rempty _y) _c) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _rempty (_rconcat _s _b)": "(_rflatten (cons (_rconcat (_rconcat _s _b) _rempty) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _e (_rconcat _x _rempty)": "(_rflatten (cons (_rconcat (_rconcat _x _rempty) _e) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _i (_rconcat _x _rempty)": "(_rflatten (cons (_rconcat (_rconcat _x _rempty) _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _o (car (_rsplit _rdot $0))": "(_rflatten (cons (_rconcat (car (_rsplit _rdot $0)) _o) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _rempty _o) (car (_rsplit _rempty $0))": "(_rflatten (cons (_rconcat (car (_rsplit _rempty $0)) (_rconcat _rempty _o)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _d (car (_rsplit _rempty $0))": "(_rflatten (cons (_rconcat (car (_rsplit _rempty $0)) _d) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _o (car (_rsplit _rempty $0))": "(_rflatten (cons (_rconcat (car (_rsplit _rempty $0)) _o) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _o (car (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))": "(_rflatten (cons (_rconcat (car (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))) _o) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _d (car (map (lam $0) (_rsplit _rempty $0)))": "(_rflatten (cons (_rconcat (car (map (lam $0) (_rsplit _rempty $0))) _d) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _rempty _a": "(_rflatten (cons (_rconcat _a _rempty) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _w _a": "(_rflatten (cons (_rconcat _a _w) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _rempty _b": "(_rflatten (cons (_rconcat _b _rempty) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _w _b": "(_rflatten (cons (_rconcat _b _w) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _v _c": "(_rflatten (cons (_rconcat _c _v) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _v _c": "(_rflatten (cons (_rconcat _c _v) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))) _a _e": "(_rflatten (cons (_rconcat _e _a) (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_1 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _a _e": "(_rflatten (cons (_rconcat _e _a) (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))) _a _e": "(_rflatten (cons (_rconcat _e _a) (cdr (_rsplit _rdot (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_1 $0 _e _e": "(_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _e _e": "(_rflatten (cons (_rconcat _e _e) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 $0 _s _e": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rsplit _c $0))) _s _e": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rsplit _c $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _i $0)) _s _e": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot (_rflatten (_rsplit _i $0))))))"
                },
                {
                    "fn_1 (_rflatten (cons (_rconcat _e _rempty) (cdr (cdr (_rsplit _rdot $0))))) _s _e": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot (_rflatten (cons (_rconcat _e _rempty) (cdr (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_1 (_rflatten (cons _i (cdr (cdr (_rsplit _rdot $0))))) _s _e": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot (_rflatten (cons _i (cdr (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_1 (_rflatten (cons _rempty (cdr (_rsplit _rdot $0)))) _s _e": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot (_rflatten (cons _rempty (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_1 (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))) _s _e": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0)))))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _s _e": "(_rflatten (cons (_rconcat _e _s) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 $0 (_rconcat _rempty _a) _g": "(_rflatten (cons (_rconcat _g (_rconcat _rempty _a)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _rempty _b) _g": "(_rflatten (cons (_rconcat _g (_rconcat _rempty _b)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _a _g": "(_rflatten (cons (_rconcat _g _a) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _b _g": "(_rflatten (cons (_rconcat _g _b) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _l _g": "(_rflatten (cons (_rconcat _g _l) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _l _g": "(_rflatten (cons (_rconcat _g _l) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 $0 _rempty _h": "(_rflatten (cons (_rconcat _h _rempty) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _r _rempty) _i": "(_rflatten (cons (_rconcat _i (_rconcat _r _rempty)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _rempty _rempty) _i": "(_rflatten (cons (_rconcat _i (_rconcat _rempty _rempty)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _r _i": "(_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _r _i": "(_rflatten (cons (_rconcat _i _r) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 $0 _rempty _i": "(_rflatten (cons (_rconcat _i _rempty) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _s _i": "(_rflatten (cons (_rconcat _i _s) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rsplit _c $0))) _s _i": "(_rflatten (cons (_rconcat _i _s) (cdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rsplit _c $0)))))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _e $0)) _s _i": "(_rflatten (cons (_rconcat _i _s) (cdr (_rsplit _rdot (_rflatten (_rsplit _e $0))))))"
                },
                {
                    "fn_1 (_rflatten (_rsplit _rempty $0)) _s _i": "(_rflatten (cons (_rconcat _i _s) (cdr (_rsplit _rdot (_rflatten (_rsplit _rempty $0))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _s _i": "(_rflatten (cons (_rconcat _i _s) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 $0 _o _j": "(_rflatten (cons (_rconcat _j _o) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _e _k": "(_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _e _k": "(_rflatten (cons (_rconcat _k _e) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 $0 _i _m": "(_rflatten (cons (_rconcat _m _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _rempty _m": "(_rflatten (cons (_rconcat _m _rempty) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _a _n": "(_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 (_rflatten (cons _a (cdr (_rsplit _rempty $0)))) _a _n": "(_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _a _n": "(_rflatten (cons (_rconcat _n _a) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 $0 _i _n": "(_rflatten (cons (_rconcat _n _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _i _rempty) _q": "(_rflatten (cons (_rconcat _q (_rconcat _i _rempty)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _rempty _a) _q": "(_rflatten (cons (_rconcat _q (_rconcat _rempty _a)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _a _q": "(_rflatten (cons (_rconcat _q _a) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _i _q": "(_rflatten (cons (_rconcat _q _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _m _rempty) _r": "(_rflatten (cons (_rconcat _r (_rconcat _m _rempty)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _r _rempty) _r": "(_rflatten (cons (_rconcat _r (_rconcat _r _rempty)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _rempty _u) _r": "(_rflatten (cons (_rconcat _r (_rconcat _rempty _u)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _u _rempty) _r": "(_rflatten (cons (_rconcat _r (_rconcat _u _rempty)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _m _r": "(_rflatten (cons (_rconcat _r _m) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _r _r": "(_rflatten (cons (_rconcat _r _r) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _u _r": "(_rflatten (cons (_rconcat _r _u) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _g _a) _rempty": "(_rflatten (cons (_rconcat _rempty (_rconcat _g _a)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _k _e) _rempty": "(_rflatten (cons (_rconcat _rempty (_rconcat _k _e)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _s _b) _rempty": "(_rflatten (cons (_rconcat _rempty (_rconcat _s _b)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _a _rempty": "(_rflatten (cons (_rconcat _rempty _a) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _b _rempty": "(_rflatten (cons (_rconcat _rempty _b) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _h _rempty": "(_rflatten (cons (_rconcat _rempty _h) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _i _rempty": "(_rflatten (cons (_rconcat _rempty _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _m _rempty": "(_rflatten (cons (_rconcat _rempty _m) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _b _s": "(_rflatten (cons (_rconcat _s _b) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _i _s": "(_rflatten (cons (_rconcat _s _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _i _w": "(_rflatten (cons (_rconcat _w _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _w _w": "(_rflatten (cons (_rconcat _w _w) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _e _x": "(_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _e _x": "(_rflatten (cons (_rconcat _x _e) (cdr (_rsplit _rdot (_rflatten (cons _a (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_1 $0 _i _x": "(_rflatten (cons (_rconcat _x _i) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _w _x": "(_rflatten (cons (_rconcat _x _w) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 (_rconcat _w _rempty) _y": "(_rflatten (cons (_rconcat _y (_rconcat _w _rempty)) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 $0 _c _y": "(_rflatten (cons (_rconcat _y _c) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rsplit _c $0))) _c _y": "(_rflatten (cons (_rconcat _y _c) (cdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rsplit _c $0)))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _c _y": "(_rflatten (cons (_rconcat _y _c) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_1 $0 _w _y": "(_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot $0))))"
                },
                {
                    "fn_1 (_rflatten (_rappend _rempty (_rsplit _c $0))) _w _y": "(_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot (_rflatten (_rappend _rempty (_rsplit _c $0)))))))"
                },
                {
                    "fn_1 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _w _y": "(_rflatten (cons (_rconcat _y _w) (cdr (_rsplit _rdot (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rrevcdr (_rsplit _rempty #0))))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1))))))",
            "arity": 2,
            "name": "fn_2",
            "utility": 9292,
            "final_cost": 77897,
            "compression_ratio": 1.119285723455332,
            "cumulative_compression_ratio": 1.6137078449747744,
            "num_uses": 154,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_2 $0 (_rconcat (_rconcat _a _o) _rempty)": "(_rflatten (_rappend (_rconcat (_rconcat _a _o) _rempty) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat (_rconcat _a _rempty) _o)": "(_rflatten (_rappend (_rconcat (_rconcat _a _rempty) _o) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat (_rconcat _o _rempty) _j)": "(_rflatten (_rappend (_rconcat (_rconcat _o _rempty) _j) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) (_rconcat (_rconcat _rempty _b) _j)": "(_rflatten (_rappend (_rconcat (_rconcat _rempty _b) _j) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 $0 (_rconcat (_rconcat _rempty _c) _v)": "(_rflatten (_rappend (_rconcat (_rconcat _rempty _c) _v) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _a _o)": "(_rflatten (_rappend (_rconcat _a _o) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _a _rempty)": "(_rflatten (_rappend (_rconcat _a _rempty) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))) (_rconcat _b _j)": "(_rflatten (_rappend (_rconcat _b _j) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) (_rconcat _b _j)": "(_rflatten (_rappend (_rconcat _b _j) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty $0)))))))) (_rconcat _b _j)": "(_rflatten (_rappend (_rconcat _b _j) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty $0))))))))))))"
                },
                {
                    "fn_2 $0 (_rconcat _c _v)": "(_rflatten (_rappend (_rconcat _c _v) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _i _rempty)": "(_rflatten (_rappend (_rconcat _i _rempty) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _i _y)": "(_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _y (_rrevcdr (_rsplit _rempty $0)))) (_rconcat _i _y)": "(_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _y (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 (_rflatten (_rsplit _rempty $0)) (_rconcat _i _y)": "(_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 $0 (_rconcat _o (_rconcat _j _rempty))": "(_rflatten (_rappend (_rconcat _o (_rconcat _j _rempty)) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _o (_rconcat _m _rempty))": "(_rflatten (_rappend (_rconcat _o (_rconcat _m _rempty)) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _o _g)": "(_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat _o _g)": "(_rflatten (_rappend (_rconcat _o _g) (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 $0 (_rconcat _o _j)": "(_rflatten (_rappend (_rconcat _o _j) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty $0)))) (_rconcat _o _j)": "(_rflatten (_rappend (_rconcat _o _j) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (_rconcat _o _j)": "(_rflatten (_rappend (_rconcat _o _j) (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 $0 (_rconcat _o _m)": "(_rflatten (_rappend (_rconcat _o _m) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rsplit _rempty $0)))) (_rconcat _o _u)": "(_rflatten (_rappend (_rconcat _o _u) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) (_rconcat _o _u)": "(_rflatten (_rappend (_rconcat _o _u) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 (_rflatten (_rrevcdr (_rsplit _rempty $0))) (_rconcat _o _u)": "(_rflatten (_rappend (_rconcat _o _u) (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 $0 (_rconcat _r _j)": "(_rflatten (_rappend (_rconcat _r _j) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rsplit _rempty $0)))) (_rconcat _r _q)": "(_rflatten (_rappend (_rconcat _r _q) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))) (_rconcat _r _q)": "(_rflatten (_rappend (_rconcat _r _q) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) (_rconcat _r _q)": "(_rflatten (_rappend (_rconcat _r _q) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))) (_rconcat _r _q)": "(_rflatten (_rappend (_rconcat _r _q) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 $0 (_rconcat _r _rempty)": "(_rflatten (_rappend (_rconcat _r _rempty) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _rempty _i)": "(_rflatten (_rappend (_rconcat _rempty _i) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _rempty _r)": "(_rflatten (_rappend (_rconcat _rempty _r) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _rempty _rempty)": "(_rflatten (_rappend (_rconcat _rempty _rempty) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _t _m)": "(_rflatten (_rappend (_rconcat _t _m) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0)))) (_rconcat _t _m)": "(_rflatten (_rappend (_rconcat _t _m) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 $0 (_rconcat _x _p)": "(_rflatten (_rappend (_rconcat _x _p) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _x _rempty)": "(_rflatten (_rappend (_rconcat _x _rempty) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _x _s)": "(_rflatten (_rappend (_rconcat _x _s) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 (_rconcat _x _y)": "(_rflatten (_rappend (_rconcat _x _y) (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 _a": "(_rflatten (_rappend _a (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _a (_rsplit _c $0))) _a": "(_rflatten (_rappend _a (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _a (_rsplit _c $0)))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0))) _b": "(_rflatten (_rappend _b (_rrevcdr (_rsplit _rempty (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 $0 _c": "(_rflatten (_rappend _c (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) _d": "(_rflatten (_rappend _d (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0)))))))) _d": "(_rflatten (_rappend _d (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))) _d": "(_rflatten (_rappend _d (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))))"
                },
                {
                    "fn_2 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _d": "(_rflatten (_rappend _d (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 $0 _e": "(_rflatten (_rappend _e (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 _f": "(_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0)))) _f": "(_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _f (_rsplit _c $0))) _f": "(_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _f (_rsplit _c $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))) _f": "(_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _i (_rsplit _c $0))) _f": "(_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rsplit _c $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _u (_rsplit _c $0))) _f": "(_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _u (_rsplit _c $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rsplit _rempty $0)) _f": "(_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty (_rflatten (_rsplit _rempty $0))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _f": "(_rflatten (_rappend _f (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 $0 _i": "(_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0)))) _i": "(_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _i": "(_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0))) _i": "(_rflatten (_rappend _i (_rrevcdr (_rsplit _rempty (_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 $0 _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend (_rconcat _b _j) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _b _j) (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rrevcdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam _j) (_rsplit _rempty $0))) _j": "(_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _k (_rsplit _c $0))) _k": "(_rflatten (_rappend _k (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _k (_rsplit _c $0)))))))"
                },
                {
                    "fn_2 $0 _o": "(_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) _o": "(_rflatten (_rappend _o (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend (_rconcat _x _s) (_rrevcdr (_rsplit _rempty $0)))) _p": "(_rflatten (_rappend _p (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _x _s) (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend (_rconcat _x _y) (_rrevcdr (_rsplit _rempty $0)))) _p": "(_rflatten (_rappend _p (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _x _y) (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _d (_rsplit _c $0))) _p": "(_rflatten (_rappend _p (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _c $0)))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0))) _p": "(_rflatten (_rappend _p (_rrevcdr (_rsplit _rempty (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _q (_rsplit _c $0))) _q": "(_rflatten (_rappend _q (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _q (_rsplit _c $0)))))))"
                },
                {
                    "fn_2 $0 _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))))))) _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _r": "(_rflatten (_rappend _r (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 $0 _rempty": "(_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty $0)))) _rempty": "(_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _j (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0)))) _rempty": "(_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam $0) (_rsplit _rempty $0))) _rempty": "(_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 $0 _t": "(_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0)))) _t": "(_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty (_rflatten (_rappend _rempty (_rrevcdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0))) _t": "(_rflatten (_rappend _t (_rrevcdr (_rsplit _rempty (_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))) _v": "(_rflatten (_rappend _v (_rrevcdr (_rsplit _rempty (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_2 $0 _x": "(_rflatten (_rappend _x (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 $0 _y": "(_rflatten (_rappend _y (_rrevcdr (_rsplit _rempty $0))))"
                },
                {
                    "fn_2 (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rempty $0)))) _y": "(_rflatten (_rappend _y (_rrevcdr (_rsplit _rempty (_rflatten (_rappend (_rconcat _i _y) (_rrevcdr (_rsplit _rempty $0))))))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (map #1 (_rsplit _rempty #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1)))))",
            "arity": 2,
            "name": "fn_3",
            "utility": 7575,
            "final_cost": 70322,
            "compression_ratio": 1.1077187793293706,
            "cumulative_compression_ratio": 1.7875344842296863,
            "num_uses": 256,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_3 $0 (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 (_rflatten (_rappend _a (_rsplit _c $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _a (_rsplit _c $0))))))"
                },
                {
                    "fn_3 (_rflatten (_rappend _d (_rsplit _c $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _d (_rsplit _c $0))))))"
                },
                {
                    "fn_3 (_rflatten (_rappend _f (_rsplit _c $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _f (_rsplit _c $0))))))"
                },
                {
                    "fn_3 (_rflatten (_rappend _k (_rsplit _c $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _k (_rsplit _c $0))))))"
                },
                {
                    "fn_3 (_rflatten (_rappend _m (_rsplit _c (fn_2 $0 _o)))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _m (_rsplit _c (fn_2 $0 _o)))))))"
                },
                {
                    "fn_3 (_rflatten (_rappend _s (_rsplit _c (fn_2 $0 _x)))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _s (_rsplit _c (fn_2 $0 _x)))))))"
                },
                {
                    "fn_3 (_rflatten (_rappend _u (_rsplit _c $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _u (_rsplit _c $0))))))"
                },
                {
                    "fn_3 (_rflatten (_rappend _w (_rsplit _c $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (_rappend _w (_rsplit _c $0))))))"
                },
                {
                    "fn_3 (_rflatten (cons (_rconcat _l _n) (cdr (cdr (_rsplit _rdot $0))))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons (_rconcat _l _n) (cdr (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_3 (_rflatten (cons _a (cdr (_rsplit _rempty $0)))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _a (cdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_3 (_rflatten (cons _b (_rsplit _g $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _b (_rsplit _g $0))))))"
                },
                {
                    "fn_3 (_rflatten (cons _f (_rsplit _g $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _f (_rsplit _g $0))))))"
                },
                {
                    "fn_3 (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _w (cdr (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_3 (_rflatten (cons _y (_rsplit _g $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (cons _y (_rsplit _g $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rdot $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _k $0) $0)) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _k $0) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _q $0) $0)) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _q $0) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat $0 _x) $0)) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat $0 _x) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat $0 _y) $0)) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat $0 _y) $0)) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _p) (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (_rflatten (map (lam _p) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (fn_0 $0 (_rconcat _a _w) _p) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 (_rconcat _a _w) _p))))"
                },
                {
                    "fn_3 (fn_0 $0 (_rconcat _e _d) _r) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 (_rconcat _e _d) _r))))"
                },
                {
                    "fn_3 (fn_0 $0 (_rconcat _m _l) _r) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 (_rconcat _m _l) _r))))"
                },
                {
                    "fn_3 (fn_0 $0 (_rconcat _r _a) _s) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 (_rconcat _r _a) _s))))"
                },
                {
                    "fn_3 (fn_0 $0 (_rconcat _t _q) _s) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 (_rconcat _t _q) _s))))"
                },
                {
                    "fn_3 (fn_0 $0 _g _n) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 _g _n))))"
                },
                {
                    "fn_3 (fn_0 $0 _g _p) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 _g _p))))"
                },
                {
                    "fn_3 (fn_0 $0 _h _s) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 _h _s))))"
                },
                {
                    "fn_3 (fn_0 $0 _m _i) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 _m _i))))"
                },
                {
                    "fn_3 (fn_0 $0 _o _t) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 _o _t))))"
                },
                {
                    "fn_3 (fn_0 $0 _q _n) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 _q _n))))"
                },
                {
                    "fn_3 (fn_0 $0 _rempty _m) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 _rempty _m))))"
                },
                {
                    "fn_3 (fn_0 $0 _v _i) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_0 $0 _v _i))))"
                },
                {
                    "fn_3 (fn_1 $0 _a _n) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_1 $0 _a _n))))"
                },
                {
                    "fn_3 (fn_1 $0 _a _q) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_1 $0 _a _q))))"
                },
                {
                    "fn_3 (fn_1 $0 _b _g) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_1 $0 _b _g))))"
                },
                {
                    "fn_3 (fn_1 $0 _c _y) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_1 $0 _c _y))))"
                },
                {
                    "fn_3 (fn_1 $0 _l _g) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_1 $0 _l _g))))"
                },
                {
                    "fn_3 (fn_1 $0 _o (car (_rsplit _rempty $0))) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_1 $0 _o (car (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (fn_1 $0 _o _j) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_1 $0 _o _j))))"
                },
                {
                    "fn_3 (fn_1 $0 _s _e) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_1 $0 _s _e))))"
                },
                {
                    "fn_3 (fn_1 $0 _v _c) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_1 $0 _v _c))))"
                },
                {
                    "fn_3 (fn_1 $0 _w _y) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_1 $0 _w _y))))"
                },
                {
                    "fn_3 (fn_2 $0 (_rconcat _o _g)) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_2 $0 (_rconcat _o _g)))))"
                },
                {
                    "fn_3 (fn_2 $0 (_rconcat _o _m)) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_2 $0 (_rconcat _o _m)))))"
                },
                {
                    "fn_3 (fn_2 $0 (_rconcat _t _m)) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_2 $0 (_rconcat _t _m)))))"
                },
                {
                    "fn_3 (fn_2 $0 _c) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_2 $0 _c))))"
                },
                {
                    "fn_3 (fn_2 $0 _o) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_2 $0 _o))))"
                },
                {
                    "fn_3 (fn_2 $0 _r) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_2 $0 _r))))"
                },
                {
                    "fn_3 (fn_2 $0 _rempty) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_2 $0 _rempty))))"
                },
                {
                    "fn_3 (fn_2 (fn_2 $0 _rempty) _d) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_2 (fn_2 $0 _rempty) _d))))"
                },
                {
                    "fn_3 (fn_2 (fn_2 $0 _rempty) _j) (lam $0)": "(_rflatten (map (lam $0) (_rsplit _rempty (fn_2 (fn_2 $0 _rempty) _j))))"
                },
                {
                    "fn_3 $0 (lam (_rconcat $0 _b))": "(_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (_rconcat $0 _b))": "(_rflatten (map (lam (_rconcat $0 _b)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _y) (_rsplit _rempty $0))) (lam (_rconcat $0 _t))": "(_rflatten (map (lam (_rconcat $0 _t)) (_rsplit _rempty (_rflatten (map (lam _y) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (_rconcat $0 _v))": "(_rflatten (map (lam (_rconcat $0 _v)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 (lam (_rconcat (_rconcat _f _rempty) _n))": "(_rflatten (map (lam (_rconcat (_rconcat _f _rempty) _n)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam (_rconcat (_rconcat _g _i) _rempty))": "(_rflatten (map (lam (_rconcat (_rconcat _g _i) _rempty)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam (_rconcat (_rconcat _g _rempty) _i))": "(_rflatten (map (lam (_rconcat (_rconcat _g _rempty) _i)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam (_rconcat (_rconcat _j _u) _rempty))": "(_rflatten (map (lam (_rconcat (_rconcat _j _u) _rempty)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam (_rconcat (_rconcat _rempty $0) _v))": "(_rflatten (map (lam (_rconcat (_rconcat _rempty $0) _v)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam (_rconcat (_rconcat _rempty _j) _u))": "(_rflatten (map (lam (_rconcat (_rconcat _rempty _j) _u)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam (_rconcat (_rconcat _rempty _n) _g))": "(_rflatten (map (lam (_rconcat (_rconcat _rempty _n) _g)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam (_rconcat _f _n))": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 (_rflatten (cons _b (cdr (_rsplit _rdot $0)))) (lam (_rconcat _f _n))": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_3 (fn_2 $0 _i) (lam (_rconcat _f _n))": "(_rflatten (map (lam (_rconcat _f _n)) (_rsplit _rempty (fn_2 $0 _i))))"
                },
                {
                    "fn_3 $0 (lam (_rconcat _g _i))": "(_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (_rconcat _g _i))": "(_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (fn_2 $0 _i) (lam (_rconcat _g _i))": "(_rflatten (map (lam (_rconcat _g _i)) (_rsplit _rempty (fn_2 $0 _i))))"
                },
                {
                    "fn_3 $0 (lam (_rconcat _h _s))": "(_rflatten (map (lam (_rconcat _h _s)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam (_rconcat _h _x))": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 (_rflatten (_rsplit _rdot $0)) (lam (_rconcat _h _x))": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty (_rflatten (_rsplit _rdot $0)))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _h) (_rsplit _rempty $0))) (lam (_rconcat _h _x))": "(_rflatten (map (lam (_rconcat _h _x)) (_rsplit _rempty (_rflatten (map (lam _h) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 (lam (_rconcat _i _p))": "(_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (_rconcat _i _p))": "(_rflatten (map (lam (_rconcat _i _p)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 (lam (_rconcat _j (_rconcat _rempty _u)))": "(_rflatten (map (lam (_rconcat _j (_rconcat _rempty _u))) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam (_rconcat _j _u))": "(_rflatten (map (lam (_rconcat _j _u)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam (_rconcat _l $0))": "(_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 (_rflatten (_rappend _rempty (_rsplit _c $0))) (lam (_rconcat _l $0))": "(_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _c $0))))))"
                },
                {
                    "fn_3 (_rflatten (_rsplit _rempty $0)) (lam (_rconcat _l $0))": "(_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_3 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (_rconcat _l $0))": "(_rflatten (map (lam (_rconcat _l $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _g) (_rsplit _rempty $0))) (lam (_rconcat _n $0))": "(_rflatten (map (lam (_rconcat _n $0)) (_rsplit _rempty (_rflatten (map (lam _g) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 (lam (_rconcat _n _g))": "(_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (_rconcat _n _g))": "(_rflatten (map (lam (_rconcat _n _g)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 (lam (_rconcat _n _i))": "(_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (_rconcat _n _i))": "(_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _i) (_rsplit _rempty $0))) (lam (_rconcat _n _i))": "(_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty (_rflatten (map (lam _i) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (fn_2 $0 _i) (lam (_rconcat _n _i))": "(_rflatten (map (lam (_rconcat _n _i)) (_rsplit _rempty (fn_2 $0 _i))))"
                },
                {
                    "fn_3 $0 (lam (_rconcat _q $0))": "(_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 (_rflatten (_rsplit _rempty $0)) (lam (_rconcat _q $0))": "(_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_3 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (_rconcat _q $0))": "(_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _j) (_rsplit _rempty $0))) (lam (_rconcat _q $0))": "(_rflatten (map (lam (_rconcat _q $0)) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 (lam (_rconcat _q _j))": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (_rconcat _q _j))": "(_rflatten (map (lam (_rconcat _q _j)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 (lam (_rconcat _r _v))": "(_rflatten (map (lam (_rconcat _r _v)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam (_rconcat _rempty (_rconcat _f _n)))": "(_rflatten (map (lam (_rconcat _rempty (_rconcat _f _n))) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam (_rconcat _rempty _j))": "(_rflatten (map (lam (_rconcat _rempty _j)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam (_rconcat _u _e))": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) (lam (_rconcat _u _e))": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_3 (_rflatten (cons _b (cdr (_rsplit _rdot $0)))) (lam (_rconcat _u _e))": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_3 (fn_2 $0 _e) (lam (_rconcat _u _e))": "(_rflatten (map (lam (_rconcat _u _e)) (_rsplit _rempty (fn_2 $0 _e))))"
                },
                {
                    "fn_3 $0 (lam (_rconcat _w _t))": "(_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 (_rflatten (_rsplit _e $0)) (lam (_rconcat _w _t))": "(_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty (_rflatten (_rsplit _e $0)))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _t) (_rsplit _rempty $0))) (lam (_rconcat _w _t))": "(_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty (_rflatten (map (lam _t) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (fn_2 $0 _t) (lam (_rconcat _w _t))": "(_rflatten (map (lam (_rconcat _w _t)) (_rsplit _rempty (fn_2 $0 _t))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _t) (_rsplit _rempty $0))) (lam (_rconcat _y $0))": "(_rflatten (map (lam (_rconcat _y $0)) (_rsplit _rempty (_rflatten (map (lam _t) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 (lam (_rconcat _y _t))": "(_rflatten (map (lam (_rconcat _y _t)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 (_rflatten (_rappend _rempty (_rsplit _c $0))) (lam (_rconcat _y _t))": "(_rflatten (map (lam (_rconcat _y _t)) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _c $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _y) (_rsplit _rempty $0))) (lam (_rconcat _y _t))": "(_rflatten (map (lam (_rconcat _y _t)) (_rsplit _rempty (_rflatten (map (lam _y) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch $0 (_rconcat _rempty _c)) (_rconcat _d $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _c)) (_rconcat _d $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch $0 (_rconcat _rempty _r)) (_rconcat _b $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 (_rconcat _rempty _r)) (_rconcat _b $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch $0 _b) (_rconcat _k $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _k $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (if (_rmatch $0 _b) (_rconcat _k $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _b) (_rconcat _k $0) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch $0 _c) (_rconcat $0 _e) $0))": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat $0 _e) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch $0 _c) (_rconcat (_rconcat _rempty _d) $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat (_rconcat _rempty _d) $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch $0 _c) (_rconcat _d $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _c) (_rconcat _d $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch $0 _g) (_rconcat (_rconcat _q _rempty) $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat (_rconcat _q _rempty) $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch $0 _g) (_rconcat (_rconcat _rempty _q) $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat (_rconcat _rempty _q) $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch $0 _g) (_rconcat _q $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _q $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (if (_rmatch $0 _g) (_rconcat _q $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _q $0) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch $0 _g) (_rconcat _w $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _g) (_rconcat _w $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch $0 _p) (_rconcat $0 $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _p) (_rconcat $0 $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch $0 _r) (_rconcat $0 _q) $0))": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat $0 _q) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch $0 _r) (_rconcat (_rconcat _rempty _b) $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat (_rconcat _rempty _b) $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch $0 _r) (_rconcat _b $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (if (_rmatch $0 _r) (_rconcat _b $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _r) (_rconcat _b $0) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch $0 _s) (_rconcat _t $0) $0))": "(_rflatten (map (lam (if (_rmatch $0 _s) (_rconcat _t $0) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch $0 _t) (_rconcat $0 _x) $0))": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat $0 _x) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (if (_rmatch $0 _t) (_rconcat $0 _x) $0))": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat $0 _x) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 (lam (if (_rmatch $0 _t) (_rconcat $0 _y) $0))": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat $0 _y) $0)) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam (if (_rmatch $0 _t) (_rconcat $0 _y) $0))": "(_rflatten (map (lam (if (_rmatch $0 _t) (_rconcat $0 _y) $0)) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 (lam _g)": "(_rflatten (map (lam _g) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam _h)": "(_rflatten (map (lam _h) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam _i)": "(_rflatten (map (lam _i) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 (_rflatten (map (lam _j) (_rsplit _rempty $0))) (lam _j)": "(_rflatten (map (lam _j) (_rsplit _rempty (_rflatten (map (lam _j) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 (_rflatten (cons _rempty (cons _s (cdr (_rsplit _rempty $0))))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (cons _rempty (cons _s (cdr (_rsplit _rempty $0))))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _k) (_rsplit _rempty $0))) (lam _k)": "(_rflatten (map (lam _k) (_rsplit _rempty (_rflatten (map (lam _k) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 (lam _l)": "(_rflatten (map (lam _l) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 (_rflatten (_rappend _rempty (_rsplit _c $0))) (lam _l)": "(_rflatten (map (lam _l) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _c $0))))))"
                },
                {
                    "fn_3 (_rflatten (cons _m (cdr (_rsplit _rdot $0)))) (lam _l)": "(_rflatten (map (lam _l) (_rsplit _rempty (_rflatten (cons _m (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _l) (_rsplit _rempty $0))) (lam _l)": "(_rflatten (map (lam _l) (_rsplit _rempty (_rflatten (map (lam _l) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (fn_2 $0 _t) (lam _l)": "(_rflatten (map (lam _l) (_rsplit _rempty (fn_2 $0 _t))))"
                },
                {
                    "fn_3 $0 (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 (_rflatten (_rappend _rempty (_rsplit _c $0))) (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (_rappend _rempty (_rsplit _c $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam $0) (_rsplit _rempty $0))) (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (map (lam $0) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 (_rflatten (map (lam _p) (_rsplit _rempty $0))) (lam _p)": "(_rflatten (map (lam _p) (_rsplit _rempty (_rflatten (map (lam _p) (_rsplit _rempty $0))))))"
                },
                {
                    "fn_3 $0 (lam _r)": "(_rflatten (map (lam _r) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam _s)": "(_rflatten (map (lam _s) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam _t)": "(_rflatten (map (lam _t) (_rsplit _rempty $0)))"
                },
                {
                    "fn_3 $0 (lam _y)": "(_rflatten (map (lam _y) (_rsplit _rempty $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons (_rconcat #2 #1) (cdr (cdr (_rsplit _rdot #0)))))",
            "dreamcoder": "#(lambda (lambda (lambda (_rflatten (cons (_rconcat $0 $1) (cdr (cdr (_rsplit _rdot $2))))))))",
            "arity": 3,
            "name": "fn_4",
            "utility": 3232,
            "final_cost": 67090,
            "compression_ratio": 1.0481740944999254,
            "cumulative_compression_ratio": 1.8736473393948427,
            "num_uses": 13,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_4 $0 _n (_rconcat _rempty _l)": "(_rflatten (cons (_rconcat (_rconcat _rempty _l) _n) (cdr (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_4 $0 _a _e": "(_rflatten (cons (_rconcat _e _a) (cdr (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_4 $0 _rempty _e": "(_rflatten (cons (_rconcat _e _rempty) (cdr (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_4 $0 _s _e": "(_rflatten (cons (_rconcat _e _s) (cdr (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_4 $0 (_rconcat _rempty _s) _f": "(_rflatten (cons (_rconcat _f (_rconcat _rempty _s)) (cdr (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_4 $0 _s _f": "(_rflatten (cons (_rconcat _f _s) (cdr (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_4 $0 (_rconcat _rempty _n) _l": "(_rflatten (cons (_rconcat _l (_rconcat _rempty _n)) (cdr (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_4 $0 _n _l": "(_rflatten (cons (_rconcat _l _n) (cdr (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_4 $0 _rempty _q": "(_rflatten (cons (_rconcat _q _rempty) (cdr (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_4 $0 (_rconcat _f _s) _rempty": "(_rflatten (cons (_rconcat _rempty (_rconcat _f _s)) (cdr (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_4 $0 _s _rempty": "(_rflatten (cons (_rconcat _rempty _s) (cdr (cdr (_rsplit _rdot $0)))))"
                },
                {
                    "fn_4 $0 _w _rempty": "(_rflatten (cons (_rconcat _rempty _w) (cdr (cdr (_rsplit _rdot $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (_rappend #1 (_rsplit _c #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (_rappend $0 (_rsplit _c $1)))))",
            "arity": 2,
            "name": "fn_5",
            "utility": 2727,
            "final_cost": 64363,
            "compression_ratio": 1.0423690629709617,
            "cumulative_compression_ratio": 1.9530320215030375,
            "num_uses": 77,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_5 $0 (_rconcat _a _rempty)": "(_rflatten (_rappend (_rconcat _a _rempty) (_rsplit _c $0)))"
                },
                {
                    "fn_5 $0 (_rconcat _p _rempty)": "(_rflatten (_rappend (_rconcat _p _rempty) (_rsplit _c $0)))"
                },
                {
                    "fn_5 $0 (_rconcat _rempty _a)": "(_rflatten (_rappend (_rconcat _rempty _a) (_rsplit _c $0)))"
                },
                {
                    "fn_5 (fn_2 $0 _t) (_rconcat _rempty _m)": "(_rflatten (_rappend (_rconcat _rempty _m) (_rsplit _c (fn_2 $0 _t))))"
                },
                {
                    "fn_5 $0 (_rconcat _rempty _p)": "(_rflatten (_rappend (_rconcat _rempty _p) (_rsplit _c $0)))"
                },
                {
                    "fn_5 $0 (_rconcat _rempty _w)": "(_rflatten (_rappend (_rconcat _rempty _w) (_rsplit _c $0)))"
                },
                {
                    "fn_5 $0 _a": "(_rflatten (_rappend _a (_rsplit _c $0)))"
                },
                {
                    "fn_5 (fn_2 $0 _rempty) _c": "(_rflatten (_rappend _c (_rsplit _c (fn_2 $0 _rempty))))"
                },
                {
                    "fn_5 $0 _d": "(_rflatten (_rappend _d (_rsplit _c $0)))"
                },
                {
                    "fn_5 (fn_3 $0 (lam $0)) _d": "(_rflatten (_rappend _d (_rsplit _c (fn_3 $0 (lam $0)))))"
                },
                {
                    "fn_5 $0 _f": "(_rflatten (_rappend _f (_rsplit _c $0)))"
                },
                {
                    "fn_5 (fn_2 $0 _o) _g": "(_rflatten (_rappend _g (_rsplit _c (fn_2 $0 _o))))"
                },
                {
                    "fn_5 (fn_3 (fn_2 $0 _o) (lam $0)) _g": "(_rflatten (_rappend _g (_rsplit _c (fn_3 (fn_2 $0 _o) (lam $0)))))"
                },
                {
                    "fn_5 $0 _i": "(_rflatten (_rappend _i (_rsplit _c $0)))"
                },
                {
                    "fn_5 (_rflatten (cons _rempty (_rsplit _g (fn_2 $0 _r)))) _j": "(_rflatten (_rappend _j (_rsplit _c (_rflatten (cons _rempty (_rsplit _g (fn_2 $0 _r)))))))"
                },
                {
                    "fn_5 (fn_2 $0 _r) _j": "(_rflatten (_rappend _j (_rsplit _c (fn_2 $0 _r))))"
                },
                {
                    "fn_5 (fn_2 (fn_3 $0 (lam $0)) _r) _j": "(_rflatten (_rappend _j (_rsplit _c (fn_2 (fn_3 $0 (lam $0)) _r))))"
                },
                {
                    "fn_5 (fn_3 (fn_2 $0 _r) (lam $0)) _j": "(_rflatten (_rappend _j (_rsplit _c (fn_3 (fn_2 $0 _r) (lam $0)))))"
                },
                {
                    "fn_5 $0 _k": "(_rflatten (_rappend _k (_rsplit _c $0)))"
                },
                {
                    "fn_5 (_rflatten (_rsplit _rempty $0)) _k": "(_rflatten (_rappend _k (_rsplit _c (_rflatten (_rsplit _rempty $0)))))"
                },
                {
                    "fn_5 (fn_3 $0 (lam $0)) _k": "(_rflatten (_rappend _k (_rsplit _c (fn_3 $0 (lam $0)))))"
                },
                {
                    "fn_5 (fn_2 $0 _o) _m": "(_rflatten (_rappend _m (_rsplit _c (fn_2 $0 _o))))"
                },
                {
                    "fn_5 (fn_2 $0 _t) _m": "(_rflatten (_rappend _m (_rsplit _c (fn_2 $0 _t))))"
                },
                {
                    "fn_5 (fn_2 $0 (_rconcat _a _rempty)) _o": "(_rflatten (_rappend _o (_rsplit _c (fn_2 $0 (_rconcat _a _rempty)))))"
                },
                {
                    "fn_5 (fn_2 $0 _a) _o": "(_rflatten (_rappend _o (_rsplit _c (fn_2 $0 _a))))"
                },
                {
                    "fn_5 $0 _p": "(_rflatten (_rappend _p (_rsplit _c $0)))"
                },
                {
                    "fn_5 (fn_2 $0 (_rconcat _x _rempty)) _p": "(_rflatten (_rappend _p (_rsplit _c (fn_2 $0 (_rconcat _x _rempty)))))"
                },
                {
                    "fn_5 (fn_2 $0 _x) _p": "(_rflatten (_rappend _p (_rsplit _c (fn_2 $0 _x))))"
                },
                {
                    "fn_5 (fn_3 $0 (lam $0)) _p": "(_rflatten (_rappend _p (_rsplit _c (fn_3 $0 (lam $0)))))"
                },
                {
                    "fn_5 $0 _q": "(_rflatten (_rappend _q (_rsplit _c $0)))"
                },
                {
                    "fn_5 (_rflatten (_rappend _rempty (_rsplit _c $0))) _q": "(_rflatten (_rappend _q (_rsplit _c (_rflatten (_rappend _rempty (_rsplit _c $0))))))"
                },
                {
                    "fn_5 (fn_2 (fn_2 (fn_2 $0 _rempty) _j) _r) _q": "(_rflatten (_rappend _q (_rsplit _c (fn_2 (fn_2 (fn_2 $0 _rempty) _j) _r))))"
                },
                {
                    "fn_5 (fn_3 $0 (lam $0)) _q": "(_rflatten (_rappend _q (_rsplit _c (fn_3 $0 (lam $0)))))"
                },
                {
                    "fn_5 $0 _rempty": "(_rflatten (_rappend _rempty (_rsplit _c $0)))"
                },
                {
                    "fn_5 (_rflatten (_rappend _q (_rsplit _c $0))) _rempty": "(_rflatten (_rappend _rempty (_rsplit _c (_rflatten (_rappend _q (_rsplit _c $0))))))"
                },
                {
                    "fn_5 (fn_0 $0 (_rconcat _r _a) _s) _rempty": "(_rflatten (_rappend _rempty (_rsplit _c (fn_0 $0 (_rconcat _r _a) _s))))"
                },
                {
                    "fn_5 (fn_0 $0 _rempty _m) _rempty": "(_rflatten (_rappend _rempty (_rsplit _c (fn_0 $0 _rempty _m))))"
                },
                {
                    "fn_5 (fn_3 $0 (lam (_rconcat _q _j))) _rempty": "(_rflatten (_rappend _rempty (_rsplit _c (fn_3 $0 (lam (_rconcat _q _j))))))"
                },
                {
                    "fn_5 (fn_3 $0 (lam (if (_rmatch $0 _t) (_rconcat $0 _y) $0))) _rempty": "(_rflatten (_rappend _rempty (_rsplit _c (fn_3 $0 (lam (if (_rmatch $0 _t) (_rconcat $0 _y) $0))))))"
                },
                {
                    "fn_5 (fn_2 $0 _x) _s": "(_rflatten (_rappend _s (_rsplit _c (fn_2 $0 _x))))"
                },
                {
                    "fn_5 (fn_2 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _d) _t": "(_rflatten (_rappend _t (_rsplit _c (fn_2 (_rflatten (_rrevcdr (_rsplit _rempty $0))) _d))))"
                },
                {
                    "fn_5 (fn_2 (fn_2 $0 _rempty) _d) _t": "(_rflatten (_rappend _t (_rsplit _c (fn_2 (fn_2 $0 _rempty) _d))))"
                },
                {
                    "fn_5 (fn_2 (fn_2 (fn_2 $0 _rempty) _t) _d) _t": "(_rflatten (_rappend _t (_rsplit _c (fn_2 (fn_2 (fn_2 $0 _rempty) _t) _d))))"
                },
                {
                    "fn_5 (fn_2 (fn_2 (fn_2 $0 _t) _rempty) _d) _t": "(_rflatten (_rappend _t (_rsplit _c (fn_2 (fn_2 (fn_2 $0 _t) _rempty) _d))))"
                },
                {
                    "fn_5 (fn_3 (fn_2 (fn_2 $0 _rempty) _d) (lam $0)) _t": "(_rflatten (_rappend _t (_rsplit _c (fn_3 (fn_2 (fn_2 $0 _rempty) _d) (lam $0)))))"
                },
                {
                    "fn_5 $0 _u": "(_rflatten (_rappend _u (_rsplit _c $0)))"
                },
                {
                    "fn_5 (fn_2 (fn_2 $0 _rempty) _o) _u": "(_rflatten (_rappend _u (_rsplit _c (fn_2 (fn_2 $0 _rempty) _o))))"
                },
                {
                    "fn_5 (fn_3 $0 (lam $0)) _u": "(_rflatten (_rappend _u (_rsplit _c (fn_3 $0 (lam $0)))))"
                },
                {
                    "fn_5 (_rflatten (_rappend _c (_rsplit _c (fn_2 $0 _rempty)))) _v": "(_rflatten (_rappend _v (_rsplit _c (_rflatten (_rappend _c (_rsplit _c (fn_2 $0 _rempty)))))))"
                },
                {
                    "fn_5 (fn_2 $0 _c) _v": "(_rflatten (_rappend _v (_rsplit _c (fn_2 $0 _c))))"
                },
                {
                    "fn_5 (fn_3 (fn_2 $0 _c) (lam $0)) _v": "(_rflatten (_rappend _v (_rsplit _c (fn_3 (fn_2 $0 _c) (lam $0)))))"
                },
                {
                    "fn_5 $0 _w": "(_rflatten (_rappend _w (_rsplit _c $0)))"
                },
                {
                    "fn_5 (fn_3 $0 (lam $0)) _w": "(_rflatten (_rappend _w (_rsplit _c (fn_3 $0 (lam $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_3 #2 (lam (if (_rmatch $0 #1) (_rconcat #0 $0) $0)))",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (if (_rmatch $0 $2) (_rconcat $3 $0) $0))))))",
            "arity": 3,
            "name": "fn_6",
            "utility": 2225,
            "final_cost": 62138,
            "compression_ratio": 1.0358073964401815,
            "cumulative_compression_ratio": 2.022965013357366,
            "num_uses": 18,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_6 _d (_rconcat _rempty _c) $0": "(fn_3 $0 (lam (if (_rmatch $0 (_rconcat _rempty _c)) (_rconcat _d $0) $0)))"
                },
                {
                    "fn_6 _b (_rconcat _rempty _r) $0": "(fn_3 $0 (lam (if (_rmatch $0 (_rconcat _rempty _r)) (_rconcat _b $0) $0)))"
                },
                {
                    "fn_6 _k _b $0": "(fn_3 $0 (lam (if (_rmatch $0 _b) (_rconcat _k $0) $0)))"
                },
                {
                    "fn_6 (_rconcat _rempty _d) _c $0": "(fn_3 $0 (lam (if (_rmatch $0 _c) (_rconcat (_rconcat _rempty _d) $0) $0)))"
                },
                {
                    "fn_6 _d _c $0": "(fn_3 $0 (lam (if (_rmatch $0 _c) (_rconcat _d $0) $0)))"
                },
                {
                    "fn_6 (_rconcat _q _rempty) _g $0": "(fn_3 $0 (lam (if (_rmatch $0 _g) (_rconcat (_rconcat _q _rempty) $0) $0)))"
                },
                {
                    "fn_6 (_rconcat _rempty _q) _g $0": "(fn_3 $0 (lam (if (_rmatch $0 _g) (_rconcat (_rconcat _rempty _q) $0) $0)))"
                },
                {
                    "fn_6 _q _g $0": "(fn_3 $0 (lam (if (_rmatch $0 _g) (_rconcat _q $0) $0)))"
                },
                {
                    "fn_6 _w _g $0": "(fn_3 $0 (lam (if (_rmatch $0 _g) (_rconcat _w $0) $0)))"
                },
                {
                    "fn_6 #0 _p $0": "(fn_3 $0 (lam (if (_rmatch $0 _p) (_rconcat $0 $0) $0)))"
                },
                {
                    "fn_6 (_rconcat _rempty _b) _r $0": "(fn_3 $0 (lam (if (_rmatch $0 _r) (_rconcat (_rconcat _rempty _b) $0) $0)))"
                },
                {
                    "fn_6 _b _r $0": "(fn_3 $0 (lam (if (_rmatch $0 _r) (_rconcat _b $0) $0)))"
                },
                {
                    "fn_6 _t _s $0": "(fn_3 $0 (lam (if (_rmatch $0 _s) (_rconcat _t $0) $0)))"
                },
                {
                    "fn_6 _k _b (fn_3 $0 (lam $0))": "(fn_3 (fn_3 $0 (lam $0)) (lam (if (_rmatch $0 _b) (_rconcat _k $0) $0)))"
                },
                {
                    "fn_6 _q _g (fn_3 $0 (lam $0))": "(fn_3 (fn_3 $0 (lam $0)) (lam (if (_rmatch $0 _g) (_rconcat _q $0) $0)))"
                },
                {
                    "fn_6 _b _r (fn_3 $0 (lam $0))": "(fn_3 (fn_3 $0 (lam $0)) (lam (if (_rmatch $0 _r) (_rconcat _b $0) $0)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(_rflatten (cons #1 (_rsplit _g #0)))",
            "dreamcoder": "#(lambda (lambda (_rflatten (cons $0 (_rsplit _g $1)))))",
            "arity": 2,
            "name": "fn_7",
            "utility": 1818,
            "final_cost": 60320,
            "compression_ratio": 1.0301392572944297,
            "cumulative_compression_ratio": 2.083935676392573,
            "num_uses": 25,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_7 $0 (_rconcat _rempty _b)": "(_rflatten (cons (_rconcat _rempty _b) (_rsplit _g $0)))"
                },
                {
                    "fn_7 $0 (_rconcat _rempty _y)": "(_rflatten (cons (_rconcat _rempty _y) (_rsplit _g $0)))"
                },
                {
                    "fn_7 $0 (_rconcat _y _rempty)": "(_rflatten (cons (_rconcat _y _rempty) (_rsplit _g $0)))"
                },
                {
                    "fn_7 $0 _a": "(_rflatten (cons _a (_rsplit _g $0)))"
                },
                {
                    "fn_7 $0 _b": "(_rflatten (cons _b (_rsplit _g $0)))"
                },
                {
                    "fn_7 (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))) _b": "(_rflatten (cons _b (_rsplit _g (_rflatten (cons _rempty (cdr (_rsplit _rempty $0)))))))"
                },
                {
                    "fn_7 $0 _c": "(_rflatten (cons _c (_rsplit _g $0)))"
                },
                {
                    "fn_7 $0 _f": "(_rflatten (cons _f (_rsplit _g $0)))"
                },
                {
                    "fn_7 (_rflatten (cons _s (cdr (cdr (_rsplit _rdot $0))))) _f": "(_rflatten (cons _f (_rsplit _g (_rflatten (cons _s (cdr (cdr (_rsplit _rdot $0))))))))"
                },
                {
                    "fn_7 (fn_4 $0 _s _rempty) _f": "(_rflatten (cons _f (_rsplit _g (fn_4 $0 _s _rempty))))"
                },
                {
                    "fn_7 $0 _j": "(_rflatten (cons _j (_rsplit _g $0)))"
                },
                {
                    "fn_7 (_rflatten (cons _o (cdr (_rsplit _rdot $0)))) _j": "(_rflatten (cons _j (_rsplit _g (_rflatten (cons _o (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_7 (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) _q": "(_rflatten (cons _q (_rsplit _g (_rflatten (cons _a (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_7 (_rflatten (cons _m (cdr (_rsplit _rdot $0)))) _r": "(_rflatten (cons _r (_rsplit _g (_rflatten (cons _m (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_7 (fn_2 $0 _r) _rempty": "(_rflatten (cons _rempty (_rsplit _g (fn_2 $0 _r))))"
                },
                {
                    "fn_7 (_rflatten (cons _b (cdr (_rsplit _rdot $0)))) _s": "(_rflatten (cons _s (_rsplit _g (_rflatten (cons _b (cdr (_rsplit _rdot $0)))))))"
                },
                {
                    "fn_7 $0 _t": "(_rflatten (cons _t (_rsplit _g $0)))"
                },
                {
                    "fn_7 $0 _v": "(_rflatten (cons _v (_rsplit _g $0)))"
                },
                {
                    "fn_7 $0 _y": "(_rflatten (cons _y (_rsplit _g $0)))"
                },
                {
                    "fn_7 (fn_3 $0 (lam $0)) _y": "(_rflatten (cons _y (_rsplit _g (fn_3 $0 (lam $0)))))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_3 #2 (lam (_rconcat #1 #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (map $0 (_rsplit _rempty $1))))) $0 (lambda (_rconcat $2 $3))))))",
            "arity": 3,
            "name": "fn_8",
            "utility": 1326,
            "final_cost": 58994,
            "compression_ratio": 1.022476862053768,
            "cumulative_compression_ratio": 2.130776011119775,
            "num_uses": 74,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_8 _b #0 $0": "(fn_3 $0 (lam (_rconcat $0 _b)))"
                },
                {
                    "fn_8 _v #0 $0": "(fn_3 $0 (lam (_rconcat $0 _v)))"
                },
                {
                    "fn_8 _n (_rconcat _f _rempty) $0": "(fn_3 $0 (lam (_rconcat (_rconcat _f _rempty) _n)))"
                },
                {
                    "fn_8 _rempty (_rconcat _g _i) $0": "(fn_3 $0 (lam (_rconcat (_rconcat _g _i) _rempty)))"
                },
                {
                    "fn_8 _i (_rconcat _g _rempty) $0": "(fn_3 $0 (lam (_rconcat (_rconcat _g _rempty) _i)))"
                },
                {
                    "fn_8 _rempty (_rconcat _j _u) $0": "(fn_3 $0 (lam (_rconcat (_rconcat _j _u) _rempty)))"
                },
                {
                    "fn_8 _v (_rconcat _rempty #0) $0": "(fn_3 $0 (lam (_rconcat (_rconcat _rempty $0) _v)))"
                },
                {
                    "fn_8 _u (_rconcat _rempty _j) $0": "(fn_3 $0 (lam (_rconcat (_rconcat _rempty _j) _u)))"
                },
                {
                    "fn_8 _g (_rconcat _rempty _n) $0": "(fn_3 $0 (lam (_rconcat (_rconcat _rempty _n) _g)))"
                },
                {
                    "fn_8 _n _f $0": "(fn_3 $0 (lam (_rconcat _f _n)))"
                },
                {
                    "fn_8 _i _g $0": "(fn_3 $0 (lam (_rconcat _g _i)))"
                },
                {
                    "fn_8 _s _h $0": "(fn_3 $0 (lam (_rconcat _h _s)))"
                },
                {
                    "fn_8 _x _h $0": "(fn_3 $0 (lam (_rconcat _h _x)))"
                },
                {
                    "fn_8 _p _i $0": "(fn_3 $0 (lam (_rconcat _i _p)))"
                },
                {
                    "fn_8 (_rconcat _rempty _u) _j $0": "(fn_3 $0 (lam (_rconcat _j (_rconcat _rempty _u))))"
                },
                {
                    "fn_8 _u _j $0": "(fn_3 $0 (lam (_rconcat _j _u)))"
                },
                {
                    "fn_8 #0 _l $0": "(fn_3 $0 (lam (_rconcat _l $0)))"
                },
                {
                    "fn_8 _g _n $0": "(fn_3 $0 (lam (_rconcat _n _g)))"
                },
                {
                    "fn_8 _i _n $0": "(fn_3 $0 (lam (_rconcat _n _i)))"
                },
                {
                    "fn_8 #0 _q $0": "(fn_3 $0 (lam (_rconcat _q $0)))"
                },
                {
                    "fn_8 _j _q $0": "(fn_3 $0 (lam (_rconcat _q _j)))"
                },
                {
                    "fn_8 _v _r $0": "(fn_3 $0 (lam (_rconcat _r _v)))"
                },
                {
                    "fn_8 (_rconcat _f _n) _rempty $0": "(fn_3 $0 (lam (_rconcat _rempty (_rconcat _f _n))))"
                },
                {
                    "fn_8 _j _rempty $0": "(fn_3 $0 (lam (_rconcat _rempty _j)))"
                },
                {
                    "fn_8 _e _u $0": "(fn_3 $0 (lam (_rconcat _u _e)))"
                },
                {
                    "fn_8 _t _w $0": "(fn_3 $0 (lam (_rconcat _w _t)))"
                },
                {
                    "fn_8 _t _y $0": "(fn_3 $0 (lam (_rconcat _y _t)))"
                },
                {
                    "fn_8 _t _w (_rflatten (_rsplit _e $0))": "(fn_3 (_rflatten (_rsplit _e $0)) (lam (_rconcat _w _t)))"
                },
                {
                    "fn_8 _x _h (_rflatten (_rsplit _rdot $0))": "(fn_3 (_rflatten (_rsplit _rdot $0)) (lam (_rconcat _h _x)))"
                },
                {
                    "fn_8 #0 _l (_rflatten (_rsplit _rempty $0))": "(fn_3 (_rflatten (_rsplit _rempty $0)) (lam (_rconcat _l $0)))"
                },
                {
                    "fn_8 #0 _q (_rflatten (_rsplit _rempty $0))": "(fn_3 (_rflatten (_rsplit _rempty $0)) (lam (_rconcat _q $0)))"
                },
                {
                    "fn_8 _e _u (_rflatten (cons _a (cdr (_rsplit _rdot $0))))": "(fn_3 (_rflatten (cons _a (cdr (_rsplit _rdot $0)))) (lam (_rconcat _u _e)))"
                },
                {
                    "fn_8 _n _f (_rflatten (cons _b (cdr (_rsplit _rdot $0))))": "(fn_3 (_rflatten (cons _b (cdr (_rsplit _rdot $0)))) (lam (_rconcat _f _n)))"
                },
                {
                    "fn_8 _e _u (_rflatten (cons _b (cdr (_rsplit _rdot $0))))": "(fn_3 (_rflatten (cons _b (cdr (_rsplit _rdot $0)))) (lam (_rconcat _u _e)))"
                },
                {
                    "fn_8 _e _u (fn_2 $0 _e)": "(fn_3 (fn_2 $0 _e) (lam (_rconcat _u _e)))"
                },
                {
                    "fn_8 _n _f (fn_2 $0 _i)": "(fn_3 (fn_2 $0 _i) (lam (_rconcat _f _n)))"
                },
                {
                    "fn_8 _i _g (fn_2 $0 _i)": "(fn_3 (fn_2 $0 _i) (lam (_rconcat _g _i)))"
                },
                {
                    "fn_8 _i _n (fn_2 $0 _i)": "(fn_3 (fn_2 $0 _i) (lam (_rconcat _n _i)))"
                },
                {
                    "fn_8 _t _w (fn_2 $0 _t)": "(fn_3 (fn_2 $0 _t) (lam (_rconcat _w _t)))"
                },
                {
                    "fn_8 _b #0 (fn_3 $0 (lam $0))": "(fn_3 (fn_3 $0 (lam $0)) (lam (_rconcat $0 _b)))"
                },
                {
                    "fn_8 _v #0 (fn_3 $0 (lam $0))": "(fn_3 (fn_3 $0 (lam $0)) (lam (_rconcat $0 _v)))"
                },
                {
                    "fn_8 _i _g (fn_3 $0 (lam $0))": "(fn_3 (fn_3 $0 (lam $0)) (lam (_rconcat _g _i)))"
                },
                {
                    "fn_8 _p _i (fn_3 $0 (lam $0))": "(fn_3 (fn_3 $0 (lam $0)) (lam (_rconcat _i _p)))"
                },
                {
                    "fn_8 #0 _l (fn_3 $0 (lam $0))": "(fn_3 (fn_3 $0 (lam $0)) (lam (_rconcat _l $0)))"
                },
                {
                    "fn_8 _g _n (fn_3 $0 (lam $0))": "(fn_3 (fn_3 $0 (lam $0)) (lam (_rconcat _n _g)))"
                },
                {
                    "fn_8 _i _n (fn_3 $0 (lam $0))": "(fn_3 (fn_3 $0 (lam $0)) (lam (_rconcat _n _i)))"
                },
                {
                    "fn_8 #0 _q (fn_3 $0 (lam $0))": "(fn_3 (fn_3 $0 (lam $0)) (lam (_rconcat _q $0)))"
                },
                {
                    "fn_8 _j _q (fn_3 $0 (lam $0))": "(fn_3 (fn_3 $0 (lam $0)) (lam (_rconcat _q _j)))"
                },
                {
                    "fn_8 #0 _n (fn_3 $0 (lam _g))": "(fn_3 (fn_3 $0 (lam _g)) (lam (_rconcat _n $0)))"
                },
                {
                    "fn_8 _x _h (fn_3 $0 (lam _h))": "(fn_3 (fn_3 $0 (lam _h)) (lam (_rconcat _h _x)))"
                },
                {
                    "fn_8 _i _n (fn_3 $0 (lam _i))": "(fn_3 (fn_3 $0 (lam _i)) (lam (_rconcat _n _i)))"
                },
                {
                    "fn_8 #0 _q (fn_3 $0 (lam _j))": "(fn_3 (fn_3 $0 (lam _j)) (lam (_rconcat _q $0)))"
                },
                {
                    "fn_8 _t _w (fn_3 $0 (lam _t))": "(fn_3 (fn_3 $0 (lam _t)) (lam (_rconcat _w _t)))"
                },
                {
                    "fn_8 #0 _y (fn_3 $0 (lam _t))": "(fn_3 (fn_3 $0 (lam _t)) (lam (_rconcat _y $0)))"
                },
                {
                    "fn_8 _t #0 (fn_3 $0 (lam _y))": "(fn_3 (fn_3 $0 (lam _y)) (lam (_rconcat $0 _t)))"
                },
                {
                    "fn_8 _t _y (fn_3 $0 (lam _y))": "(fn_3 (fn_3 $0 (lam _y)) (lam (_rconcat _y _t)))"
                },
                {
                    "fn_8 #0 _l (fn_5 $0 _rempty)": "(fn_3 (fn_5 $0 _rempty) (lam (_rconcat _l $0)))"
                },
                {
                    "fn_8 _t _y (fn_5 $0 _rempty)": "(fn_3 (fn_5 $0 _rempty) (lam (_rconcat _y _t)))"
                }
            ],
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_2 #2 (_rconcat #1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (#(lambda (lambda (_rflatten (_rappend $0 (_rrevcdr (_rsplit _rempty $1)))))) $0 (_rconcat $1 $2)))))",
            "arity": 3,
            "name": "fn_9",
            "utility": 1313,
            "final_cost": 57681,
            "compression_ratio": 1.0227631282398018,
            "cumulative_compression_ratio": 2.1792791387111876,
            "num_uses": 48,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": [
                {
                    "fn_9 _rempty (_rconcat _a _o) $0": "(fn_2 $0 (_rconcat (_rconcat _a _o) _rempty))"
                },
                {
                    "fn_9 _o (_rconcat _a _rempty) $0": "(fn_2 $0 (_rconcat (_rconcat _a _rempty) _o))"
                },
                {
                    "fn_9 _j (_rconcat _o _rempty) $0": "(fn_2 $0 (_rconcat (_rconcat _o _rempty) _j))"
                },
                {
                    "fn_9 _v (_rconcat _rempty _c) $0": "(fn_2 $0 (_rconcat (_rconcat _rempty _c) _v))"
                },
                {
                    "fn_9 _o _a $0": "(fn_2 $0 (_rconcat _a _o))"
                },
                {
                    "fn_9 _rempty _a $0": "(fn_2 $0 (_rconcat _a _rempty))"
                },
                {
                    "fn_9 _v _c $0": "(fn_2 $0 (_rconcat _c _v))"
                },
                {
                    "fn_9 _rempty _i $0": "(fn_2 $0 (_rconcat _i _rempty))"
                },
                {
                    "fn_9 _y _i $0": "(fn_2 $0 (_rconcat _i _y))"
                },
                {
                    "fn_9 (_rconcat _j _rempty) _o $0": "(fn_2 $0 (_rconcat _o (_rconcat _j _rempty)))"
                },
                {
                    "fn_9 (_rconcat _m _rempty) _o $0": "(fn_2 $0 (_rconcat _o (_rconcat _m _rempty)))"
                },
                {
                    "fn_9 _g _o $0": "(fn_2 $0 (_rconcat _o _g))"
                },
                {
                    "fn_9 _j _o $0": "(fn_2 $0 (_rconcat _o _j))"
                },
                {
                    "fn_9 _m _o $0": "(fn_2 $0 (_rconcat _o _m))"
                },
                {
                    "fn_9 _j _r $0": "(fn_2 $0 (_rconcat _r _j))"
                },
                {
                    "fn_9 _rempty _r $0": "(fn_2 $0 (_rconcat _r _rempty))"
                },
                {
                    "fn_9 _i _rempty $0": "(fn_2 $0 (_rconcat _rempty _i))"
                },
                {
                    "fn_9 _r _rempty $0": "(fn_2 $0 (_rconcat _rempty _r))"
                },
                {
                    "fn_9 _rempty _rempty $0": "(fn_2 $0 (_rconcat _rempty _rempty))"
                },
                {
                    "fn_9 _m _t $0": "(fn_2 $0 (_rconcat _t _m))"
                },
                {
                    "fn_9 _p _x $0": "(fn_2 $0 (_rconcat _x _p))"
                },
                {
                    "fn_9 _rempty _x $0": "(fn_2 $0 (_rconcat _x _rempty))"
                },
                {
                    "fn_9 _s _x $0": "(fn_2 $0 (_rconcat _x _s))"
                },
                {
                    "fn_9 _y _x $0": "(fn_2 $0 (_rconcat _x _y))"
                },
                {
                    "fn_9 _u _o (_rflatten (_rrevcdr (_rsplit _rempty $0)))": "(fn_2 (_rflatten (_rrevcdr (_rsplit _rempty $0))) (_rconcat _o _u))"
                },
                {
                    "fn_9 _y _i (_rflatten (_rsplit _rempty $0))": "(fn_2 (_rflatten (_rsplit _rempty $0)) (_rconcat _i _y))"
                },
                {
                    "fn_9 _u _o (fn_2 $0 (_rconcat _rempty _rempty))": "(fn_2 (fn_2 $0 (_rconcat _rempty _rempty)) (_rconcat _o _u))"
                },
                {
                    "fn_9 _q _r (fn_2 $0 (_rconcat _rempty _rempty))": "(fn_2 (fn_2 $0 (_rconcat _rempty _rempty)) (_rconcat _r _q))"
                },
                {
                    "fn_9 _j _o (fn_2 $0 _j)": "(fn_2 (fn_2 $0 _j) (_rconcat _o _j))"
                },
                {
                    "fn_9 _j (_rconcat _rempty _b) (fn_2 $0 _rempty)": "(fn_2 (fn_2 $0 _rempty) (_rconcat (_rconcat _rempty _b) _j))"
                },
                {
                    "fn_9 _j _b (fn_2 $0 _rempty)": "(fn_2 (fn_2 $0 _rempty) (_rconcat _b _j))"
                },
                {
                    "fn_9 _u _o (fn_2 $0 _rempty)": "(fn_2 (fn_2 $0 _rempty) (_rconcat _o _u))"
                },
                {
                    "fn_9 _q _r (fn_2 $0 _rempty)": "(fn_2 (fn_2 $0 _rempty) (_rconcat _r _q))"
                },
                {
                    "fn_9 _m _t (fn_2 $0 _t)": "(fn_2 (fn_2 $0 _t) (_rconcat _t _m))"
                },
                {
                    "fn_9 _y _i (fn_2 $0 _y)": "(fn_2 (fn_2 $0 _y) (_rconcat _i _y))"
                },
                {
                    "fn_9 _j _b (fn_2 (fn_2 $0 _j) _rempty)": "(fn_2 (fn_2 (fn_2 $0 _j) _rempty) (_rconcat _b _j))"
                },
                {
                    "fn_9 _j _b (fn_2 (fn_2 $0 _rempty) _j)": "(fn_2 (fn_2 (fn_2 $0 _rempty) _j) (_rconcat _b _j))"
                },
                {
                    "fn_9 _q _r (fn_2 (fn_2 $0 _rempty) _j)": "(fn_2 (fn_2 (fn_2 $0 _rempty) _j) (_rconcat _r _q))"
                },
                {
                    "fn_9 _q _r (fn_2 (fn_3 $0 (lam $0)) _rempty)": "(fn_2 (fn_2 (fn_3 $0 (lam $0)) _rempty) (_rconcat _r _q))"
                },
                {
                    "fn_9 _g _o (fn_3 $0 (lam $0))": "(fn_2 (fn_3 $0 (lam $0)) (_rconcat _o _g))"
                },
                {
                    "fn_9 _j _o (fn_3 $0 (lam $0))": "(fn_2 (fn_3 $0 (lam $0)) (_rconcat _o _j))"
                }
            ],
            "dc_comparison_millis": null
        }
    ]
}