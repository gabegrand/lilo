{
    "metadata": {},
    "model_initializers": [
        {
            "model_type": "grammar",
            "model_loader": null,
            "model_initializer_fn": "load_model",
            "params": {}
        }
    ],
    "experiment_iterator": {
        "max_iterations": null,
        "task_batcher": {
            "model_type": "ground_truth_ordered_task_batcher",
            "params": {
                "global_batch_size": null,
                "verbose": true
            }
        },
        "loop_blocks": [
            {
                "experiment_block_type": "state_fn",
                "state_fn": "log_metadata",
                "params": {
                    "verbosity": 3
                }
            },
            {
                "experiment_block_type": "state_fn",
                "state_fn": "log_frontiers",
                "params": {
                  "verbosity": 3
                }
            },
            {
                "experiment_block_type": "model_fn",
                "model_type": "grammar",
                "model_fn": "infer_programs_for_tasks",
                "task_split": "train",
                "task_batch_size": "all",
                "params": {
                  "enumeration_timeout": 10
                }
            },
            {
                "experiment_block_type": "state_fn",
                "state_fn": "log_frontiers",
                "params": {
                  "verbosity": 3
                }
            },
            {
                "experiment_block_type": "model_fn",
                "model_type": "grammar",
                "model_fn": "infer_programs_for_tasks",
                "task_split": "test",
                "task_batch_size": "all",
                "params": {
                  "enumeration_timeout": 10
                }
            },
            {
                "experiment_block_type": "state_fn",
                "state_fn": "log_frontiers",
                "params": {
                  "verbosity": 3
                }
            },
            {
                "experiment_block_type": "checkpoint",
                "state_to_checkpoint": [
                    "frontiers"
                ],
                "models_to_checkpoint": [
                    "grammar"
                ]
            }
        ]
    }
}